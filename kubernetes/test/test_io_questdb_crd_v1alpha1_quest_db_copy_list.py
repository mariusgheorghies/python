# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1.25.12
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import kubernetes.client
from kubernetes.client.models.io_questdb_crd_v1alpha1_quest_db_copy_list import IoQuestdbCrdV1alpha1QuestDBCopyList  # noqa: E501
from kubernetes.client.rest import ApiException

class TestIoQuestdbCrdV1alpha1QuestDBCopyList(unittest.TestCase):
    """IoQuestdbCrdV1alpha1QuestDBCopyList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test IoQuestdbCrdV1alpha1QuestDBCopyList
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = kubernetes.client.models.io_questdb_crd_v1alpha1_quest_db_copy_list.IoQuestdbCrdV1alpha1QuestDBCopyList()  # noqa: E501
        if include_optional :
            return IoQuestdbCrdV1alpha1QuestDBCopyList(
                api_version = '0', 
                items = [
                    kubernetes.client.models.io/questdb/crd/v1alpha1/quest_db_copy.io.questdb.crd.v1alpha1.QuestDBCopy(
                        api_version = '0', 
                        kind = '0', 
                        metadata = kubernetes.client.models.v1/object_meta.v1.ObjectMeta(
                            annotations = {
                                'key' : '0'
                                }, 
                            creation_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            deletion_grace_period_seconds = 56, 
                            deletion_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            finalizers = [
                                '0'
                                ], 
                            generate_name = '0', 
                            generation = 56, 
                            labels = {
                                'key' : '0'
                                }, 
                            managed_fields = [
                                kubernetes.client.models.v1/managed_fields_entry.v1.ManagedFieldsEntry(
                                    api_version = '0', 
                                    fields_type = '0', 
                                    fields_v1 = kubernetes.client.models.fields_v1.fieldsV1(), 
                                    manager = '0', 
                                    operation = '0', 
                                    subresource = '0', 
                                    time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                ], 
                            name = '0', 
                            namespace = '0', 
                            owner_references = [
                                kubernetes.client.models.v1/owner_reference.v1.OwnerReference(
                                    api_version = '0', 
                                    block_owner_deletion = True, 
                                    controller = True, 
                                    kind = '0', 
                                    name = '0', 
                                    uid = '0', )
                                ], 
                            resource_version = '0', 
                            self_link = '0', 
                            uid = '0', ), 
                        spec = kubernetes.client.models.io_questdb_crd_v1alpha1_quest_db_copy_spec.io_questdb_crd_v1alpha1_QuestDBCopy_spec(
                            cloud_ids = kubernetes.client.models.io_questdb_crd_v1alpha1_quest_db_copy_spec_cloud_ids.io_questdb_crd_v1alpha1_QuestDBCopy_spec_cloudIds(
                                db_name = '0', 
                                instance_uuid = '0', 
                                org_id = '0', 
                                volume_uuid = '0', ), 
                            copy_instance_type = '0', 
                            destination = kubernetes.client.models.io_questdb_crd_v1alpha1_quest_db_copy_spec_destination.io_questdb_crd_v1alpha1_QuestDBCopy_spec_destination(
                                quest_db_name = '0', 
                                table_name = '0', ), 
                            options = kubernetes.client.models.io_questdb_crd_v1alpha1_quest_db_copy_spec_options.io_questdb_crd_v1alpha1_QuestDBCopy_spec_options(
                                delimiter = '0', 
                                headers = True, 
                                on_error = '0', 
                                partition_by = '0', 
                                timestamp_column = '0', 
                                timestamp_format = '0', ), 
                            source = kubernetes.client.models.io_questdb_crd_v1alpha1_quest_db_copy_spec_source.io_questdb_crd_v1alpha1_QuestDBCopy_spec_source(
                                s3 = kubernetes.client.models.io_questdb_crd_v1alpha1_quest_db_copy_spec_source_s3.io_questdb_crd_v1alpha1_QuestDBCopy_spec_source_s3(
                                    bucket = '0', 
                                    key = '0', ), 
                                url = kubernetes.client.models.io_argoproj_v1alpha1_application_set_spec_git_files.io_argoproj_v1alpha1_ApplicationSet_spec_git_files(
                                    path = '0', ), ), ), 
                        status = kubernetes.client.models.io_questdb_crd_v1alpha1_quest_db_copy_status.io_questdb_crd_v1alpha1_QuestDBCopy_status(
                            copy_id = '0', 
                            copy_logs = [
                                kubernetes.client.models.io_questdb_crd_v1alpha1_quest_db_copy_status_copy_logs.io_questdb_crd_v1alpha1_QuestDBCopy_status_copyLogs(
                                    errors = 56, 
                                    file = '0', 
                                    id = '0', 
                                    message = '0', 
                                    phase = '0', 
                                    rows_handled = 56, 
                                    rows_imported = 56, 
                                    status = '0', 
                                    table = '0', 
                                    ts = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                ], 
                            filename = '0', 
                            original_instance_type = '0', 
                            phase = '0', 
                            transition_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), )
                    ], 
                kind = '0', 
                metadata = kubernetes.client.models.v1/list_meta.v1.ListMeta(
                    continue = '0', 
                    remaining_item_count = 56, 
                    resource_version = '0', 
                    self_link = '0', )
            )
        else :
            return IoQuestdbCrdV1alpha1QuestDBCopyList(
                items = [
                    kubernetes.client.models.io/questdb/crd/v1alpha1/quest_db_copy.io.questdb.crd.v1alpha1.QuestDBCopy(
                        api_version = '0', 
                        kind = '0', 
                        metadata = kubernetes.client.models.v1/object_meta.v1.ObjectMeta(
                            annotations = {
                                'key' : '0'
                                }, 
                            creation_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            deletion_grace_period_seconds = 56, 
                            deletion_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            finalizers = [
                                '0'
                                ], 
                            generate_name = '0', 
                            generation = 56, 
                            labels = {
                                'key' : '0'
                                }, 
                            managed_fields = [
                                kubernetes.client.models.v1/managed_fields_entry.v1.ManagedFieldsEntry(
                                    api_version = '0', 
                                    fields_type = '0', 
                                    fields_v1 = kubernetes.client.models.fields_v1.fieldsV1(), 
                                    manager = '0', 
                                    operation = '0', 
                                    subresource = '0', 
                                    time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                ], 
                            name = '0', 
                            namespace = '0', 
                            owner_references = [
                                kubernetes.client.models.v1/owner_reference.v1.OwnerReference(
                                    api_version = '0', 
                                    block_owner_deletion = True, 
                                    controller = True, 
                                    kind = '0', 
                                    name = '0', 
                                    uid = '0', )
                                ], 
                            resource_version = '0', 
                            self_link = '0', 
                            uid = '0', ), 
                        spec = kubernetes.client.models.io_questdb_crd_v1alpha1_quest_db_copy_spec.io_questdb_crd_v1alpha1_QuestDBCopy_spec(
                            cloud_ids = kubernetes.client.models.io_questdb_crd_v1alpha1_quest_db_copy_spec_cloud_ids.io_questdb_crd_v1alpha1_QuestDBCopy_spec_cloudIds(
                                db_name = '0', 
                                instance_uuid = '0', 
                                org_id = '0', 
                                volume_uuid = '0', ), 
                            copy_instance_type = '0', 
                            destination = kubernetes.client.models.io_questdb_crd_v1alpha1_quest_db_copy_spec_destination.io_questdb_crd_v1alpha1_QuestDBCopy_spec_destination(
                                quest_db_name = '0', 
                                table_name = '0', ), 
                            options = kubernetes.client.models.io_questdb_crd_v1alpha1_quest_db_copy_spec_options.io_questdb_crd_v1alpha1_QuestDBCopy_spec_options(
                                delimiter = '0', 
                                headers = True, 
                                on_error = '0', 
                                partition_by = '0', 
                                timestamp_column = '0', 
                                timestamp_format = '0', ), 
                            source = kubernetes.client.models.io_questdb_crd_v1alpha1_quest_db_copy_spec_source.io_questdb_crd_v1alpha1_QuestDBCopy_spec_source(
                                s3 = kubernetes.client.models.io_questdb_crd_v1alpha1_quest_db_copy_spec_source_s3.io_questdb_crd_v1alpha1_QuestDBCopy_spec_source_s3(
                                    bucket = '0', 
                                    key = '0', ), 
                                url = kubernetes.client.models.io_argoproj_v1alpha1_application_set_spec_git_files.io_argoproj_v1alpha1_ApplicationSet_spec_git_files(
                                    path = '0', ), ), ), 
                        status = kubernetes.client.models.io_questdb_crd_v1alpha1_quest_db_copy_status.io_questdb_crd_v1alpha1_QuestDBCopy_status(
                            copy_id = '0', 
                            copy_logs = [
                                kubernetes.client.models.io_questdb_crd_v1alpha1_quest_db_copy_status_copy_logs.io_questdb_crd_v1alpha1_QuestDBCopy_status_copyLogs(
                                    errors = 56, 
                                    file = '0', 
                                    id = '0', 
                                    message = '0', 
                                    phase = '0', 
                                    rows_handled = 56, 
                                    rows_imported = 56, 
                                    status = '0', 
                                    table = '0', 
                                    ts = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                ], 
                            filename = '0', 
                            original_instance_type = '0', 
                            phase = '0', 
                            transition_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), )
                    ],
        )

    def testIoQuestdbCrdV1alpha1QuestDBCopyList(self):
        """Test IoQuestdbCrdV1alpha1QuestDBCopyList"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
