# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1.25.12
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import kubernetes.client
from kubernetes.client.models.aws_k8s_services_ec2_v1alpha1_flow_log_spec import AwsK8sServicesEc2V1alpha1FlowLogSpec  # noqa: E501
from kubernetes.client.rest import ApiException

class TestAwsK8sServicesEc2V1alpha1FlowLogSpec(unittest.TestCase):
    """AwsK8sServicesEc2V1alpha1FlowLogSpec unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test AwsK8sServicesEc2V1alpha1FlowLogSpec
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = kubernetes.client.models.aws_k8s_services_ec2_v1alpha1_flow_log_spec.AwsK8sServicesEc2V1alpha1FlowLogSpec()  # noqa: E501
        if include_optional :
            return AwsK8sServicesEc2V1alpha1FlowLogSpec(
                deliver_logs_permission_arn = '0', 
                destination_options = kubernetes.client.models.aws_k8s_services_ec2_v1alpha1_flow_log_spec_destination_options.aws_k8s_services_ec2_v1alpha1_FlowLog_spec_destinationOptions(
                    file_format = '0', 
                    hive_compatible_partitions = True, 
                    per_hour_partition = True, ), 
                log_destination = '0', 
                log_destination_type = '0', 
                log_format = '0', 
                log_group_name = '0', 
                max_aggregation_interval = 56, 
                resource_id = '0', 
                resource_type = '0', 
                tags = [
                    kubernetes.client.models.aws_k8s_services_ec2_v1alpha1_dhcp_options_spec_tags.aws_k8s_services_ec2_v1alpha1_DHCPOptions_spec_tags(
                        key = '0', 
                        value = '0', )
                    ], 
                traffic_type = '0'
            )
        else :
            return AwsK8sServicesEc2V1alpha1FlowLogSpec(
                resource_id = '0',
                resource_type = '0',
        )

    def testAwsK8sServicesEc2V1alpha1FlowLogSpec(self):
        """Test AwsK8sServicesEc2V1alpha1FlowLogSpec"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
