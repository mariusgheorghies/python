# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1.20.7
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import kubernetes.client
from kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_security_context1_windows_options import ComCoreosMonitoringV1AlertmanagerSpecSecurityContext1WindowsOptions  # noqa: E501
from kubernetes.client.rest import ApiException

class TestComCoreosMonitoringV1AlertmanagerSpecSecurityContext1WindowsOptions(unittest.TestCase):
    """ComCoreosMonitoringV1AlertmanagerSpecSecurityContext1WindowsOptions unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ComCoreosMonitoringV1AlertmanagerSpecSecurityContext1WindowsOptions
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_security_context1_windows_options.ComCoreosMonitoringV1AlertmanagerSpecSecurityContext1WindowsOptions()  # noqa: E501
        if include_optional :
            return ComCoreosMonitoringV1AlertmanagerSpecSecurityContext1WindowsOptions(
                gmsa_credential_spec = '0', 
                gmsa_credential_spec_name = '0', 
                run_as_user_name = '0'
            )
        else :
            return ComCoreosMonitoringV1AlertmanagerSpecSecurityContext1WindowsOptions(
        )

    def testComCoreosMonitoringV1AlertmanagerSpecSecurityContext1WindowsOptions(self):
        """Test ComCoreosMonitoringV1AlertmanagerSpecSecurityContext1WindowsOptions"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
