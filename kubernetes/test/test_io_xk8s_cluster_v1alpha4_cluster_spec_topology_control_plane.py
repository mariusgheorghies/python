# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1.20.7
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import kubernetes.client
from kubernetes.client.models.io_xk8s_cluster_v1alpha4_cluster_spec_topology_control_plane import IoXK8sClusterV1alpha4ClusterSpecTopologyControlPlane  # noqa: E501
from kubernetes.client.rest import ApiException

class TestIoXK8sClusterV1alpha4ClusterSpecTopologyControlPlane(unittest.TestCase):
    """IoXK8sClusterV1alpha4ClusterSpecTopologyControlPlane unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test IoXK8sClusterV1alpha4ClusterSpecTopologyControlPlane
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = kubernetes.client.models.io_xk8s_cluster_v1alpha4_cluster_spec_topology_control_plane.IoXK8sClusterV1alpha4ClusterSpecTopologyControlPlane()  # noqa: E501
        if include_optional :
            return IoXK8sClusterV1alpha4ClusterSpecTopologyControlPlane(
                metadata = kubernetes.client.models.io_x_k8s_cluster_v1alpha4_cluster_spec_topology_control_plane_metadata.io_x_k8s_cluster_v1alpha4_Cluster_spec_topology_controlPlane_metadata(
                    annotations = {
                        'key' : '0'
                        }, 
                    labels = {
                        'key' : '0'
                        }, ), 
                replicas = 56
            )
        else :
            return IoXK8sClusterV1alpha4ClusterSpecTopologyControlPlane(
        )

    def testIoXK8sClusterV1alpha4ClusterSpecTopologyControlPlane(self):
        """Test IoXK8sClusterV1alpha4ClusterSpecTopologyControlPlane"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
