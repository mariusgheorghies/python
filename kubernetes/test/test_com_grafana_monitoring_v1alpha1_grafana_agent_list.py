# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1.25.12
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import kubernetes.client
from kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_list import ComGrafanaMonitoringV1alpha1GrafanaAgentList  # noqa: E501
from kubernetes.client.rest import ApiException

class TestComGrafanaMonitoringV1alpha1GrafanaAgentList(unittest.TestCase):
    """ComGrafanaMonitoringV1alpha1GrafanaAgentList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ComGrafanaMonitoringV1alpha1GrafanaAgentList
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_list.ComGrafanaMonitoringV1alpha1GrafanaAgentList()  # noqa: E501
        if include_optional :
            return ComGrafanaMonitoringV1alpha1GrafanaAgentList(
                api_version = '0', 
                items = [
                    kubernetes.client.models.com/grafana/monitoring/v1alpha1/grafana_agent.com.grafana.monitoring.v1alpha1.GrafanaAgent(
                        api_version = '0', 
                        kind = '0', 
                        metadata = kubernetes.client.models.v1/object_meta.v1.ObjectMeta(
                            annotations = {
                                'key' : '0'
                                }, 
                            creation_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            deletion_grace_period_seconds = 56, 
                            deletion_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            finalizers = [
                                '0'
                                ], 
                            generate_name = '0', 
                            generation = 56, 
                            labels = {
                                'key' : '0'
                                }, 
                            managed_fields = [
                                kubernetes.client.models.v1/managed_fields_entry.v1.ManagedFieldsEntry(
                                    api_version = '0', 
                                    fields_type = '0', 
                                    fields_v1 = kubernetes.client.models.fields_v1.fieldsV1(), 
                                    manager = '0', 
                                    operation = '0', 
                                    subresource = '0', 
                                    time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                ], 
                            name = '0', 
                            namespace = '0', 
                            owner_references = [
                                kubernetes.client.models.v1/owner_reference.v1.OwnerReference(
                                    api_version = '0', 
                                    block_owner_deletion = True, 
                                    controller = True, 
                                    kind = '0', 
                                    name = '0', 
                                    uid = '0', )
                                ], 
                            resource_version = '0', 
                            self_link = '0', 
                            uid = '0', ), 
                        spec = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec(
                            affinity = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_affinity.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_affinity(
                                node_affinity = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_affinity_node_affinity.com_coreos_monitoring_v1_Alertmanager_spec_affinity_nodeAffinity(
                                    preferred_during_scheduling_ignored_during_execution = [
                                        kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_affinity_node_affinity_preferred_during_scheduling_ignored_during_execution.com_coreos_monitoring_v1_Alertmanager_spec_affinity_nodeAffinity_preferredDuringSchedulingIgnoredDuringExecution(
                                            preference = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_affinity_node_affinity_preference.com_coreos_monitoring_v1_Alertmanager_spec_affinity_nodeAffinity_preference(
                                                match_expressions = [
                                                    kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_affinity_node_affinity_preference_match_expressions.com_coreos_monitoring_v1_Alertmanager_spec_affinity_nodeAffinity_preference_matchExpressions(
                                                        key = '0', 
                                                        operator = '0', 
                                                        values = [
                                                            '0'
                                                            ], )
                                                    ], 
                                                match_fields = [
                                                    kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_affinity_node_affinity_preference_match_expressions.com_coreos_monitoring_v1_Alertmanager_spec_affinity_nodeAffinity_preference_matchExpressions(
                                                        key = '0', 
                                                        operator = '0', )
                                                    ], ), 
                                            weight = 56, )
                                        ], 
                                    required_during_scheduling_ignored_during_execution = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_affinity_node_affinity_required_during_scheduling_ignored_during_execution.com_coreos_monitoring_v1_Alertmanager_spec_affinity_nodeAffinity_requiredDuringSchedulingIgnoredDuringExecution(
                                        node_selector_terms = [
                                            kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_affinity_node_affinity_required_during_scheduling_ignored_during_execution_node_selector_terms.com_coreos_monitoring_v1_Alertmanager_spec_affinity_nodeAffinity_requiredDuringSchedulingIgnoredDuringExecution_nodeSelectorTerms()
                                            ], ), ), 
                                pod_affinity = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_affinity_pod_affinity.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_affinity_podAffinity(), 
                                pod_anti_affinity = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_affinity_pod_anti_affinity.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_affinity_podAntiAffinity(), ), 
                            api_server = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_api_server.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_apiServer(
                                authorization = kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec_apiserver_config_authorization.com_coreos_monitoring_v1_Prometheus_spec_apiserverConfig_authorization(
                                    credentials = kubernetes.client.models.com_coreos_monitoring_v1_pod_monitor_spec_authorization_credentials.com_coreos_monitoring_v1_PodMonitor_spec_authorization_credentials(
                                        key = '0', 
                                        name = '0', 
                                        optional = True, ), 
                                    credentials_file = '0', 
                                    type = '0', ), 
                                basic_auth = kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec_apiserver_config_basic_auth.com_coreos_monitoring_v1_Prometheus_spec_apiserverConfig_basicAuth(
                                    password = kubernetes.client.models.com_coreos_monitoring_v1_pod_monitor_spec_basic_auth_password.com_coreos_monitoring_v1_PodMonitor_spec_basicAuth_password(
                                        key = '0', 
                                        name = '0', 
                                        optional = True, ), 
                                    username = kubernetes.client.models.com_coreos_monitoring_v1_pod_monitor_spec_basic_auth_username.com_coreos_monitoring_v1_PodMonitor_spec_basicAuth_username(
                                        key = '0', 
                                        name = '0', 
                                        optional = True, ), ), 
                                bearer_token = '0', 
                                bearer_token_file = '0', 
                                host = '0', 
                                tls_config = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_api_server_tls_config.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_apiServer_tlsConfig(
                                    ca = kubernetes.client.models.com_coreos_monitoring_v1_pod_monitor_spec_tls_config_ca.com_coreos_monitoring_v1_PodMonitor_spec_tlsConfig_ca(
                                        config_map = kubernetes.client.models.com_coreos_monitoring_v1_pod_monitor_spec_oauth2_client_id_config_map.com_coreos_monitoring_v1_PodMonitor_spec_oauth2_clientId_configMap(
                                            key = '0', 
                                            name = '0', 
                                            optional = True, ), 
                                        secret = kubernetes.client.models.com_coreos_monitoring_v1_pod_monitor_spec_oauth2_client_id_secret.com_coreos_monitoring_v1_PodMonitor_spec_oauth2_clientId_secret(
                                            key = '0', 
                                            name = '0', 
                                            optional = True, ), ), 
                                    ca_file = '0', 
                                    cert = kubernetes.client.models.com_coreos_monitoring_v1_pod_monitor_spec_tls_config_cert.com_coreos_monitoring_v1_PodMonitor_spec_tlsConfig_cert(), 
                                    cert_file = '0', 
                                    insecure_skip_verify = True, 
                                    key_file = '0', 
                                    key_secret = kubernetes.client.models.com_coreos_monitoring_v1_pod_monitor_spec_tls_config_key_secret.com_coreos_monitoring_v1_PodMonitor_spec_tlsConfig_keySecret(
                                        key = '0', 
                                        name = '0', 
                                        optional = True, ), 
                                    server_name = '0', ), ), 
                            config_maps = [
                                '0'
                                ], 
                            containers = [
                                kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_containers.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_containers(
                                    args = [
                                        '0'
                                        ], 
                                    command = [
                                        '0'
                                        ], 
                                    env = [
                                        kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_env.com_coreos_monitoring_v1_Alertmanager_spec_env(
                                            name = '0', 
                                            value = '0', 
                                            value_from = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_value_from.com_coreos_monitoring_v1_Alertmanager_spec_valueFrom(
                                                config_map_key_ref = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_value_from_config_map_key_ref.com_coreos_monitoring_v1_Alertmanager_spec_valueFrom_configMapKeyRef(
                                                    key = '0', 
                                                    name = '0', 
                                                    optional = True, ), 
                                                field_ref = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_value_from_field_ref.com_coreos_monitoring_v1_Alertmanager_spec_valueFrom_fieldRef(
                                                    api_version = '0', 
                                                    field_path = '0', ), 
                                                resource_field_ref = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_value_from_resource_field_ref.com_coreos_monitoring_v1_Alertmanager_spec_valueFrom_resourceFieldRef(
                                                    container_name = '0', 
                                                    divisor = kubernetes.client.models.divisor.divisor(), 
                                                    resource = '0', ), 
                                                secret_key_ref = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_value_from_secret_key_ref.com_coreos_monitoring_v1_Alertmanager_spec_valueFrom_secretKeyRef(
                                                    key = '0', 
                                                    name = '0', 
                                                    optional = True, ), ), )
                                        ], 
                                    env_from = [
                                        kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_env_from.com_coreos_monitoring_v1_Alertmanager_spec_envFrom(
                                            config_map_ref = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_config_map_ref.com_coreos_monitoring_v1_Alertmanager_spec_configMapRef(
                                                name = '0', 
                                                optional = True, ), 
                                            prefix = '0', 
                                            secret_ref = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_secret_ref.com_coreos_monitoring_v1_Alertmanager_spec_secretRef(
                                                name = '0', 
                                                optional = True, ), )
                                        ], 
                                    image = '0', 
                                    image_pull_policy = '0', 
                                    lifecycle = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_lifecycle.com_coreos_monitoring_v1_Alertmanager_spec_lifecycle(
                                        post_start = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_lifecycle_post_start.com_coreos_monitoring_v1_Alertmanager_spec_lifecycle_postStart(
                                            exec = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_lifecycle_post_start_exec.com_coreos_monitoring_v1_Alertmanager_spec_lifecycle_postStart_exec(), 
                                            http_get = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_lifecycle_post_start_http_get.com_coreos_monitoring_v1_Alertmanager_spec_lifecycle_postStart_httpGet(
                                                host = '0', 
                                                http_headers = [
                                                    kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_lifecycle_post_start_http_get_http_headers.com_coreos_monitoring_v1_Alertmanager_spec_lifecycle_postStart_httpGet_httpHeaders(
                                                        name = '0', 
                                                        value = '0', )
                                                    ], 
                                                path = '0', 
                                                port = kubernetes.client.models.port.port(), 
                                                scheme = '0', ), 
                                            tcp_socket = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_lifecycle_post_start_tcp_socket.com_coreos_monitoring_v1_Alertmanager_spec_lifecycle_postStart_tcpSocket(
                                                host = '0', 
                                                port = kubernetes.client.models.port.port(), ), ), 
                                        pre_stop = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_lifecycle_pre_stop.com_coreos_monitoring_v1_Alertmanager_spec_lifecycle_preStop(), ), 
                                    liveness_probe = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_liveness_probe.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_livenessProbe(
                                        failure_threshold = 56, 
                                        grpc = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_liveness_probe_grpc.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_livenessProbe_grpc(
                                            port = 56, 
                                            service = '0', ), 
                                        initial_delay_seconds = 56, 
                                        period_seconds = 56, 
                                        success_threshold = 56, 
                                        termination_grace_period_seconds = 56, 
                                        timeout_seconds = 56, ), 
                                    name = '0', 
                                    ports = [
                                        kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_ports.com_coreos_monitoring_v1_Alertmanager_spec_ports(
                                            container_port = 56, 
                                            host_ip = '0', 
                                            host_port = 56, 
                                            name = '0', 
                                            protocol = '0', )
                                        ], 
                                    readiness_probe = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_readiness_probe.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_readinessProbe(
                                        failure_threshold = 56, 
                                        initial_delay_seconds = 56, 
                                        period_seconds = 56, 
                                        success_threshold = 56, 
                                        termination_grace_period_seconds = 56, 
                                        timeout_seconds = 56, ), 
                                    resources = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_resources.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_resources(
                                        claims = [
                                            kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_resources_claims.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_resources_claims(
                                                name = '0', )
                                            ], 
                                        limits = {
                                            'key' : None
                                            }, 
                                        requests = {
                                            'key' : None
                                            }, ), 
                                    security_context = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_security_context.com_coreos_monitoring_v1_Alertmanager_spec_securityContext(
                                        allow_privilege_escalation = True, 
                                        capabilities = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_security_context_capabilities.com_coreos_monitoring_v1_Alertmanager_spec_securityContext_capabilities(
                                            add = [
                                                '0'
                                                ], 
                                            drop = [
                                                '0'
                                                ], ), 
                                        privileged = True, 
                                        proc_mount = '0', 
                                        read_only_root_filesystem = True, 
                                        run_as_group = 56, 
                                        run_as_non_root = True, 
                                        run_as_user = 56, 
                                        se_linux_options = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_security_context_se_linux_options.com_coreos_monitoring_v1_Alertmanager_spec_securityContext_seLinuxOptions(
                                            level = '0', 
                                            role = '0', 
                                            type = '0', 
                                            user = '0', ), 
                                        seccomp_profile = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_security_context_seccomp_profile.com_coreos_monitoring_v1_Alertmanager_spec_securityContext_seccompProfile(
                                            localhost_profile = '0', 
                                            type = '0', ), 
                                        windows_options = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_security_context_windows_options.com_coreos_monitoring_v1_Alertmanager_spec_securityContext_windowsOptions(
                                            gmsa_credential_spec = '0', 
                                            gmsa_credential_spec_name = '0', 
                                            host_process = True, 
                                            run_as_user_name = '0', ), ), 
                                    startup_probe = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_startup_probe.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_startupProbe(
                                        failure_threshold = 56, 
                                        initial_delay_seconds = 56, 
                                        period_seconds = 56, 
                                        success_threshold = 56, 
                                        termination_grace_period_seconds = 56, 
                                        timeout_seconds = 56, ), 
                                    stdin = True, 
                                    stdin_once = True, 
                                    termination_message_path = '0', 
                                    termination_message_policy = '0', 
                                    tty = True, 
                                    volume_devices = [
                                        kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_volume_devices.com_coreos_monitoring_v1_Alertmanager_spec_volumeDevices(
                                            device_path = '0', 
                                            name = '0', )
                                        ], 
                                    volume_mounts = [
                                        kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_volume_mounts.com_coreos_monitoring_v1_Alertmanager_spec_volumeMounts(
                                            mount_path = '0', 
                                            mount_propagation = '0', 
                                            name = '0', 
                                            read_only = True, 
                                            sub_path = '0', 
                                            sub_path_expr = '0', )
                                        ], 
                                    working_dir = '0', )
                                ], 
                            disable_reporting = True, 
                            disable_support_bundle = True, 
                            enable_config_read_api = True, 
                            image = '0', 
                            image_pull_secrets = [
                                kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_image_pull_secrets.com_coreos_monitoring_v1_Alertmanager_spec_imagePullSecrets(
                                    name = '0', )
                                ], 
                            init_containers = [
                                kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_containers.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_containers(
                                    image = '0', 
                                    image_pull_policy = '0', 
                                    name = '0', 
                                    stdin = True, 
                                    stdin_once = True, 
                                    termination_message_path = '0', 
                                    termination_message_policy = '0', 
                                    tty = True, 
                                    working_dir = '0', )
                                ], 
                            integrations = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_integrations.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_integrations(
                                namespace_selector = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_integrations_namespace_selector.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_integrations_namespaceSelector(
                                    match_labels = {
                                        'key' : '0'
                                        }, ), 
                                selector = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_integrations_selector.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_integrations_selector(), ), 
                            log_format = '0', 
                            log_level = '0', 
                            logs = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_logs.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_logs(
                                kubernetes.clients = [
                                    kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_logs_clients.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_logs_clients(
                                        backoff_config = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_logs_backoff_config.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_logs_backoffConfig(
                                            max_period = '0', 
                                            max_retries = 56, 
                                            min_period = '0', ), 
                                        batch_size = 56, 
                                        batch_wait = '0', 
                                        bearer_token = '0', 
                                        bearer_token_file = '0', 
                                        external_labels = {
                                            'key' : '0'
                                            }, 
                                        oauth2 = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_logs_oauth2.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_logs_oauth2(
                                            kubernetes.client_id = kubernetes.client.models.com_coreos_monitoring_v1_pod_monitor_spec_oauth2_client_id.com_coreos_monitoring_v1_PodMonitor_spec_oauth2_clientId(), 
                                            kubernetes.client_secret = kubernetes.client.models.com_coreos_monitoring_v1_pod_monitor_spec_oauth2_client_secret.com_coreos_monitoring_v1_PodMonitor_spec_oauth2_clientSecret(
                                                key = '0', 
                                                name = '0', 
                                                optional = True, ), 
                                            endpoint_params = {
                                                'key' : '0'
                                                }, 
                                            scopes = [
                                                '0'
                                                ], 
                                            token_url = '0', ), 
                                        proxy_url = '0', 
                                        tenant_id = '0', 
                                        timeout = '0', 
                                        url = '0', )
                                    ], 
                                enforced_namespace_label = '0', 
                                ignore_namespace_selectors = True, 
                                instance_namespace_selector = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_logs_instance_namespace_selector.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_logs_instanceNamespaceSelector(), 
                                instance_selector = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_logs_instance_selector.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_logs_instanceSelector(), 
                                logs_external_label_name = '0', ), 
                            metrics = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_metrics.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_metrics(
                                arbitrary_fs_access_through_s_ms = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_metrics_arbitrary_fs_access_through_s_ms.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_metrics_arbitraryFSAccessThroughSMs(
                                    deny = True, ), 
                                enforced_namespace_label = '0', 
                                enforced_sample_limit = 56, 
                                enforced_target_limit = 56, 
                                ignore_namespace_selectors = True, 
                                metrics_external_label_name = '0', 
                                override_honor_labels = True, 
                                override_honor_timestamps = True, 
                                remote_write = [
                                    kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_metrics_remote_write.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_metrics_remoteWrite(
                                        bearer_token = '0', 
                                        bearer_token_file = '0', 
                                        headers = {
                                            'key' : '0'
                                            }, 
                                        metadata_config = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_metrics_metadata_config.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_metrics_metadataConfig(
                                            send = True, 
                                            send_interval = '0', ), 
                                        name = '0', 
                                        proxy_url = '0', 
                                        queue_config = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_metrics_queue_config.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_metrics_queueConfig(
                                            batch_send_deadline = '0', 
                                            capacity = 56, 
                                            max_backoff = '0', 
                                            max_retries = 56, 
                                            max_samples_per_send = 56, 
                                            max_shards = 56, 
                                            min_backoff = '0', 
                                            min_shards = 56, 
                                            retry_on_rate_limit = True, ), 
                                        remote_timeout = '0', 
                                        sigv4 = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_metrics_sigv4.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_metrics_sigv4(
                                            access_key = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_metrics_sigv4_access_key.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_metrics_sigv4_accessKey(
                                                key = '0', 
                                                name = '0', 
                                                optional = True, ), 
                                            profile = '0', 
                                            region = '0', 
                                            role_arn = '0', 
                                            secret_key = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_metrics_sigv4_secret_key.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_metrics_sigv4_secretKey(
                                                key = '0', 
                                                name = '0', 
                                                optional = True, ), ), 
                                        url = '0', 
                                        write_relabel_configs = [
                                            kubernetes.client.models.com_coreos_monitoring_v1_pod_monitor_spec_metric_relabelings.com_coreos_monitoring_v1_PodMonitor_spec_metricRelabelings(
                                                action = 'replace', 
                                                modulus = 56, 
                                                regex = '0', 
                                                replacement = '0', 
                                                separator = '0', 
                                                source_labels = [
                                                    'a'
                                                    ], 
                                                target_label = '0', )
                                            ], )
                                    ], 
                                replica_external_label_name = '0', 
                                replicas = 56, 
                                scrape_interval = '0', 
                                scrape_timeout = '0', 
                                shards = 56, ), 
                            node_selector = {
                                'key' : '0'
                                }, 
                            paused = True, 
                            pod_metadata = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_pod_metadata.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_podMetadata(
                                name = '0', ), 
                            port_name = '0', 
                            priority_class_name = '0', 
                            resources = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_resources_1.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_resources_1(), 
                            runtime_class_name = '0', 
                            secrets = [
                                '0'
                                ], 
                            security_context = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_security_context.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_securityContext(
                                fs_group = 56, 
                                fs_group_change_policy = '0', 
                                run_as_group = 56, 
                                run_as_non_root = True, 
                                run_as_user = 56, 
                                supplemental_groups = [
                                    56
                                    ], 
                                sysctls = [
                                    kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_security_context_1_sysctls.com_coreos_monitoring_v1_Alertmanager_spec_securityContext_1_sysctls(
                                        name = '0', 
                                        value = '0', )
                                    ], ), 
                            service_account_name = '0', 
                            storage = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_storage.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_storage(
                                disable_mount_sub_path = True, 
                                empty_dir = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_storage_empty_dir.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_storage_emptyDir(
                                    medium = '0', 
                                    size_limit = kubernetes.client.models.size_limit.sizeLimit(), ), 
                                ephemeral = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_storage_ephemeral.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_storage_ephemeral(
                                    volume_claim_template = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_storage_ephemeral_volume_claim_template.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_storage_ephemeral_volumeClaimTemplate(
                                        spec = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_storage_ephemeral_volume_claim_template_spec.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_storage_ephemeral_volumeClaimTemplate_spec(
                                            access_modes = [
                                                '0'
                                                ], 
                                            data_source = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_storage_ephemeral_volume_claim_template_spec_data_source.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_storage_ephemeral_volumeClaimTemplate_spec_dataSource(
                                                api_group = '0', 
                                                kind = '0', 
                                                name = '0', ), 
                                            data_source_ref = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_storage_ephemeral_volume_claim_template_spec_data_source_ref.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_storage_ephemeral_volumeClaimTemplate_spec_dataSourceRef(
                                                api_group = '0', 
                                                kind = '0', 
                                                name = '0', 
                                                namespace = '0', ), 
                                            storage_class_name = '0', 
                                            volume_mode = '0', 
                                            volume_name = '0', ), ), ), 
                                volume_claim_template = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_storage_volume_claim_template.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_storage_volumeClaimTemplate(
                                    api_version = '0', 
                                    kind = '0', 
                                    status = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_storage_volume_claim_template_status.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_storage_volumeClaimTemplate_status(
                                        allocated_resources = {
                                            'key' : None
                                            }, 
                                        capacity = {
                                            'key' : None
                                            }, 
                                        conditions = [
                                            kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_storage_volume_claim_template_status_conditions.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_storage_volumeClaimTemplate_status_conditions(
                                                last_probe_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                                last_transition_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                                message = '0', 
                                                reason = '0', 
                                                status = '0', 
                                                type = '0', )
                                            ], 
                                        phase = '0', 
                                        resize_status = '0', ), ), ), 
                            tolerations = [
                                kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_tolerations.com_coreos_monitoring_v1_Alertmanager_spec_tolerations(
                                    effect = '0', 
                                    key = '0', 
                                    operator = '0', 
                                    toleration_seconds = 56, 
                                    value = '0', )
                                ], 
                            topology_spread_constraints = [
                                kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_topology_spread_constraints.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_topologySpreadConstraints(
                                    label_selector = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_label_selector.com_coreos_monitoring_v1_Alertmanager_spec_labelSelector(), 
                                    match_label_keys = [
                                        '0'
                                        ], 
                                    max_skew = 56, 
                                    min_domains = 56, 
                                    node_affinity_policy = '0', 
                                    node_taints_policy = '0', 
                                    topology_key = '0', 
                                    when_unsatisfiable = '0', )
                                ], 
                            version = '0', 
                            volume_mounts = [
                                kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_volume_mounts.com_coreos_monitoring_v1_Alertmanager_spec_volumeMounts(
                                    mount_path = '0', 
                                    mount_propagation = '0', 
                                    name = '0', 
                                    read_only = True, 
                                    sub_path = '0', 
                                    sub_path_expr = '0', )
                                ], 
                            volumes = [
                                kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_volumes.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_volumes(
                                    aws_elastic_block_store = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_aws_elastic_block_store.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_awsElasticBlockStore(
                                        fs_type = '0', 
                                        partition = 56, 
                                        read_only = True, 
                                        volume_id = '0', ), 
                                    azure_disk = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_azure_disk.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_azureDisk(
                                        caching_mode = '0', 
                                        disk_name = '0', 
                                        disk_uri = '0', 
                                        fs_type = '0', 
                                        kind = '0', 
                                        read_only = True, ), 
                                    azure_file = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_azure_file.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_azureFile(
                                        read_only = True, 
                                        secret_name = '0', 
                                        share_name = '0', ), 
                                    cephfs = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_cephfs.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_cephfs(
                                        monitors = [
                                            '0'
                                            ], 
                                        path = '0', 
                                        read_only = True, 
                                        secret_file = '0', 
                                        user = '0', ), 
                                    cinder = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_cinder.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_cinder(
                                        fs_type = '0', 
                                        read_only = True, 
                                        volume_id = '0', ), 
                                    csi = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_csi.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_csi(
                                        driver = '0', 
                                        fs_type = '0', 
                                        node_publish_secret_ref = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_csi_node_publish_secret_ref.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_csi_nodePublishSecretRef(
                                            name = '0', ), 
                                        read_only = True, 
                                        volume_attributes = {
                                            'key' : '0'
                                            }, ), 
                                    downward_api = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_downward_api.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_downwardAPI(
                                        default_mode = 56, 
                                        items = [
                                            kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_downward_api_items.com_coreos_monitoring_v1_Alertmanager_spec_downwardAPI_items(
                                                mode = 56, 
                                                path = '0', )
                                            ], ), 
                                    fc = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_fc.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_fc(
                                        fs_type = '0', 
                                        lun = 56, 
                                        read_only = True, 
                                        target_ww_ns = [
                                            '0'
                                            ], 
                                        wwids = [
                                            '0'
                                            ], ), 
                                    flex_volume = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_flex_volume.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_flexVolume(
                                        driver = '0', 
                                        fs_type = '0', 
                                        options = {
                                            'key' : '0'
                                            }, 
                                        read_only = True, ), 
                                    flocker = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_flocker.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_flocker(
                                        dataset_name = '0', 
                                        dataset_uuid = '0', ), 
                                    gce_persistent_disk = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_gce_persistent_disk.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_gcePersistentDisk(
                                        fs_type = '0', 
                                        partition = 56, 
                                        pd_name = '0', 
                                        read_only = True, ), 
                                    git_repo = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_git_repo.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_gitRepo(
                                        directory = '0', 
                                        repository = '0', 
                                        revision = '0', ), 
                                    glusterfs = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_glusterfs.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_glusterfs(
                                        endpoints = '0', 
                                        path = '0', 
                                        read_only = True, ), 
                                    host_path = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_host_path.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_hostPath(
                                        path = '0', 
                                        type = '0', ), 
                                    iscsi = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_iscsi.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_iscsi(
                                        chap_auth_discovery = True, 
                                        chap_auth_session = True, 
                                        fs_type = '0', 
                                        initiator_name = '0', 
                                        iqn = '0', 
                                        iscsi_interface = '0', 
                                        lun = 56, 
                                        portals = [
                                            '0'
                                            ], 
                                        read_only = True, 
                                        target_portal = '0', ), 
                                    name = '0', 
                                    nfs = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_nfs.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_nfs(
                                        path = '0', 
                                        read_only = True, 
                                        server = '0', ), 
                                    persistent_volume_claim = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_persistent_volume_claim.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_persistentVolumeClaim(
                                        claim_name = '0', 
                                        read_only = True, ), 
                                    photon_persistent_disk = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_photon_persistent_disk.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_photonPersistentDisk(
                                        fs_type = '0', 
                                        pd_id = '0', ), 
                                    portworx_volume = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_portworx_volume.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_portworxVolume(
                                        fs_type = '0', 
                                        read_only = True, 
                                        volume_id = '0', ), 
                                    projected = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_projected.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_projected(
                                        default_mode = 56, 
                                        sources = [
                                            kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_projected_sources.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_projected_sources(
                                                service_account_token = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_projected_service_account_token.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_projected_serviceAccountToken(
                                                    audience = '0', 
                                                    expiration_seconds = 56, 
                                                    path = '0', ), )
                                            ], ), 
                                    quobyte = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_quobyte.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_quobyte(
                                        group = '0', 
                                        read_only = True, 
                                        registry = '0', 
                                        tenant = '0', 
                                        user = '0', 
                                        volume = '0', ), 
                                    rbd = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_rbd.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_rbd(
                                        fs_type = '0', 
                                        image = '0', 
                                        keyring = '0', 
                                        monitors = [
                                            '0'
                                            ], 
                                        pool = '0', 
                                        read_only = True, 
                                        user = '0', ), 
                                    scale_io = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_scale_io.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_scaleIO(
                                        fs_type = '0', 
                                        gateway = '0', 
                                        protection_domain = '0', 
                                        read_only = True, 
                                        secret_ref = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_scale_io_secret_ref.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_scaleIO_secretRef(
                                            name = '0', ), 
                                        ssl_enabled = True, 
                                        storage_mode = '0', 
                                        storage_pool = '0', 
                                        system = '0', 
                                        volume_name = '0', ), 
                                    storageos = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_storageos.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_storageos(
                                        fs_type = '0', 
                                        read_only = True, 
                                        volume_name = '0', 
                                        volume_namespace = '0', ), 
                                    vsphere_volume = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_vsphere_volume.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_vsphereVolume(
                                        fs_type = '0', 
                                        storage_policy_id = '0', 
                                        storage_policy_name = '0', 
                                        volume_path = '0', ), )
                                ], ), )
                    ], 
                kind = '0', 
                metadata = kubernetes.client.models.v1/list_meta.v1.ListMeta(
                    continue = '0', 
                    remaining_item_count = 56, 
                    resource_version = '0', 
                    self_link = '0', )
            )
        else :
            return ComGrafanaMonitoringV1alpha1GrafanaAgentList(
                items = [
                    kubernetes.client.models.com/grafana/monitoring/v1alpha1/grafana_agent.com.grafana.monitoring.v1alpha1.GrafanaAgent(
                        api_version = '0', 
                        kind = '0', 
                        metadata = kubernetes.client.models.v1/object_meta.v1.ObjectMeta(
                            annotations = {
                                'key' : '0'
                                }, 
                            creation_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            deletion_grace_period_seconds = 56, 
                            deletion_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            finalizers = [
                                '0'
                                ], 
                            generate_name = '0', 
                            generation = 56, 
                            labels = {
                                'key' : '0'
                                }, 
                            managed_fields = [
                                kubernetes.client.models.v1/managed_fields_entry.v1.ManagedFieldsEntry(
                                    api_version = '0', 
                                    fields_type = '0', 
                                    fields_v1 = kubernetes.client.models.fields_v1.fieldsV1(), 
                                    manager = '0', 
                                    operation = '0', 
                                    subresource = '0', 
                                    time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                ], 
                            name = '0', 
                            namespace = '0', 
                            owner_references = [
                                kubernetes.client.models.v1/owner_reference.v1.OwnerReference(
                                    api_version = '0', 
                                    block_owner_deletion = True, 
                                    controller = True, 
                                    kind = '0', 
                                    name = '0', 
                                    uid = '0', )
                                ], 
                            resource_version = '0', 
                            self_link = '0', 
                            uid = '0', ), 
                        spec = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec(
                            affinity = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_affinity.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_affinity(
                                node_affinity = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_affinity_node_affinity.com_coreos_monitoring_v1_Alertmanager_spec_affinity_nodeAffinity(
                                    preferred_during_scheduling_ignored_during_execution = [
                                        kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_affinity_node_affinity_preferred_during_scheduling_ignored_during_execution.com_coreos_monitoring_v1_Alertmanager_spec_affinity_nodeAffinity_preferredDuringSchedulingIgnoredDuringExecution(
                                            preference = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_affinity_node_affinity_preference.com_coreos_monitoring_v1_Alertmanager_spec_affinity_nodeAffinity_preference(
                                                match_expressions = [
                                                    kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_affinity_node_affinity_preference_match_expressions.com_coreos_monitoring_v1_Alertmanager_spec_affinity_nodeAffinity_preference_matchExpressions(
                                                        key = '0', 
                                                        operator = '0', 
                                                        values = [
                                                            '0'
                                                            ], )
                                                    ], 
                                                match_fields = [
                                                    kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_affinity_node_affinity_preference_match_expressions.com_coreos_monitoring_v1_Alertmanager_spec_affinity_nodeAffinity_preference_matchExpressions(
                                                        key = '0', 
                                                        operator = '0', )
                                                    ], ), 
                                            weight = 56, )
                                        ], 
                                    required_during_scheduling_ignored_during_execution = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_affinity_node_affinity_required_during_scheduling_ignored_during_execution.com_coreos_monitoring_v1_Alertmanager_spec_affinity_nodeAffinity_requiredDuringSchedulingIgnoredDuringExecution(
                                        node_selector_terms = [
                                            kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_affinity_node_affinity_required_during_scheduling_ignored_during_execution_node_selector_terms.com_coreos_monitoring_v1_Alertmanager_spec_affinity_nodeAffinity_requiredDuringSchedulingIgnoredDuringExecution_nodeSelectorTerms()
                                            ], ), ), 
                                pod_affinity = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_affinity_pod_affinity.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_affinity_podAffinity(), 
                                pod_anti_affinity = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_affinity_pod_anti_affinity.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_affinity_podAntiAffinity(), ), 
                            api_server = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_api_server.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_apiServer(
                                authorization = kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec_apiserver_config_authorization.com_coreos_monitoring_v1_Prometheus_spec_apiserverConfig_authorization(
                                    credentials = kubernetes.client.models.com_coreos_monitoring_v1_pod_monitor_spec_authorization_credentials.com_coreos_monitoring_v1_PodMonitor_spec_authorization_credentials(
                                        key = '0', 
                                        name = '0', 
                                        optional = True, ), 
                                    credentials_file = '0', 
                                    type = '0', ), 
                                basic_auth = kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec_apiserver_config_basic_auth.com_coreos_monitoring_v1_Prometheus_spec_apiserverConfig_basicAuth(
                                    password = kubernetes.client.models.com_coreos_monitoring_v1_pod_monitor_spec_basic_auth_password.com_coreos_monitoring_v1_PodMonitor_spec_basicAuth_password(
                                        key = '0', 
                                        name = '0', 
                                        optional = True, ), 
                                    username = kubernetes.client.models.com_coreos_monitoring_v1_pod_monitor_spec_basic_auth_username.com_coreos_monitoring_v1_PodMonitor_spec_basicAuth_username(
                                        key = '0', 
                                        name = '0', 
                                        optional = True, ), ), 
                                bearer_token = '0', 
                                bearer_token_file = '0', 
                                host = '0', 
                                tls_config = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_api_server_tls_config.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_apiServer_tlsConfig(
                                    ca = kubernetes.client.models.com_coreos_monitoring_v1_pod_monitor_spec_tls_config_ca.com_coreos_monitoring_v1_PodMonitor_spec_tlsConfig_ca(
                                        config_map = kubernetes.client.models.com_coreos_monitoring_v1_pod_monitor_spec_oauth2_client_id_config_map.com_coreos_monitoring_v1_PodMonitor_spec_oauth2_clientId_configMap(
                                            key = '0', 
                                            name = '0', 
                                            optional = True, ), 
                                        secret = kubernetes.client.models.com_coreos_monitoring_v1_pod_monitor_spec_oauth2_client_id_secret.com_coreos_monitoring_v1_PodMonitor_spec_oauth2_clientId_secret(
                                            key = '0', 
                                            name = '0', 
                                            optional = True, ), ), 
                                    ca_file = '0', 
                                    cert = kubernetes.client.models.com_coreos_monitoring_v1_pod_monitor_spec_tls_config_cert.com_coreos_monitoring_v1_PodMonitor_spec_tlsConfig_cert(), 
                                    cert_file = '0', 
                                    insecure_skip_verify = True, 
                                    key_file = '0', 
                                    key_secret = kubernetes.client.models.com_coreos_monitoring_v1_pod_monitor_spec_tls_config_key_secret.com_coreos_monitoring_v1_PodMonitor_spec_tlsConfig_keySecret(
                                        key = '0', 
                                        name = '0', 
                                        optional = True, ), 
                                    server_name = '0', ), ), 
                            config_maps = [
                                '0'
                                ], 
                            containers = [
                                kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_containers.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_containers(
                                    args = [
                                        '0'
                                        ], 
                                    command = [
                                        '0'
                                        ], 
                                    env = [
                                        kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_env.com_coreos_monitoring_v1_Alertmanager_spec_env(
                                            name = '0', 
                                            value = '0', 
                                            value_from = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_value_from.com_coreos_monitoring_v1_Alertmanager_spec_valueFrom(
                                                config_map_key_ref = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_value_from_config_map_key_ref.com_coreos_monitoring_v1_Alertmanager_spec_valueFrom_configMapKeyRef(
                                                    key = '0', 
                                                    name = '0', 
                                                    optional = True, ), 
                                                field_ref = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_value_from_field_ref.com_coreos_monitoring_v1_Alertmanager_spec_valueFrom_fieldRef(
                                                    api_version = '0', 
                                                    field_path = '0', ), 
                                                resource_field_ref = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_value_from_resource_field_ref.com_coreos_monitoring_v1_Alertmanager_spec_valueFrom_resourceFieldRef(
                                                    container_name = '0', 
                                                    divisor = kubernetes.client.models.divisor.divisor(), 
                                                    resource = '0', ), 
                                                secret_key_ref = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_value_from_secret_key_ref.com_coreos_monitoring_v1_Alertmanager_spec_valueFrom_secretKeyRef(
                                                    key = '0', 
                                                    name = '0', 
                                                    optional = True, ), ), )
                                        ], 
                                    env_from = [
                                        kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_env_from.com_coreos_monitoring_v1_Alertmanager_spec_envFrom(
                                            config_map_ref = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_config_map_ref.com_coreos_monitoring_v1_Alertmanager_spec_configMapRef(
                                                name = '0', 
                                                optional = True, ), 
                                            prefix = '0', 
                                            secret_ref = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_secret_ref.com_coreos_monitoring_v1_Alertmanager_spec_secretRef(
                                                name = '0', 
                                                optional = True, ), )
                                        ], 
                                    image = '0', 
                                    image_pull_policy = '0', 
                                    lifecycle = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_lifecycle.com_coreos_monitoring_v1_Alertmanager_spec_lifecycle(
                                        post_start = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_lifecycle_post_start.com_coreos_monitoring_v1_Alertmanager_spec_lifecycle_postStart(
                                            exec = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_lifecycle_post_start_exec.com_coreos_monitoring_v1_Alertmanager_spec_lifecycle_postStart_exec(), 
                                            http_get = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_lifecycle_post_start_http_get.com_coreos_monitoring_v1_Alertmanager_spec_lifecycle_postStart_httpGet(
                                                host = '0', 
                                                http_headers = [
                                                    kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_lifecycle_post_start_http_get_http_headers.com_coreos_monitoring_v1_Alertmanager_spec_lifecycle_postStart_httpGet_httpHeaders(
                                                        name = '0', 
                                                        value = '0', )
                                                    ], 
                                                path = '0', 
                                                port = kubernetes.client.models.port.port(), 
                                                scheme = '0', ), 
                                            tcp_socket = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_lifecycle_post_start_tcp_socket.com_coreos_monitoring_v1_Alertmanager_spec_lifecycle_postStart_tcpSocket(
                                                host = '0', 
                                                port = kubernetes.client.models.port.port(), ), ), 
                                        pre_stop = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_lifecycle_pre_stop.com_coreos_monitoring_v1_Alertmanager_spec_lifecycle_preStop(), ), 
                                    liveness_probe = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_liveness_probe.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_livenessProbe(
                                        failure_threshold = 56, 
                                        grpc = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_liveness_probe_grpc.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_livenessProbe_grpc(
                                            port = 56, 
                                            service = '0', ), 
                                        initial_delay_seconds = 56, 
                                        period_seconds = 56, 
                                        success_threshold = 56, 
                                        termination_grace_period_seconds = 56, 
                                        timeout_seconds = 56, ), 
                                    name = '0', 
                                    ports = [
                                        kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_ports.com_coreos_monitoring_v1_Alertmanager_spec_ports(
                                            container_port = 56, 
                                            host_ip = '0', 
                                            host_port = 56, 
                                            name = '0', 
                                            protocol = '0', )
                                        ], 
                                    readiness_probe = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_readiness_probe.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_readinessProbe(
                                        failure_threshold = 56, 
                                        initial_delay_seconds = 56, 
                                        period_seconds = 56, 
                                        success_threshold = 56, 
                                        termination_grace_period_seconds = 56, 
                                        timeout_seconds = 56, ), 
                                    resources = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_resources.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_resources(
                                        claims = [
                                            kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_resources_claims.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_resources_claims(
                                                name = '0', )
                                            ], 
                                        limits = {
                                            'key' : None
                                            }, 
                                        requests = {
                                            'key' : None
                                            }, ), 
                                    security_context = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_security_context.com_coreos_monitoring_v1_Alertmanager_spec_securityContext(
                                        allow_privilege_escalation = True, 
                                        capabilities = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_security_context_capabilities.com_coreos_monitoring_v1_Alertmanager_spec_securityContext_capabilities(
                                            add = [
                                                '0'
                                                ], 
                                            drop = [
                                                '0'
                                                ], ), 
                                        privileged = True, 
                                        proc_mount = '0', 
                                        read_only_root_filesystem = True, 
                                        run_as_group = 56, 
                                        run_as_non_root = True, 
                                        run_as_user = 56, 
                                        se_linux_options = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_security_context_se_linux_options.com_coreos_monitoring_v1_Alertmanager_spec_securityContext_seLinuxOptions(
                                            level = '0', 
                                            role = '0', 
                                            type = '0', 
                                            user = '0', ), 
                                        seccomp_profile = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_security_context_seccomp_profile.com_coreos_monitoring_v1_Alertmanager_spec_securityContext_seccompProfile(
                                            localhost_profile = '0', 
                                            type = '0', ), 
                                        windows_options = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_security_context_windows_options.com_coreos_monitoring_v1_Alertmanager_spec_securityContext_windowsOptions(
                                            gmsa_credential_spec = '0', 
                                            gmsa_credential_spec_name = '0', 
                                            host_process = True, 
                                            run_as_user_name = '0', ), ), 
                                    startup_probe = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_startup_probe.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_startupProbe(
                                        failure_threshold = 56, 
                                        initial_delay_seconds = 56, 
                                        period_seconds = 56, 
                                        success_threshold = 56, 
                                        termination_grace_period_seconds = 56, 
                                        timeout_seconds = 56, ), 
                                    stdin = True, 
                                    stdin_once = True, 
                                    termination_message_path = '0', 
                                    termination_message_policy = '0', 
                                    tty = True, 
                                    volume_devices = [
                                        kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_volume_devices.com_coreos_monitoring_v1_Alertmanager_spec_volumeDevices(
                                            device_path = '0', 
                                            name = '0', )
                                        ], 
                                    volume_mounts = [
                                        kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_volume_mounts.com_coreos_monitoring_v1_Alertmanager_spec_volumeMounts(
                                            mount_path = '0', 
                                            mount_propagation = '0', 
                                            name = '0', 
                                            read_only = True, 
                                            sub_path = '0', 
                                            sub_path_expr = '0', )
                                        ], 
                                    working_dir = '0', )
                                ], 
                            disable_reporting = True, 
                            disable_support_bundle = True, 
                            enable_config_read_api = True, 
                            image = '0', 
                            image_pull_secrets = [
                                kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_image_pull_secrets.com_coreos_monitoring_v1_Alertmanager_spec_imagePullSecrets(
                                    name = '0', )
                                ], 
                            init_containers = [
                                kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_containers.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_containers(
                                    image = '0', 
                                    image_pull_policy = '0', 
                                    name = '0', 
                                    stdin = True, 
                                    stdin_once = True, 
                                    termination_message_path = '0', 
                                    termination_message_policy = '0', 
                                    tty = True, 
                                    working_dir = '0', )
                                ], 
                            integrations = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_integrations.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_integrations(
                                namespace_selector = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_integrations_namespace_selector.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_integrations_namespaceSelector(
                                    match_labels = {
                                        'key' : '0'
                                        }, ), 
                                selector = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_integrations_selector.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_integrations_selector(), ), 
                            log_format = '0', 
                            log_level = '0', 
                            logs = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_logs.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_logs(
                                kubernetes.clients = [
                                    kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_logs_clients.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_logs_clients(
                                        backoff_config = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_logs_backoff_config.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_logs_backoffConfig(
                                            max_period = '0', 
                                            max_retries = 56, 
                                            min_period = '0', ), 
                                        batch_size = 56, 
                                        batch_wait = '0', 
                                        bearer_token = '0', 
                                        bearer_token_file = '0', 
                                        external_labels = {
                                            'key' : '0'
                                            }, 
                                        oauth2 = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_logs_oauth2.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_logs_oauth2(
                                            kubernetes.client_id = kubernetes.client.models.com_coreos_monitoring_v1_pod_monitor_spec_oauth2_client_id.com_coreos_monitoring_v1_PodMonitor_spec_oauth2_clientId(), 
                                            kubernetes.client_secret = kubernetes.client.models.com_coreos_monitoring_v1_pod_monitor_spec_oauth2_client_secret.com_coreos_monitoring_v1_PodMonitor_spec_oauth2_clientSecret(
                                                key = '0', 
                                                name = '0', 
                                                optional = True, ), 
                                            endpoint_params = {
                                                'key' : '0'
                                                }, 
                                            scopes = [
                                                '0'
                                                ], 
                                            token_url = '0', ), 
                                        proxy_url = '0', 
                                        tenant_id = '0', 
                                        timeout = '0', 
                                        url = '0', )
                                    ], 
                                enforced_namespace_label = '0', 
                                ignore_namespace_selectors = True, 
                                instance_namespace_selector = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_logs_instance_namespace_selector.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_logs_instanceNamespaceSelector(), 
                                instance_selector = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_logs_instance_selector.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_logs_instanceSelector(), 
                                logs_external_label_name = '0', ), 
                            metrics = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_metrics.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_metrics(
                                arbitrary_fs_access_through_s_ms = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_metrics_arbitrary_fs_access_through_s_ms.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_metrics_arbitraryFSAccessThroughSMs(
                                    deny = True, ), 
                                enforced_namespace_label = '0', 
                                enforced_sample_limit = 56, 
                                enforced_target_limit = 56, 
                                ignore_namespace_selectors = True, 
                                metrics_external_label_name = '0', 
                                override_honor_labels = True, 
                                override_honor_timestamps = True, 
                                remote_write = [
                                    kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_metrics_remote_write.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_metrics_remoteWrite(
                                        bearer_token = '0', 
                                        bearer_token_file = '0', 
                                        headers = {
                                            'key' : '0'
                                            }, 
                                        metadata_config = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_metrics_metadata_config.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_metrics_metadataConfig(
                                            send = True, 
                                            send_interval = '0', ), 
                                        name = '0', 
                                        proxy_url = '0', 
                                        queue_config = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_metrics_queue_config.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_metrics_queueConfig(
                                            batch_send_deadline = '0', 
                                            capacity = 56, 
                                            max_backoff = '0', 
                                            max_retries = 56, 
                                            max_samples_per_send = 56, 
                                            max_shards = 56, 
                                            min_backoff = '0', 
                                            min_shards = 56, 
                                            retry_on_rate_limit = True, ), 
                                        remote_timeout = '0', 
                                        sigv4 = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_metrics_sigv4.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_metrics_sigv4(
                                            access_key = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_metrics_sigv4_access_key.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_metrics_sigv4_accessKey(
                                                key = '0', 
                                                name = '0', 
                                                optional = True, ), 
                                            profile = '0', 
                                            region = '0', 
                                            role_arn = '0', 
                                            secret_key = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_metrics_sigv4_secret_key.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_metrics_sigv4_secretKey(
                                                key = '0', 
                                                name = '0', 
                                                optional = True, ), ), 
                                        url = '0', 
                                        write_relabel_configs = [
                                            kubernetes.client.models.com_coreos_monitoring_v1_pod_monitor_spec_metric_relabelings.com_coreos_monitoring_v1_PodMonitor_spec_metricRelabelings(
                                                action = 'replace', 
                                                modulus = 56, 
                                                regex = '0', 
                                                replacement = '0', 
                                                separator = '0', 
                                                source_labels = [
                                                    'a'
                                                    ], 
                                                target_label = '0', )
                                            ], )
                                    ], 
                                replica_external_label_name = '0', 
                                replicas = 56, 
                                scrape_interval = '0', 
                                scrape_timeout = '0', 
                                shards = 56, ), 
                            node_selector = {
                                'key' : '0'
                                }, 
                            paused = True, 
                            pod_metadata = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_pod_metadata.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_podMetadata(
                                name = '0', ), 
                            port_name = '0', 
                            priority_class_name = '0', 
                            resources = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_resources_1.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_resources_1(), 
                            runtime_class_name = '0', 
                            secrets = [
                                '0'
                                ], 
                            security_context = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_security_context.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_securityContext(
                                fs_group = 56, 
                                fs_group_change_policy = '0', 
                                run_as_group = 56, 
                                run_as_non_root = True, 
                                run_as_user = 56, 
                                supplemental_groups = [
                                    56
                                    ], 
                                sysctls = [
                                    kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_security_context_1_sysctls.com_coreos_monitoring_v1_Alertmanager_spec_securityContext_1_sysctls(
                                        name = '0', 
                                        value = '0', )
                                    ], ), 
                            service_account_name = '0', 
                            storage = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_storage.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_storage(
                                disable_mount_sub_path = True, 
                                empty_dir = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_storage_empty_dir.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_storage_emptyDir(
                                    medium = '0', 
                                    size_limit = kubernetes.client.models.size_limit.sizeLimit(), ), 
                                ephemeral = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_storage_ephemeral.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_storage_ephemeral(
                                    volume_claim_template = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_storage_ephemeral_volume_claim_template.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_storage_ephemeral_volumeClaimTemplate(
                                        spec = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_storage_ephemeral_volume_claim_template_spec.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_storage_ephemeral_volumeClaimTemplate_spec(
                                            access_modes = [
                                                '0'
                                                ], 
                                            data_source = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_storage_ephemeral_volume_claim_template_spec_data_source.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_storage_ephemeral_volumeClaimTemplate_spec_dataSource(
                                                api_group = '0', 
                                                kind = '0', 
                                                name = '0', ), 
                                            data_source_ref = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_storage_ephemeral_volume_claim_template_spec_data_source_ref.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_storage_ephemeral_volumeClaimTemplate_spec_dataSourceRef(
                                                api_group = '0', 
                                                kind = '0', 
                                                name = '0', 
                                                namespace = '0', ), 
                                            storage_class_name = '0', 
                                            volume_mode = '0', 
                                            volume_name = '0', ), ), ), 
                                volume_claim_template = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_storage_volume_claim_template.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_storage_volumeClaimTemplate(
                                    api_version = '0', 
                                    kind = '0', 
                                    status = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_storage_volume_claim_template_status.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_storage_volumeClaimTemplate_status(
                                        allocated_resources = {
                                            'key' : None
                                            }, 
                                        capacity = {
                                            'key' : None
                                            }, 
                                        conditions = [
                                            kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_storage_volume_claim_template_status_conditions.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_storage_volumeClaimTemplate_status_conditions(
                                                last_probe_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                                last_transition_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                                message = '0', 
                                                reason = '0', 
                                                status = '0', 
                                                type = '0', )
                                            ], 
                                        phase = '0', 
                                        resize_status = '0', ), ), ), 
                            tolerations = [
                                kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_tolerations.com_coreos_monitoring_v1_Alertmanager_spec_tolerations(
                                    effect = '0', 
                                    key = '0', 
                                    operator = '0', 
                                    toleration_seconds = 56, 
                                    value = '0', )
                                ], 
                            topology_spread_constraints = [
                                kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_topology_spread_constraints.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_topologySpreadConstraints(
                                    label_selector = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_label_selector.com_coreos_monitoring_v1_Alertmanager_spec_labelSelector(), 
                                    match_label_keys = [
                                        '0'
                                        ], 
                                    max_skew = 56, 
                                    min_domains = 56, 
                                    node_affinity_policy = '0', 
                                    node_taints_policy = '0', 
                                    topology_key = '0', 
                                    when_unsatisfiable = '0', )
                                ], 
                            version = '0', 
                            volume_mounts = [
                                kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_volume_mounts.com_coreos_monitoring_v1_Alertmanager_spec_volumeMounts(
                                    mount_path = '0', 
                                    mount_propagation = '0', 
                                    name = '0', 
                                    read_only = True, 
                                    sub_path = '0', 
                                    sub_path_expr = '0', )
                                ], 
                            volumes = [
                                kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_volumes.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_volumes(
                                    aws_elastic_block_store = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_aws_elastic_block_store.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_awsElasticBlockStore(
                                        fs_type = '0', 
                                        partition = 56, 
                                        read_only = True, 
                                        volume_id = '0', ), 
                                    azure_disk = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_azure_disk.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_azureDisk(
                                        caching_mode = '0', 
                                        disk_name = '0', 
                                        disk_uri = '0', 
                                        fs_type = '0', 
                                        kind = '0', 
                                        read_only = True, ), 
                                    azure_file = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_azure_file.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_azureFile(
                                        read_only = True, 
                                        secret_name = '0', 
                                        share_name = '0', ), 
                                    cephfs = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_cephfs.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_cephfs(
                                        monitors = [
                                            '0'
                                            ], 
                                        path = '0', 
                                        read_only = True, 
                                        secret_file = '0', 
                                        user = '0', ), 
                                    cinder = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_cinder.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_cinder(
                                        fs_type = '0', 
                                        read_only = True, 
                                        volume_id = '0', ), 
                                    csi = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_csi.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_csi(
                                        driver = '0', 
                                        fs_type = '0', 
                                        node_publish_secret_ref = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_csi_node_publish_secret_ref.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_csi_nodePublishSecretRef(
                                            name = '0', ), 
                                        read_only = True, 
                                        volume_attributes = {
                                            'key' : '0'
                                            }, ), 
                                    downward_api = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_downward_api.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_downwardAPI(
                                        default_mode = 56, 
                                        items = [
                                            kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_downward_api_items.com_coreos_monitoring_v1_Alertmanager_spec_downwardAPI_items(
                                                mode = 56, 
                                                path = '0', )
                                            ], ), 
                                    fc = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_fc.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_fc(
                                        fs_type = '0', 
                                        lun = 56, 
                                        read_only = True, 
                                        target_ww_ns = [
                                            '0'
                                            ], 
                                        wwids = [
                                            '0'
                                            ], ), 
                                    flex_volume = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_flex_volume.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_flexVolume(
                                        driver = '0', 
                                        fs_type = '0', 
                                        options = {
                                            'key' : '0'
                                            }, 
                                        read_only = True, ), 
                                    flocker = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_flocker.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_flocker(
                                        dataset_name = '0', 
                                        dataset_uuid = '0', ), 
                                    gce_persistent_disk = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_gce_persistent_disk.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_gcePersistentDisk(
                                        fs_type = '0', 
                                        partition = 56, 
                                        pd_name = '0', 
                                        read_only = True, ), 
                                    git_repo = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_git_repo.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_gitRepo(
                                        directory = '0', 
                                        repository = '0', 
                                        revision = '0', ), 
                                    glusterfs = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_glusterfs.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_glusterfs(
                                        endpoints = '0', 
                                        path = '0', 
                                        read_only = True, ), 
                                    host_path = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_host_path.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_hostPath(
                                        path = '0', 
                                        type = '0', ), 
                                    iscsi = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_iscsi.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_iscsi(
                                        chap_auth_discovery = True, 
                                        chap_auth_session = True, 
                                        fs_type = '0', 
                                        initiator_name = '0', 
                                        iqn = '0', 
                                        iscsi_interface = '0', 
                                        lun = 56, 
                                        portals = [
                                            '0'
                                            ], 
                                        read_only = True, 
                                        target_portal = '0', ), 
                                    name = '0', 
                                    nfs = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_nfs.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_nfs(
                                        path = '0', 
                                        read_only = True, 
                                        server = '0', ), 
                                    persistent_volume_claim = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_persistent_volume_claim.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_persistentVolumeClaim(
                                        claim_name = '0', 
                                        read_only = True, ), 
                                    photon_persistent_disk = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_photon_persistent_disk.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_photonPersistentDisk(
                                        fs_type = '0', 
                                        pd_id = '0', ), 
                                    portworx_volume = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_portworx_volume.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_portworxVolume(
                                        fs_type = '0', 
                                        read_only = True, 
                                        volume_id = '0', ), 
                                    projected = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_projected.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_projected(
                                        default_mode = 56, 
                                        sources = [
                                            kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_projected_sources.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_projected_sources(
                                                service_account_token = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_projected_service_account_token.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_projected_serviceAccountToken(
                                                    audience = '0', 
                                                    expiration_seconds = 56, 
                                                    path = '0', ), )
                                            ], ), 
                                    quobyte = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_quobyte.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_quobyte(
                                        group = '0', 
                                        read_only = True, 
                                        registry = '0', 
                                        tenant = '0', 
                                        user = '0', 
                                        volume = '0', ), 
                                    rbd = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_rbd.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_rbd(
                                        fs_type = '0', 
                                        image = '0', 
                                        keyring = '0', 
                                        monitors = [
                                            '0'
                                            ], 
                                        pool = '0', 
                                        read_only = True, 
                                        user = '0', ), 
                                    scale_io = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_scale_io.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_scaleIO(
                                        fs_type = '0', 
                                        gateway = '0', 
                                        protection_domain = '0', 
                                        read_only = True, 
                                        secret_ref = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_scale_io_secret_ref.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_scaleIO_secretRef(
                                            name = '0', ), 
                                        ssl_enabled = True, 
                                        storage_mode = '0', 
                                        storage_pool = '0', 
                                        system = '0', 
                                        volume_name = '0', ), 
                                    storageos = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_storageos.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_storageos(
                                        fs_type = '0', 
                                        read_only = True, 
                                        volume_name = '0', 
                                        volume_namespace = '0', ), 
                                    vsphere_volume = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_vsphere_volume.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_vsphereVolume(
                                        fs_type = '0', 
                                        storage_policy_id = '0', 
                                        storage_policy_name = '0', 
                                        volume_path = '0', ), )
                                ], ), )
                    ],
        )

    def testComGrafanaMonitoringV1alpha1GrafanaAgentList(self):
        """Test ComGrafanaMonitoringV1alpha1GrafanaAgentList"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
