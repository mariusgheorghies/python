# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1.25.12
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import kubernetes.client
from kubernetes.client.models.io_questdb_questdb_v1alpha1_quest_db_spec_config import IoQuestdbQuestdbV1alpha1QuestDBSpecConfig  # noqa: E501
from kubernetes.client.rest import ApiException

class TestIoQuestdbQuestdbV1alpha1QuestDBSpecConfig(unittest.TestCase):
    """IoQuestdbQuestdbV1alpha1QuestDBSpecConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test IoQuestdbQuestdbV1alpha1QuestDBSpecConfig
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = kubernetes.client.models.io_questdb_questdb_v1alpha1_quest_db_spec_config.IoQuestdbQuestdbV1alpha1QuestDBSpecConfig()  # noqa: E501
        if include_optional :
            return IoQuestdbQuestdbV1alpha1QuestDBSpecConfig(
                cairo = kubernetes.client.models.io_questdb_questdb_v1alpha1_quest_db_spec_config_cairo.io_questdb_questdb_v1alpha1_QuestDB_spec_config_cairo(
                    commit_lag = 56, 
                    max_uncommitted_rows = 56, 
                    out_of_order_column_memory_size = '0', 
                    table_writer_append_page_size = '0', ), 
                http = kubernetes.client.models.io_questdb_questdb_v1alpha1_quest_db_spec_config_http.io_questdb_questdb_v1alpha1_QuestDB_spec_config_http(
                    cache_block_count = 56, 
                    cache_enabled = True, 
                    cache_row_count = 56, 
                    connection_limit = 56, 
                    read_only_mode = True, 
                    worker_count = 56, ), 
                ilp = kubernetes.client.models.io_questdb_questdb_v1alpha1_quest_db_spec_config_ilp.io_questdb_questdb_v1alpha1_QuestDB_spec_config_ilp(
                    tcp_commit_interval_default = 56, 
                    tcp_commit_interval_fraction = '0', 
                    tcp_default_partition_by = '0', 
                    tcp_disconnect_on_error = True, 
                    tcp_io_worker_count = 56, 
                    tcp_net_connection_limit = 56, 
                    tcp_writer_worker_count = 56, ), 
                postgres = kubernetes.client.models.io_questdb_questdb_v1alpha1_quest_db_spec_config_postgres.io_questdb_questdb_v1alpha1_QuestDB_spec_config_postgres(
                    connection_limit = 56, 
                    insert_cache_block_count = 56, 
                    insert_cache_enabled = True, 
                    insert_cache_row_count = 56, 
                    select_cache_block_count = 56, 
                    select_cache_enabled = True, 
                    select_cache_row_count = 56, 
                    update_cache_block_count = 56, 
                    update_cache_enabled = True, 
                    update_cache_row_count = 56, 
                    worker_count = 56, ), 
                query_timeout_seconds = 56, 
                shared_worker_count = 56
            )
        else :
            return IoQuestdbQuestdbV1alpha1QuestDBSpecConfig(
        )

    def testIoQuestdbQuestdbV1alpha1QuestDBSpecConfig(self):
        """Test IoQuestdbQuestdbV1alpha1QuestDBSpecConfig"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
