# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1.20.7
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import kubernetes.client
from kubernetes.client.models.io_xk8s_cluster_controlplane_v1alpha3_aws_managed_control_plane_status_network_api_server_elb import IoXK8sClusterControlplaneV1alpha3AWSManagedControlPlaneStatusNetworkApiServerElb  # noqa: E501
from kubernetes.client.rest import ApiException

class TestIoXK8sClusterControlplaneV1alpha3AWSManagedControlPlaneStatusNetworkApiServerElb(unittest.TestCase):
    """IoXK8sClusterControlplaneV1alpha3AWSManagedControlPlaneStatusNetworkApiServerElb unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test IoXK8sClusterControlplaneV1alpha3AWSManagedControlPlaneStatusNetworkApiServerElb
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = kubernetes.client.models.io_xk8s_cluster_controlplane_v1alpha3_aws_managed_control_plane_status_network_api_server_elb.IoXK8sClusterControlplaneV1alpha3AWSManagedControlPlaneStatusNetworkApiServerElb()  # noqa: E501
        if include_optional :
            return IoXK8sClusterControlplaneV1alpha3AWSManagedControlPlaneStatusNetworkApiServerElb(
                attributes = kubernetes.client.models.io_x_k8s_cluster_controlplane_v1alpha3_aws_managed_control_plane_status_network_api_server_elb_attributes.io_x_k8s_cluster_controlplane_v1alpha3_AWSManagedControlPlane_status_network_apiServerElb_attributes(
                    cross_zone_load_balancing = True, 
                    idle_timeout = 56, ), 
                availability_zones = [
                    '0'
                    ], 
                dns_name = '0', 
                health_checks = kubernetes.client.models.io_x_k8s_cluster_controlplane_v1alpha3_aws_managed_control_plane_status_network_api_server_elb_health_checks.io_x_k8s_cluster_controlplane_v1alpha3_AWSManagedControlPlane_status_network_apiServerElb_healthChecks(
                    healthy_threshold = 56, 
                    interval = 56, 
                    target = '0', 
                    timeout = 56, 
                    unhealthy_threshold = 56, ), 
                listeners = [
                    kubernetes.client.models.io_x_k8s_cluster_controlplane_v1alpha3_aws_managed_control_plane_status_network_api_server_elb_listeners.io_x_k8s_cluster_controlplane_v1alpha3_AWSManagedControlPlane_status_network_apiServerElb_listeners(
                        instance_port = 56, 
                        instance_protocol = '0', 
                        port = 56, 
                        protocol = '0', )
                    ], 
                name = '0', 
                scheme = '0', 
                security_group_ids = [
                    '0'
                    ], 
                subnet_ids = [
                    '0'
                    ], 
                tags = {
                    'key' : '0'
                    }
            )
        else :
            return IoXK8sClusterControlplaneV1alpha3AWSManagedControlPlaneStatusNetworkApiServerElb(
        )

    def testIoXK8sClusterControlplaneV1alpha3AWSManagedControlPlaneStatusNetworkApiServerElb(self):
        """Test IoXK8sClusterControlplaneV1alpha3AWSManagedControlPlaneStatusNetworkApiServerElb"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
