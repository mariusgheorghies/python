# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1.25.12
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import kubernetes.client
from kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_webhook import IoExternalSecretsV1alpha1ClusterSecretStoreSpecProviderWebhook  # noqa: E501
from kubernetes.client.rest import ApiException

class TestIoExternalSecretsV1alpha1ClusterSecretStoreSpecProviderWebhook(unittest.TestCase):
    """IoExternalSecretsV1alpha1ClusterSecretStoreSpecProviderWebhook unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test IoExternalSecretsV1alpha1ClusterSecretStoreSpecProviderWebhook
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_webhook.IoExternalSecretsV1alpha1ClusterSecretStoreSpecProviderWebhook()  # noqa: E501
        if include_optional :
            return IoExternalSecretsV1alpha1ClusterSecretStoreSpecProviderWebhook(
                body = '0', 
                ca_bundle = 'YQ==', 
                ca_provider = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_webhook_ca_provider.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_webhook_caProvider(
                    key = '0', 
                    name = '0', 
                    namespace = '0', 
                    type = 'Secret', ), 
                headers = {
                    'key' : '0'
                    }, 
                method = '0', 
                result = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_webhook_result.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_webhook_result(
                    json_path = '0', ), 
                secrets = [
                    kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_webhook_secrets.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_webhook_secrets(
                        name = '0', 
                        secret_ref = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_webhook_secret_ref.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_webhook_secretRef(
                            key = '0', 
                            name = '0', 
                            namespace = '0', ), )
                    ], 
                timeout = '0', 
                url = '0'
            )
        else :
            return IoExternalSecretsV1alpha1ClusterSecretStoreSpecProviderWebhook(
                result = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_webhook_result.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_webhook_result(
                    json_path = '0', ),
                url = '0',
        )

    def testIoExternalSecretsV1alpha1ClusterSecretStoreSpecProviderWebhook(self):
        """Test IoExternalSecretsV1alpha1ClusterSecretStoreSpecProviderWebhook"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
