# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1.25.12
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import kubernetes.client
from kubernetes.client.models.io_external_secrets_generators_v1alpha1_vault_dynamic_secret import IoExternalSecretsGeneratorsV1alpha1VaultDynamicSecret  # noqa: E501
from kubernetes.client.rest import ApiException

class TestIoExternalSecretsGeneratorsV1alpha1VaultDynamicSecret(unittest.TestCase):
    """IoExternalSecretsGeneratorsV1alpha1VaultDynamicSecret unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test IoExternalSecretsGeneratorsV1alpha1VaultDynamicSecret
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = kubernetes.client.models.io_external_secrets_generators_v1alpha1_vault_dynamic_secret.IoExternalSecretsGeneratorsV1alpha1VaultDynamicSecret()  # noqa: E501
        if include_optional :
            return IoExternalSecretsGeneratorsV1alpha1VaultDynamicSecret(
                api_version = '0', 
                kind = '0', 
                metadata = kubernetes.client.models.v1/object_meta.v1.ObjectMeta(
                    annotations = {
                        'key' : '0'
                        }, 
                    creation_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    deletion_grace_period_seconds = 56, 
                    deletion_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    finalizers = [
                        '0'
                        ], 
                    generate_name = '0', 
                    generation = 56, 
                    labels = {
                        'key' : '0'
                        }, 
                    managed_fields = [
                        kubernetes.client.models.v1/managed_fields_entry.v1.ManagedFieldsEntry(
                            api_version = '0', 
                            fields_type = '0', 
                            fields_v1 = kubernetes.client.models.fields_v1.fieldsV1(), 
                            manager = '0', 
                            operation = '0', 
                            subresource = '0', 
                            time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                        ], 
                    name = '0', 
                    namespace = '0', 
                    owner_references = [
                        kubernetes.client.models.v1/owner_reference.v1.OwnerReference(
                            api_version = '0', 
                            block_owner_deletion = True, 
                            controller = True, 
                            kind = '0', 
                            name = '0', 
                            uid = '0', )
                        ], 
                    resource_version = '0', 
                    self_link = '0', 
                    uid = '0', ), 
                spec = kubernetes.client.models.io_external_secrets_generators_v1alpha1_vault_dynamic_secret_spec.io_external_secrets_generators_v1alpha1_VaultDynamicSecret_spec(
                    method = '0', 
                    parameters = kubernetes.client.models.parameters.parameters(), 
                    path = '0', 
                    provider = kubernetes.client.models.io_external_secrets_generators_v1alpha1_vault_dynamic_secret_spec_provider.io_external_secrets_generators_v1alpha1_VaultDynamicSecret_spec_provider(
                        auth = kubernetes.client.models.io_external_secrets_generators_v1alpha1_vault_dynamic_secret_spec_provider_auth.io_external_secrets_generators_v1alpha1_VaultDynamicSecret_spec_provider_auth(
                            app_role = kubernetes.client.models.io_external_secrets_generators_v1alpha1_vault_dynamic_secret_spec_provider_auth_app_role.io_external_secrets_generators_v1alpha1_VaultDynamicSecret_spec_provider_auth_appRole(
                                path = '0', 
                                role_id = '0', 
                                secret_ref = kubernetes.client.models.io_external_secrets_generators_v1alpha1_vault_dynamic_secret_spec_provider_auth_app_role_secret_ref.io_external_secrets_generators_v1alpha1_VaultDynamicSecret_spec_provider_auth_appRole_secretRef(
                                    key = '0', 
                                    name = '0', 
                                    namespace = '0', ), ), 
                            cert = kubernetes.client.models.io_external_secrets_generators_v1alpha1_vault_dynamic_secret_spec_provider_auth_cert.io_external_secrets_generators_v1alpha1_VaultDynamicSecret_spec_provider_auth_cert(
                                kubernetes.client_cert = kubernetes.client.models.io_external_secrets_generators_v1alpha1_vault_dynamic_secret_spec_provider_auth_cert_client_cert.io_external_secrets_generators_v1alpha1_VaultDynamicSecret_spec_provider_auth_cert_clientCert(
                                    key = '0', 
                                    name = '0', 
                                    namespace = '0', ), ), 
                            jwt = kubernetes.client.models.io_external_secrets_generators_v1alpha1_vault_dynamic_secret_spec_provider_auth_jwt.io_external_secrets_generators_v1alpha1_VaultDynamicSecret_spec_provider_auth_jwt(
                                kubernetes_service_account_token = kubernetes.client.models.io_external_secrets_generators_v1alpha1_vault_dynamic_secret_spec_provider_auth_jwt_kubernetes_service_account_token.io_external_secrets_generators_v1alpha1_VaultDynamicSecret_spec_provider_auth_jwt_kubernetesServiceAccountToken(
                                    audiences = [
                                        '0'
                                        ], 
                                    expiration_seconds = 56, 
                                    service_account_ref = kubernetes.client.models.io_external_secrets_generators_v1alpha1_vault_dynamic_secret_spec_provider_auth_jwt_kubernetes_service_account_token_service_account_ref.io_external_secrets_generators_v1alpha1_VaultDynamicSecret_spec_provider_auth_jwt_kubernetesServiceAccountToken_serviceAccountRef(
                                        name = '0', 
                                        namespace = '0', ), ), 
                                path = '0', 
                                role = '0', ), 
                            kubernetes = kubernetes.client.models.io_external_secrets_generators_v1alpha1_vault_dynamic_secret_spec_provider_auth_kubernetes.io_external_secrets_generators_v1alpha1_VaultDynamicSecret_spec_provider_auth_kubernetes(
                                mount_path = '0', 
                                role = '0', ), 
                            ldap = kubernetes.client.models.io_external_secrets_generators_v1alpha1_vault_dynamic_secret_spec_provider_auth_ldap.io_external_secrets_generators_v1alpha1_VaultDynamicSecret_spec_provider_auth_ldap(
                                path = '0', 
                                username = '0', ), 
                            token_secret_ref = kubernetes.client.models.io_external_secrets_generators_v1alpha1_vault_dynamic_secret_spec_provider_auth_token_secret_ref.io_external_secrets_generators_v1alpha1_VaultDynamicSecret_spec_provider_auth_tokenSecretRef(
                                key = '0', 
                                name = '0', 
                                namespace = '0', ), ), 
                        ca_bundle = 'YQ==', 
                        ca_provider = kubernetes.client.models.io_external_secrets_generators_v1alpha1_vault_dynamic_secret_spec_provider_ca_provider.io_external_secrets_generators_v1alpha1_VaultDynamicSecret_spec_provider_caProvider(
                            key = '0', 
                            name = '0', 
                            namespace = '0', 
                            type = 'Secret', ), 
                        forward_inconsistent = True, 
                        namespace = '0', 
                        path = '0', 
                        read_your_writes = True, 
                        server = '0', 
                        version = 'v1', ), )
            )
        else :
            return IoExternalSecretsGeneratorsV1alpha1VaultDynamicSecret(
        )

    def testIoExternalSecretsGeneratorsV1alpha1VaultDynamicSecret(self):
        """Test IoExternalSecretsGeneratorsV1alpha1VaultDynamicSecret"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
