# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1.25.12
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import kubernetes.client
from kubernetes.client.models.io_external_secrets_v1beta1_cluster_external_secret_list import IoExternalSecretsV1beta1ClusterExternalSecretList  # noqa: E501
from kubernetes.client.rest import ApiException

class TestIoExternalSecretsV1beta1ClusterExternalSecretList(unittest.TestCase):
    """IoExternalSecretsV1beta1ClusterExternalSecretList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test IoExternalSecretsV1beta1ClusterExternalSecretList
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = kubernetes.client.models.io_external_secrets_v1beta1_cluster_external_secret_list.IoExternalSecretsV1beta1ClusterExternalSecretList()  # noqa: E501
        if include_optional :
            return IoExternalSecretsV1beta1ClusterExternalSecretList(
                api_version = '0', 
                items = [
                    kubernetes.client.models.io/external_secrets/v1beta1/cluster_external_secret.io.external-secrets.v1beta1.ClusterExternalSecret(
                        api_version = '0', 
                        kind = '0', 
                        metadata = kubernetes.client.models.v1/object_meta.v1.ObjectMeta(
                            annotations = {
                                'key' : '0'
                                }, 
                            creation_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            deletion_grace_period_seconds = 56, 
                            deletion_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            finalizers = [
                                '0'
                                ], 
                            generate_name = '0', 
                            generation = 56, 
                            labels = {
                                'key' : '0'
                                }, 
                            managed_fields = [
                                kubernetes.client.models.v1/managed_fields_entry.v1.ManagedFieldsEntry(
                                    api_version = '0', 
                                    fields_type = '0', 
                                    fields_v1 = kubernetes.client.models.fields_v1.fieldsV1(), 
                                    manager = '0', 
                                    operation = '0', 
                                    subresource = '0', 
                                    time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                ], 
                            name = '0', 
                            namespace = '0', 
                            owner_references = [
                                kubernetes.client.models.v1/owner_reference.v1.OwnerReference(
                                    api_version = '0', 
                                    block_owner_deletion = True, 
                                    controller = True, 
                                    kind = '0', 
                                    name = '0', 
                                    uid = '0', )
                                ], 
                            resource_version = '0', 
                            self_link = '0', 
                            uid = '0', ), 
                        spec = kubernetes.client.models.io_external_secrets_v1beta1_cluster_external_secret_spec.io_external_secrets_v1beta1_ClusterExternalSecret_spec(
                            external_secret_name = '0', 
                            external_secret_spec = kubernetes.client.models.io_external_secrets_v1beta1_cluster_external_secret_spec_external_secret_spec.io_external_secrets_v1beta1_ClusterExternalSecret_spec_externalSecretSpec(
                                data = [
                                    kubernetes.client.models.io_external_secrets_v1beta1_cluster_external_secret_spec_external_secret_spec_data.io_external_secrets_v1beta1_ClusterExternalSecret_spec_externalSecretSpec_data(
                                        remote_ref = kubernetes.client.models.io_external_secrets_v1beta1_cluster_external_secret_spec_external_secret_spec_remote_ref.io_external_secrets_v1beta1_ClusterExternalSecret_spec_externalSecretSpec_remoteRef(
                                            conversion_strategy = '0', 
                                            decoding_strategy = '0', 
                                            key = '0', 
                                            metadata_policy = '0', 
                                            property = '0', 
                                            version = '0', ), 
                                        secret_key = '0', 
                                        source_ref = kubernetes.client.models.io_external_secrets_v1beta1_cluster_external_secret_spec_external_secret_spec_source_ref.io_external_secrets_v1beta1_ClusterExternalSecret_spec_externalSecretSpec_sourceRef(
                                            generator_ref = kubernetes.client.models.io_external_secrets_v1beta1_cluster_external_secret_spec_external_secret_spec_source_ref_generator_ref.io_external_secrets_v1beta1_ClusterExternalSecret_spec_externalSecretSpec_sourceRef_generatorRef(
                                                api_version = '0', 
                                                kind = '0', 
                                                name = '0', ), 
                                            store_ref = kubernetes.client.models.io_external_secrets_v1alpha1_external_secret_spec_secret_store_ref.io_external_secrets_v1alpha1_ExternalSecret_spec_secretStoreRef(
                                                kind = '0', 
                                                name = '0', ), ), )
                                    ], 
                                data_from = [
                                    kubernetes.client.models.io_external_secrets_v1beta1_cluster_external_secret_spec_external_secret_spec_data_from.io_external_secrets_v1beta1_ClusterExternalSecret_spec_externalSecretSpec_dataFrom(
                                        extract = kubernetes.client.models.io_external_secrets_v1beta1_cluster_external_secret_spec_external_secret_spec_extract.io_external_secrets_v1beta1_ClusterExternalSecret_spec_externalSecretSpec_extract(
                                            conversion_strategy = '0', 
                                            decoding_strategy = '0', 
                                            key = '0', 
                                            metadata_policy = '0', 
                                            property = '0', 
                                            version = '0', ), 
                                        find = kubernetes.client.models.io_external_secrets_v1beta1_cluster_external_secret_spec_external_secret_spec_find.io_external_secrets_v1beta1_ClusterExternalSecret_spec_externalSecretSpec_find(
                                            conversion_strategy = '0', 
                                            decoding_strategy = '0', 
                                            name = kubernetes.client.models.io_external_secrets_v1beta1_cluster_external_secret_spec_external_secret_spec_find_name.io_external_secrets_v1beta1_ClusterExternalSecret_spec_externalSecretSpec_find_name(
                                                regexp = '0', ), 
                                            path = '0', 
                                            tags = {
                                                'key' : '0'
                                                }, ), 
                                        rewrite = [
                                            kubernetes.client.models.io_external_secrets_v1beta1_cluster_external_secret_spec_external_secret_spec_rewrite.io_external_secrets_v1beta1_ClusterExternalSecret_spec_externalSecretSpec_rewrite(
                                                regexp = kubernetes.client.models.io_external_secrets_v1beta1_cluster_external_secret_spec_external_secret_spec_regexp.io_external_secrets_v1beta1_ClusterExternalSecret_spec_externalSecretSpec_regexp(
                                                    source = '0', 
                                                    target = '0', ), )
                                            ], )
                                    ], 
                                refresh_interval = '0', 
                                secret_store_ref = kubernetes.client.models.io_external_secrets_v1alpha1_external_secret_spec_secret_store_ref.io_external_secrets_v1alpha1_ExternalSecret_spec_secretStoreRef(
                                    kind = '0', 
                                    name = '0', ), 
                                target = kubernetes.client.models.io_external_secrets_v1beta1_cluster_external_secret_spec_external_secret_spec_target.io_external_secrets_v1beta1_ClusterExternalSecret_spec_externalSecretSpec_target(
                                    creation_policy = 'Owner', 
                                    deletion_policy = 'Delete', 
                                    immutable = True, 
                                    template = kubernetes.client.models.io_external_secrets_v1beta1_cluster_external_secret_spec_external_secret_spec_target_template.io_external_secrets_v1beta1_ClusterExternalSecret_spec_externalSecretSpec_target_template(
                                        engine_version = '0', 
                                        template_from = [
                                            kubernetes.client.models.io_external_secrets_v1beta1_cluster_external_secret_spec_external_secret_spec_target_template_template_from.io_external_secrets_v1beta1_ClusterExternalSecret_spec_externalSecretSpec_target_template_templateFrom(
                                                config_map = kubernetes.client.models.io_external_secrets_v1beta1_cluster_external_secret_spec_external_secret_spec_target_template_config_map.io_external_secrets_v1beta1_ClusterExternalSecret_spec_externalSecretSpec_target_template_configMap(
                                                    items = [
                                                        kubernetes.client.models.io_external_secrets_v1beta1_cluster_external_secret_spec_external_secret_spec_target_template_config_map_items.io_external_secrets_v1beta1_ClusterExternalSecret_spec_externalSecretSpec_target_template_configMap_items(
                                                            key = '0', 
                                                            template_as = '0', )
                                                        ], 
                                                    name = '0', ), 
                                                literal = '0', 
                                                secret = kubernetes.client.models.io_external_secrets_v1beta1_cluster_external_secret_spec_external_secret_spec_target_template_config_map.io_external_secrets_v1beta1_ClusterExternalSecret_spec_externalSecretSpec_target_template_configMap(
                                                    items = [
                                                        kubernetes.client.models.io_external_secrets_v1beta1_cluster_external_secret_spec_external_secret_spec_target_template_config_map_items.io_external_secrets_v1beta1_ClusterExternalSecret_spec_externalSecretSpec_target_template_configMap_items(
                                                            key = '0', 
                                                            template_as = '0', )
                                                        ], 
                                                    name = '0', ), )
                                            ], 
                                        type = '0', ), ), ), 
                            namespace_selector = kubernetes.client.models.io_external_secrets_v1beta1_cluster_external_secret_spec_namespace_selector.io_external_secrets_v1beta1_ClusterExternalSecret_spec_namespaceSelector(
                                match_expressions = [
                                    kubernetes.client.models.aws_k8s_networking_v1alpha1_policy_endpoint_spec_pod_selector_match_expressions.aws_k8s_networking_v1alpha1_PolicyEndpoint_spec_podSelector_matchExpressions(
                                        key = '0', 
                                        operator = '0', 
                                        values = [
                                            '0'
                                            ], )
                                    ], 
                                match_labels = {
                                    'key' : '0'
                                    }, ), 
                            refresh_time = '0', ), 
                        status = kubernetes.client.models.io_external_secrets_v1beta1_cluster_external_secret_status.io_external_secrets_v1beta1_ClusterExternalSecret_status(
                            conditions = [
                                kubernetes.client.models.io_external_secrets_v1beta1_cluster_external_secret_status_conditions.io_external_secrets_v1beta1_ClusterExternalSecret_status_conditions(
                                    message = '0', 
                                    status = '0', 
                                    type = '0', )
                                ], 
                            failed_namespaces = [
                                kubernetes.client.models.io_external_secrets_v1beta1_cluster_external_secret_status_failed_namespaces.io_external_secrets_v1beta1_ClusterExternalSecret_status_failedNamespaces(
                                    namespace = '0', 
                                    reason = '0', )
                                ], 
                            provisioned_namespaces = [
                                '0'
                                ], ), )
                    ], 
                kind = '0', 
                metadata = kubernetes.client.models.v1/list_meta.v1.ListMeta(
                    continue = '0', 
                    remaining_item_count = 56, 
                    resource_version = '0', 
                    self_link = '0', )
            )
        else :
            return IoExternalSecretsV1beta1ClusterExternalSecretList(
                items = [
                    kubernetes.client.models.io/external_secrets/v1beta1/cluster_external_secret.io.external-secrets.v1beta1.ClusterExternalSecret(
                        api_version = '0', 
                        kind = '0', 
                        metadata = kubernetes.client.models.v1/object_meta.v1.ObjectMeta(
                            annotations = {
                                'key' : '0'
                                }, 
                            creation_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            deletion_grace_period_seconds = 56, 
                            deletion_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            finalizers = [
                                '0'
                                ], 
                            generate_name = '0', 
                            generation = 56, 
                            labels = {
                                'key' : '0'
                                }, 
                            managed_fields = [
                                kubernetes.client.models.v1/managed_fields_entry.v1.ManagedFieldsEntry(
                                    api_version = '0', 
                                    fields_type = '0', 
                                    fields_v1 = kubernetes.client.models.fields_v1.fieldsV1(), 
                                    manager = '0', 
                                    operation = '0', 
                                    subresource = '0', 
                                    time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                ], 
                            name = '0', 
                            namespace = '0', 
                            owner_references = [
                                kubernetes.client.models.v1/owner_reference.v1.OwnerReference(
                                    api_version = '0', 
                                    block_owner_deletion = True, 
                                    controller = True, 
                                    kind = '0', 
                                    name = '0', 
                                    uid = '0', )
                                ], 
                            resource_version = '0', 
                            self_link = '0', 
                            uid = '0', ), 
                        spec = kubernetes.client.models.io_external_secrets_v1beta1_cluster_external_secret_spec.io_external_secrets_v1beta1_ClusterExternalSecret_spec(
                            external_secret_name = '0', 
                            external_secret_spec = kubernetes.client.models.io_external_secrets_v1beta1_cluster_external_secret_spec_external_secret_spec.io_external_secrets_v1beta1_ClusterExternalSecret_spec_externalSecretSpec(
                                data = [
                                    kubernetes.client.models.io_external_secrets_v1beta1_cluster_external_secret_spec_external_secret_spec_data.io_external_secrets_v1beta1_ClusterExternalSecret_spec_externalSecretSpec_data(
                                        remote_ref = kubernetes.client.models.io_external_secrets_v1beta1_cluster_external_secret_spec_external_secret_spec_remote_ref.io_external_secrets_v1beta1_ClusterExternalSecret_spec_externalSecretSpec_remoteRef(
                                            conversion_strategy = '0', 
                                            decoding_strategy = '0', 
                                            key = '0', 
                                            metadata_policy = '0', 
                                            property = '0', 
                                            version = '0', ), 
                                        secret_key = '0', 
                                        source_ref = kubernetes.client.models.io_external_secrets_v1beta1_cluster_external_secret_spec_external_secret_spec_source_ref.io_external_secrets_v1beta1_ClusterExternalSecret_spec_externalSecretSpec_sourceRef(
                                            generator_ref = kubernetes.client.models.io_external_secrets_v1beta1_cluster_external_secret_spec_external_secret_spec_source_ref_generator_ref.io_external_secrets_v1beta1_ClusterExternalSecret_spec_externalSecretSpec_sourceRef_generatorRef(
                                                api_version = '0', 
                                                kind = '0', 
                                                name = '0', ), 
                                            store_ref = kubernetes.client.models.io_external_secrets_v1alpha1_external_secret_spec_secret_store_ref.io_external_secrets_v1alpha1_ExternalSecret_spec_secretStoreRef(
                                                kind = '0', 
                                                name = '0', ), ), )
                                    ], 
                                data_from = [
                                    kubernetes.client.models.io_external_secrets_v1beta1_cluster_external_secret_spec_external_secret_spec_data_from.io_external_secrets_v1beta1_ClusterExternalSecret_spec_externalSecretSpec_dataFrom(
                                        extract = kubernetes.client.models.io_external_secrets_v1beta1_cluster_external_secret_spec_external_secret_spec_extract.io_external_secrets_v1beta1_ClusterExternalSecret_spec_externalSecretSpec_extract(
                                            conversion_strategy = '0', 
                                            decoding_strategy = '0', 
                                            key = '0', 
                                            metadata_policy = '0', 
                                            property = '0', 
                                            version = '0', ), 
                                        find = kubernetes.client.models.io_external_secrets_v1beta1_cluster_external_secret_spec_external_secret_spec_find.io_external_secrets_v1beta1_ClusterExternalSecret_spec_externalSecretSpec_find(
                                            conversion_strategy = '0', 
                                            decoding_strategy = '0', 
                                            name = kubernetes.client.models.io_external_secrets_v1beta1_cluster_external_secret_spec_external_secret_spec_find_name.io_external_secrets_v1beta1_ClusterExternalSecret_spec_externalSecretSpec_find_name(
                                                regexp = '0', ), 
                                            path = '0', 
                                            tags = {
                                                'key' : '0'
                                                }, ), 
                                        rewrite = [
                                            kubernetes.client.models.io_external_secrets_v1beta1_cluster_external_secret_spec_external_secret_spec_rewrite.io_external_secrets_v1beta1_ClusterExternalSecret_spec_externalSecretSpec_rewrite(
                                                regexp = kubernetes.client.models.io_external_secrets_v1beta1_cluster_external_secret_spec_external_secret_spec_regexp.io_external_secrets_v1beta1_ClusterExternalSecret_spec_externalSecretSpec_regexp(
                                                    source = '0', 
                                                    target = '0', ), )
                                            ], )
                                    ], 
                                refresh_interval = '0', 
                                secret_store_ref = kubernetes.client.models.io_external_secrets_v1alpha1_external_secret_spec_secret_store_ref.io_external_secrets_v1alpha1_ExternalSecret_spec_secretStoreRef(
                                    kind = '0', 
                                    name = '0', ), 
                                target = kubernetes.client.models.io_external_secrets_v1beta1_cluster_external_secret_spec_external_secret_spec_target.io_external_secrets_v1beta1_ClusterExternalSecret_spec_externalSecretSpec_target(
                                    creation_policy = 'Owner', 
                                    deletion_policy = 'Delete', 
                                    immutable = True, 
                                    template = kubernetes.client.models.io_external_secrets_v1beta1_cluster_external_secret_spec_external_secret_spec_target_template.io_external_secrets_v1beta1_ClusterExternalSecret_spec_externalSecretSpec_target_template(
                                        engine_version = '0', 
                                        template_from = [
                                            kubernetes.client.models.io_external_secrets_v1beta1_cluster_external_secret_spec_external_secret_spec_target_template_template_from.io_external_secrets_v1beta1_ClusterExternalSecret_spec_externalSecretSpec_target_template_templateFrom(
                                                config_map = kubernetes.client.models.io_external_secrets_v1beta1_cluster_external_secret_spec_external_secret_spec_target_template_config_map.io_external_secrets_v1beta1_ClusterExternalSecret_spec_externalSecretSpec_target_template_configMap(
                                                    items = [
                                                        kubernetes.client.models.io_external_secrets_v1beta1_cluster_external_secret_spec_external_secret_spec_target_template_config_map_items.io_external_secrets_v1beta1_ClusterExternalSecret_spec_externalSecretSpec_target_template_configMap_items(
                                                            key = '0', 
                                                            template_as = '0', )
                                                        ], 
                                                    name = '0', ), 
                                                literal = '0', 
                                                secret = kubernetes.client.models.io_external_secrets_v1beta1_cluster_external_secret_spec_external_secret_spec_target_template_config_map.io_external_secrets_v1beta1_ClusterExternalSecret_spec_externalSecretSpec_target_template_configMap(
                                                    items = [
                                                        kubernetes.client.models.io_external_secrets_v1beta1_cluster_external_secret_spec_external_secret_spec_target_template_config_map_items.io_external_secrets_v1beta1_ClusterExternalSecret_spec_externalSecretSpec_target_template_configMap_items(
                                                            key = '0', 
                                                            template_as = '0', )
                                                        ], 
                                                    name = '0', ), )
                                            ], 
                                        type = '0', ), ), ), 
                            namespace_selector = kubernetes.client.models.io_external_secrets_v1beta1_cluster_external_secret_spec_namespace_selector.io_external_secrets_v1beta1_ClusterExternalSecret_spec_namespaceSelector(
                                match_expressions = [
                                    kubernetes.client.models.aws_k8s_networking_v1alpha1_policy_endpoint_spec_pod_selector_match_expressions.aws_k8s_networking_v1alpha1_PolicyEndpoint_spec_podSelector_matchExpressions(
                                        key = '0', 
                                        operator = '0', 
                                        values = [
                                            '0'
                                            ], )
                                    ], 
                                match_labels = {
                                    'key' : '0'
                                    }, ), 
                            refresh_time = '0', ), 
                        status = kubernetes.client.models.io_external_secrets_v1beta1_cluster_external_secret_status.io_external_secrets_v1beta1_ClusterExternalSecret_status(
                            conditions = [
                                kubernetes.client.models.io_external_secrets_v1beta1_cluster_external_secret_status_conditions.io_external_secrets_v1beta1_ClusterExternalSecret_status_conditions(
                                    message = '0', 
                                    status = '0', 
                                    type = '0', )
                                ], 
                            failed_namespaces = [
                                kubernetes.client.models.io_external_secrets_v1beta1_cluster_external_secret_status_failed_namespaces.io_external_secrets_v1beta1_ClusterExternalSecret_status_failedNamespaces(
                                    namespace = '0', 
                                    reason = '0', )
                                ], 
                            provisioned_namespaces = [
                                '0'
                                ], ), )
                    ],
        )

    def testIoExternalSecretsV1beta1ClusterExternalSecretList(self):
        """Test IoExternalSecretsV1beta1ClusterExternalSecretList"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
