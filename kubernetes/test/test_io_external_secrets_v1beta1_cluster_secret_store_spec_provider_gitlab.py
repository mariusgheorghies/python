# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1.25.12
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import kubernetes.client
from kubernetes.client.models.io_external_secrets_v1beta1_cluster_secret_store_spec_provider_gitlab import IoExternalSecretsV1beta1ClusterSecretStoreSpecProviderGitlab  # noqa: E501
from kubernetes.client.rest import ApiException

class TestIoExternalSecretsV1beta1ClusterSecretStoreSpecProviderGitlab(unittest.TestCase):
    """IoExternalSecretsV1beta1ClusterSecretStoreSpecProviderGitlab unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test IoExternalSecretsV1beta1ClusterSecretStoreSpecProviderGitlab
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = kubernetes.client.models.io_external_secrets_v1beta1_cluster_secret_store_spec_provider_gitlab.IoExternalSecretsV1beta1ClusterSecretStoreSpecProviderGitlab()  # noqa: E501
        if include_optional :
            return IoExternalSecretsV1beta1ClusterSecretStoreSpecProviderGitlab(
                auth = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_gitlab_auth.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_gitlab_auth(
                    secret_ref = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_gitlab_auth_secret_ref.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_gitlab_auth_SecretRef(
                        access_token = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_gitlab_auth_secret_ref_access_token.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_gitlab_auth_SecretRef_accessToken(
                            key = '0', 
                            name = '0', 
                            namespace = '0', ), ), ), 
                environment = '0', 
                group_i_ds = [
                    '0'
                    ], 
                inherit_from_groups = True, 
                project_id = '0', 
                url = '0'
            )
        else :
            return IoExternalSecretsV1beta1ClusterSecretStoreSpecProviderGitlab(
                auth = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_gitlab_auth.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_gitlab_auth(
                    secret_ref = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_gitlab_auth_secret_ref.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_gitlab_auth_SecretRef(
                        access_token = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_gitlab_auth_secret_ref_access_token.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_gitlab_auth_SecretRef_accessToken(
                            key = '0', 
                            name = '0', 
                            namespace = '0', ), ), ),
        )

    def testIoExternalSecretsV1beta1ClusterSecretStoreSpecProviderGitlab(self):
        """Test IoExternalSecretsV1beta1ClusterSecretStoreSpecProviderGitlab"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
