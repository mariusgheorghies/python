# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1.20.7
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest

import kubernetes.client
from kubernetes.client.api.cluster_xk8s_io_v1alpha4_api import ClusterXK8sIoV1alpha4Api  # noqa: E501
from kubernetes.client.rest import ApiException


class TestClusterXK8sIoV1alpha4Api(unittest.TestCase):
    """ClusterXK8sIoV1alpha4Api unit test stubs"""

    def setUp(self):
        self.api = kubernetes.client.api.cluster_xk8s_io_v1alpha4_api.ClusterXK8sIoV1alpha4Api()  # noqa: E501

    def tearDown(self):
        pass

    def test_create_namespaced_cluster(self):
        """Test case for create_namespaced_cluster

        """
        pass

    def test_create_namespaced_cluster_class(self):
        """Test case for create_namespaced_cluster_class

        """
        pass

    def test_create_namespaced_machine(self):
        """Test case for create_namespaced_machine

        """
        pass

    def test_create_namespaced_machine_deployment(self):
        """Test case for create_namespaced_machine_deployment

        """
        pass

    def test_create_namespaced_machine_health_check(self):
        """Test case for create_namespaced_machine_health_check

        """
        pass

    def test_create_namespaced_machine_pool(self):
        """Test case for create_namespaced_machine_pool

        """
        pass

    def test_create_namespaced_machine_set(self):
        """Test case for create_namespaced_machine_set

        """
        pass

    def test_delete_collection_namespaced_cluster(self):
        """Test case for delete_collection_namespaced_cluster

        """
        pass

    def test_delete_collection_namespaced_cluster_class(self):
        """Test case for delete_collection_namespaced_cluster_class

        """
        pass

    def test_delete_collection_namespaced_machine(self):
        """Test case for delete_collection_namespaced_machine

        """
        pass

    def test_delete_collection_namespaced_machine_deployment(self):
        """Test case for delete_collection_namespaced_machine_deployment

        """
        pass

    def test_delete_collection_namespaced_machine_health_check(self):
        """Test case for delete_collection_namespaced_machine_health_check

        """
        pass

    def test_delete_collection_namespaced_machine_pool(self):
        """Test case for delete_collection_namespaced_machine_pool

        """
        pass

    def test_delete_collection_namespaced_machine_set(self):
        """Test case for delete_collection_namespaced_machine_set

        """
        pass

    def test_delete_namespaced_cluster(self):
        """Test case for delete_namespaced_cluster

        """
        pass

    def test_delete_namespaced_cluster_class(self):
        """Test case for delete_namespaced_cluster_class

        """
        pass

    def test_delete_namespaced_machine(self):
        """Test case for delete_namespaced_machine

        """
        pass

    def test_delete_namespaced_machine_deployment(self):
        """Test case for delete_namespaced_machine_deployment

        """
        pass

    def test_delete_namespaced_machine_health_check(self):
        """Test case for delete_namespaced_machine_health_check

        """
        pass

    def test_delete_namespaced_machine_pool(self):
        """Test case for delete_namespaced_machine_pool

        """
        pass

    def test_delete_namespaced_machine_set(self):
        """Test case for delete_namespaced_machine_set

        """
        pass

    def test_list_cluster_class_for_all_namespaces(self):
        """Test case for list_cluster_class_for_all_namespaces

        """
        pass

    def test_list_cluster_for_all_namespaces(self):
        """Test case for list_cluster_for_all_namespaces

        """
        pass

    def test_list_machine_deployment_for_all_namespaces(self):
        """Test case for list_machine_deployment_for_all_namespaces

        """
        pass

    def test_list_machine_for_all_namespaces(self):
        """Test case for list_machine_for_all_namespaces

        """
        pass

    def test_list_machine_health_check_for_all_namespaces(self):
        """Test case for list_machine_health_check_for_all_namespaces

        """
        pass

    def test_list_machine_pool_for_all_namespaces(self):
        """Test case for list_machine_pool_for_all_namespaces

        """
        pass

    def test_list_machine_set_for_all_namespaces(self):
        """Test case for list_machine_set_for_all_namespaces

        """
        pass

    def test_list_namespaced_cluster(self):
        """Test case for list_namespaced_cluster

        """
        pass

    def test_list_namespaced_cluster_class(self):
        """Test case for list_namespaced_cluster_class

        """
        pass

    def test_list_namespaced_machine(self):
        """Test case for list_namespaced_machine

        """
        pass

    def test_list_namespaced_machine_deployment(self):
        """Test case for list_namespaced_machine_deployment

        """
        pass

    def test_list_namespaced_machine_health_check(self):
        """Test case for list_namespaced_machine_health_check

        """
        pass

    def test_list_namespaced_machine_pool(self):
        """Test case for list_namespaced_machine_pool

        """
        pass

    def test_list_namespaced_machine_set(self):
        """Test case for list_namespaced_machine_set

        """
        pass

    def test_patch_namespaced_cluster(self):
        """Test case for patch_namespaced_cluster

        """
        pass

    def test_patch_namespaced_cluster_class(self):
        """Test case for patch_namespaced_cluster_class

        """
        pass

    def test_patch_namespaced_cluster_status(self):
        """Test case for patch_namespaced_cluster_status

        """
        pass

    def test_patch_namespaced_machine(self):
        """Test case for patch_namespaced_machine

        """
        pass

    def test_patch_namespaced_machine_deployment(self):
        """Test case for patch_namespaced_machine_deployment

        """
        pass

    def test_patch_namespaced_machine_deployment_scale(self):
        """Test case for patch_namespaced_machine_deployment_scale

        """
        pass

    def test_patch_namespaced_machine_deployment_status(self):
        """Test case for patch_namespaced_machine_deployment_status

        """
        pass

    def test_patch_namespaced_machine_health_check(self):
        """Test case for patch_namespaced_machine_health_check

        """
        pass

    def test_patch_namespaced_machine_health_check_status(self):
        """Test case for patch_namespaced_machine_health_check_status

        """
        pass

    def test_patch_namespaced_machine_pool(self):
        """Test case for patch_namespaced_machine_pool

        """
        pass

    def test_patch_namespaced_machine_pool_scale(self):
        """Test case for patch_namespaced_machine_pool_scale

        """
        pass

    def test_patch_namespaced_machine_pool_status(self):
        """Test case for patch_namespaced_machine_pool_status

        """
        pass

    def test_patch_namespaced_machine_set(self):
        """Test case for patch_namespaced_machine_set

        """
        pass

    def test_patch_namespaced_machine_set_scale(self):
        """Test case for patch_namespaced_machine_set_scale

        """
        pass

    def test_patch_namespaced_machine_set_status(self):
        """Test case for patch_namespaced_machine_set_status

        """
        pass

    def test_patch_namespaced_machine_status(self):
        """Test case for patch_namespaced_machine_status

        """
        pass

    def test_read_namespaced_cluster(self):
        """Test case for read_namespaced_cluster

        """
        pass

    def test_read_namespaced_cluster_class(self):
        """Test case for read_namespaced_cluster_class

        """
        pass

    def test_read_namespaced_cluster_status(self):
        """Test case for read_namespaced_cluster_status

        """
        pass

    def test_read_namespaced_machine(self):
        """Test case for read_namespaced_machine

        """
        pass

    def test_read_namespaced_machine_deployment(self):
        """Test case for read_namespaced_machine_deployment

        """
        pass

    def test_read_namespaced_machine_deployment_scale(self):
        """Test case for read_namespaced_machine_deployment_scale

        """
        pass

    def test_read_namespaced_machine_deployment_status(self):
        """Test case for read_namespaced_machine_deployment_status

        """
        pass

    def test_read_namespaced_machine_health_check(self):
        """Test case for read_namespaced_machine_health_check

        """
        pass

    def test_read_namespaced_machine_health_check_status(self):
        """Test case for read_namespaced_machine_health_check_status

        """
        pass

    def test_read_namespaced_machine_pool(self):
        """Test case for read_namespaced_machine_pool

        """
        pass

    def test_read_namespaced_machine_pool_scale(self):
        """Test case for read_namespaced_machine_pool_scale

        """
        pass

    def test_read_namespaced_machine_pool_status(self):
        """Test case for read_namespaced_machine_pool_status

        """
        pass

    def test_read_namespaced_machine_set(self):
        """Test case for read_namespaced_machine_set

        """
        pass

    def test_read_namespaced_machine_set_scale(self):
        """Test case for read_namespaced_machine_set_scale

        """
        pass

    def test_read_namespaced_machine_set_status(self):
        """Test case for read_namespaced_machine_set_status

        """
        pass

    def test_read_namespaced_machine_status(self):
        """Test case for read_namespaced_machine_status

        """
        pass

    def test_replace_namespaced_cluster(self):
        """Test case for replace_namespaced_cluster

        """
        pass

    def test_replace_namespaced_cluster_class(self):
        """Test case for replace_namespaced_cluster_class

        """
        pass

    def test_replace_namespaced_cluster_status(self):
        """Test case for replace_namespaced_cluster_status

        """
        pass

    def test_replace_namespaced_machine(self):
        """Test case for replace_namespaced_machine

        """
        pass

    def test_replace_namespaced_machine_deployment(self):
        """Test case for replace_namespaced_machine_deployment

        """
        pass

    def test_replace_namespaced_machine_deployment_scale(self):
        """Test case for replace_namespaced_machine_deployment_scale

        """
        pass

    def test_replace_namespaced_machine_deployment_status(self):
        """Test case for replace_namespaced_machine_deployment_status

        """
        pass

    def test_replace_namespaced_machine_health_check(self):
        """Test case for replace_namespaced_machine_health_check

        """
        pass

    def test_replace_namespaced_machine_health_check_status(self):
        """Test case for replace_namespaced_machine_health_check_status

        """
        pass

    def test_replace_namespaced_machine_pool(self):
        """Test case for replace_namespaced_machine_pool

        """
        pass

    def test_replace_namespaced_machine_pool_scale(self):
        """Test case for replace_namespaced_machine_pool_scale

        """
        pass

    def test_replace_namespaced_machine_pool_status(self):
        """Test case for replace_namespaced_machine_pool_status

        """
        pass

    def test_replace_namespaced_machine_set(self):
        """Test case for replace_namespaced_machine_set

        """
        pass

    def test_replace_namespaced_machine_set_scale(self):
        """Test case for replace_namespaced_machine_set_scale

        """
        pass

    def test_replace_namespaced_machine_set_status(self):
        """Test case for replace_namespaced_machine_set_status

        """
        pass

    def test_replace_namespaced_machine_status(self):
        """Test case for replace_namespaced_machine_status

        """
        pass


if __name__ == '__main__':
    unittest.main()
