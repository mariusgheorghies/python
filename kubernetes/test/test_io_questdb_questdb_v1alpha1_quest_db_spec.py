# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1.25.12
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import kubernetes.client
from kubernetes.client.models.io_questdb_questdb_v1alpha1_quest_db_spec import IoQuestdbQuestdbV1alpha1QuestDBSpec  # noqa: E501
from kubernetes.client.rest import ApiException

class TestIoQuestdbQuestdbV1alpha1QuestDBSpec(unittest.TestCase):
    """IoQuestdbQuestdbV1alpha1QuestDBSpec unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test IoQuestdbQuestdbV1alpha1QuestDBSpec
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = kubernetes.client.models.io_questdb_questdb_v1alpha1_quest_db_spec.IoQuestdbQuestdbV1alpha1QuestDBSpec()  # noqa: E501
        if include_optional :
            return IoQuestdbQuestdbV1alpha1QuestDBSpec(
                aws = kubernetes.client.models.io_questdb_questdb_v1alpha1_quest_db_spec_aws.io_questdb_questdb_v1alpha1_QuestDB_spec_aws(
                    eks_ca = '0', 
                    eks_url = '0', 
                    iam_instance_profile_arn = '0', 
                    image_id = '0', 
                    key_name = '0', 
                    region = '0', 
                    region_az = '0', 
                    security_group_ids = [
                        '0'
                        ], 
                    subnet_id = '0', ), 
                cluster_name = '0', 
                config = kubernetes.client.models.io_questdb_questdb_v1alpha1_quest_db_spec_config.io_questdb_questdb_v1alpha1_QuestDB_spec_config(
                    cairo = kubernetes.client.models.io_questdb_questdb_v1alpha1_quest_db_spec_config_cairo.io_questdb_questdb_v1alpha1_QuestDB_spec_config_cairo(
                        commit_lag = 56, 
                        max_uncommitted_rows = 56, 
                        out_of_order_column_memory_size = '0', 
                        table_writer_append_page_size = '0', ), 
                    http = kubernetes.client.models.io_questdb_questdb_v1alpha1_quest_db_spec_config_http.io_questdb_questdb_v1alpha1_QuestDB_spec_config_http(
                        cache_block_count = 56, 
                        cache_enabled = True, 
                        cache_row_count = 56, 
                        connection_limit = 56, 
                        read_only_mode = True, 
                        worker_count = 56, ), 
                    ilp = kubernetes.client.models.io_questdb_questdb_v1alpha1_quest_db_spec_config_ilp.io_questdb_questdb_v1alpha1_QuestDB_spec_config_ilp(
                        tcp_commit_interval_default = 56, 
                        tcp_commit_interval_fraction = '0', 
                        tcp_default_partition_by = '0', 
                        tcp_disconnect_on_error = True, 
                        tcp_io_worker_count = 56, 
                        tcp_net_connection_limit = 56, 
                        tcp_writer_worker_count = 56, ), 
                    postgres = kubernetes.client.models.io_questdb_questdb_v1alpha1_quest_db_spec_config_postgres.io_questdb_questdb_v1alpha1_QuestDB_spec_config_postgres(
                        connection_limit = 56, 
                        insert_cache_block_count = 56, 
                        insert_cache_enabled = True, 
                        insert_cache_row_count = 56, 
                        select_cache_block_count = 56, 
                        select_cache_enabled = True, 
                        select_cache_row_count = 56, 
                        update_cache_block_count = 56, 
                        update_cache_enabled = True, 
                        update_cache_row_count = 56, 
                        worker_count = 56, ), 
                    query_timeout_seconds = 56, 
                    shared_worker_count = 56, ), 
                container = kubernetes.client.models.io_questdb_questdb_v1alpha1_quest_db_spec_container.io_questdb_questdb_v1alpha1_QuestDB_spec_container(
                    name = '0', 
                    registry = '0', 
                    tag = '0', ), 
                db_name = '0', 
                instance_type = '0', 
                instance_uuid = '0', 
                monitoring_enabled = True, 
                org_id = '0', 
                single_tenant = True, 
                subdomain = '0', 
                tenant_app = True, 
                volume = kubernetes.client.models.io_questdb_questdb_v1alpha1_quest_db_spec_volume.io_questdb_questdb_v1alpha1_QuestDB_spec_volume(
                    encrypted = True, 
                    iops = 56, 
                    size = kubernetes.client.models.size.size(), 
                    throughput = 56, 
                    type = '0', ), 
                volume_uuid = '0'
            )
        else :
            return IoQuestdbQuestdbV1alpha1QuestDBSpec(
                db_name = '0',
                instance_uuid = '0',
                org_id = '0',
                volume_uuid = '0',
        )

    def testIoQuestdbQuestdbV1alpha1QuestDBSpec(self):
        """Test IoQuestdbQuestdbV1alpha1QuestDBSpec"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
