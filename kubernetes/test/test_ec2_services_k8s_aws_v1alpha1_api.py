# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1.25.12
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest

import kubernetes.client
from kubernetes.client.api.ec2_services_k8s_aws_v1alpha1_api import Ec2ServicesK8sAwsV1alpha1Api  # noqa: E501
from kubernetes.client.rest import ApiException


class TestEc2ServicesK8sAwsV1alpha1Api(unittest.TestCase):
    """Ec2ServicesK8sAwsV1alpha1Api unit test stubs"""

    def setUp(self):
        self.api = kubernetes.client.api.ec2_services_k8s_aws_v1alpha1_api.Ec2ServicesK8sAwsV1alpha1Api()  # noqa: E501

    def tearDown(self):
        pass

    def test_create_namespaced_dhcp_options(self):
        """Test case for create_namespaced_dhcp_options

        """
        pass

    def test_create_namespaced_elastic_ip_address(self):
        """Test case for create_namespaced_elastic_ip_address

        """
        pass

    def test_create_namespaced_flow_log(self):
        """Test case for create_namespaced_flow_log

        """
        pass

    def test_create_namespaced_instance(self):
        """Test case for create_namespaced_instance

        """
        pass

    def test_create_namespaced_internet_gateway(self):
        """Test case for create_namespaced_internet_gateway

        """
        pass

    def test_create_namespaced_nat_gateway(self):
        """Test case for create_namespaced_nat_gateway

        """
        pass

    def test_create_namespaced_network_acl(self):
        """Test case for create_namespaced_network_acl

        """
        pass

    def test_create_namespaced_route_table(self):
        """Test case for create_namespaced_route_table

        """
        pass

    def test_create_namespaced_security_group(self):
        """Test case for create_namespaced_security_group

        """
        pass

    def test_create_namespaced_subnet(self):
        """Test case for create_namespaced_subnet

        """
        pass

    def test_create_namespaced_transit_gateway(self):
        """Test case for create_namespaced_transit_gateway

        """
        pass

    def test_create_namespaced_vpc(self):
        """Test case for create_namespaced_vpc

        """
        pass

    def test_create_namespaced_vpc_endpoint(self):
        """Test case for create_namespaced_vpc_endpoint

        """
        pass

    def test_delete_collection_namespaced_dhcp_options(self):
        """Test case for delete_collection_namespaced_dhcp_options

        """
        pass

    def test_delete_collection_namespaced_elastic_ip_address(self):
        """Test case for delete_collection_namespaced_elastic_ip_address

        """
        pass

    def test_delete_collection_namespaced_flow_log(self):
        """Test case for delete_collection_namespaced_flow_log

        """
        pass

    def test_delete_collection_namespaced_instance(self):
        """Test case for delete_collection_namespaced_instance

        """
        pass

    def test_delete_collection_namespaced_internet_gateway(self):
        """Test case for delete_collection_namespaced_internet_gateway

        """
        pass

    def test_delete_collection_namespaced_nat_gateway(self):
        """Test case for delete_collection_namespaced_nat_gateway

        """
        pass

    def test_delete_collection_namespaced_network_acl(self):
        """Test case for delete_collection_namespaced_network_acl

        """
        pass

    def test_delete_collection_namespaced_route_table(self):
        """Test case for delete_collection_namespaced_route_table

        """
        pass

    def test_delete_collection_namespaced_security_group(self):
        """Test case for delete_collection_namespaced_security_group

        """
        pass

    def test_delete_collection_namespaced_subnet(self):
        """Test case for delete_collection_namespaced_subnet

        """
        pass

    def test_delete_collection_namespaced_transit_gateway(self):
        """Test case for delete_collection_namespaced_transit_gateway

        """
        pass

    def test_delete_collection_namespaced_vpc(self):
        """Test case for delete_collection_namespaced_vpc

        """
        pass

    def test_delete_collection_namespaced_vpc_endpoint(self):
        """Test case for delete_collection_namespaced_vpc_endpoint

        """
        pass

    def test_delete_namespaced_dhcp_options(self):
        """Test case for delete_namespaced_dhcp_options

        """
        pass

    def test_delete_namespaced_elastic_ip_address(self):
        """Test case for delete_namespaced_elastic_ip_address

        """
        pass

    def test_delete_namespaced_flow_log(self):
        """Test case for delete_namespaced_flow_log

        """
        pass

    def test_delete_namespaced_instance(self):
        """Test case for delete_namespaced_instance

        """
        pass

    def test_delete_namespaced_internet_gateway(self):
        """Test case for delete_namespaced_internet_gateway

        """
        pass

    def test_delete_namespaced_nat_gateway(self):
        """Test case for delete_namespaced_nat_gateway

        """
        pass

    def test_delete_namespaced_network_acl(self):
        """Test case for delete_namespaced_network_acl

        """
        pass

    def test_delete_namespaced_route_table(self):
        """Test case for delete_namespaced_route_table

        """
        pass

    def test_delete_namespaced_security_group(self):
        """Test case for delete_namespaced_security_group

        """
        pass

    def test_delete_namespaced_subnet(self):
        """Test case for delete_namespaced_subnet

        """
        pass

    def test_delete_namespaced_transit_gateway(self):
        """Test case for delete_namespaced_transit_gateway

        """
        pass

    def test_delete_namespaced_vpc(self):
        """Test case for delete_namespaced_vpc

        """
        pass

    def test_delete_namespaced_vpc_endpoint(self):
        """Test case for delete_namespaced_vpc_endpoint

        """
        pass

    def test_list_dhcp_options_for_all_namespaces(self):
        """Test case for list_dhcp_options_for_all_namespaces

        """
        pass

    def test_list_elastic_ip_address_for_all_namespaces(self):
        """Test case for list_elastic_ip_address_for_all_namespaces

        """
        pass

    def test_list_flow_log_for_all_namespaces(self):
        """Test case for list_flow_log_for_all_namespaces

        """
        pass

    def test_list_instance_for_all_namespaces(self):
        """Test case for list_instance_for_all_namespaces

        """
        pass

    def test_list_internet_gateway_for_all_namespaces(self):
        """Test case for list_internet_gateway_for_all_namespaces

        """
        pass

    def test_list_namespaced_dhcp_options(self):
        """Test case for list_namespaced_dhcp_options

        """
        pass

    def test_list_namespaced_elastic_ip_address(self):
        """Test case for list_namespaced_elastic_ip_address

        """
        pass

    def test_list_namespaced_flow_log(self):
        """Test case for list_namespaced_flow_log

        """
        pass

    def test_list_namespaced_instance(self):
        """Test case for list_namespaced_instance

        """
        pass

    def test_list_namespaced_internet_gateway(self):
        """Test case for list_namespaced_internet_gateway

        """
        pass

    def test_list_namespaced_nat_gateway(self):
        """Test case for list_namespaced_nat_gateway

        """
        pass

    def test_list_namespaced_network_acl(self):
        """Test case for list_namespaced_network_acl

        """
        pass

    def test_list_namespaced_route_table(self):
        """Test case for list_namespaced_route_table

        """
        pass

    def test_list_namespaced_security_group(self):
        """Test case for list_namespaced_security_group

        """
        pass

    def test_list_namespaced_subnet(self):
        """Test case for list_namespaced_subnet

        """
        pass

    def test_list_namespaced_transit_gateway(self):
        """Test case for list_namespaced_transit_gateway

        """
        pass

    def test_list_namespaced_vpc(self):
        """Test case for list_namespaced_vpc

        """
        pass

    def test_list_namespaced_vpc_endpoint(self):
        """Test case for list_namespaced_vpc_endpoint

        """
        pass

    def test_list_nat_gateway_for_all_namespaces(self):
        """Test case for list_nat_gateway_for_all_namespaces

        """
        pass

    def test_list_network_acl_for_all_namespaces(self):
        """Test case for list_network_acl_for_all_namespaces

        """
        pass

    def test_list_route_table_for_all_namespaces(self):
        """Test case for list_route_table_for_all_namespaces

        """
        pass

    def test_list_security_group_for_all_namespaces(self):
        """Test case for list_security_group_for_all_namespaces

        """
        pass

    def test_list_subnet_for_all_namespaces(self):
        """Test case for list_subnet_for_all_namespaces

        """
        pass

    def test_list_transit_gateway_for_all_namespaces(self):
        """Test case for list_transit_gateway_for_all_namespaces

        """
        pass

    def test_list_vpc_endpoint_for_all_namespaces(self):
        """Test case for list_vpc_endpoint_for_all_namespaces

        """
        pass

    def test_list_vpc_for_all_namespaces(self):
        """Test case for list_vpc_for_all_namespaces

        """
        pass

    def test_patch_namespaced_dhcp_options(self):
        """Test case for patch_namespaced_dhcp_options

        """
        pass

    def test_patch_namespaced_dhcp_options_status(self):
        """Test case for patch_namespaced_dhcp_options_status

        """
        pass

    def test_patch_namespaced_elastic_ip_address(self):
        """Test case for patch_namespaced_elastic_ip_address

        """
        pass

    def test_patch_namespaced_elastic_ip_address_status(self):
        """Test case for patch_namespaced_elastic_ip_address_status

        """
        pass

    def test_patch_namespaced_flow_log(self):
        """Test case for patch_namespaced_flow_log

        """
        pass

    def test_patch_namespaced_flow_log_status(self):
        """Test case for patch_namespaced_flow_log_status

        """
        pass

    def test_patch_namespaced_instance(self):
        """Test case for patch_namespaced_instance

        """
        pass

    def test_patch_namespaced_instance_status(self):
        """Test case for patch_namespaced_instance_status

        """
        pass

    def test_patch_namespaced_internet_gateway(self):
        """Test case for patch_namespaced_internet_gateway

        """
        pass

    def test_patch_namespaced_internet_gateway_status(self):
        """Test case for patch_namespaced_internet_gateway_status

        """
        pass

    def test_patch_namespaced_nat_gateway(self):
        """Test case for patch_namespaced_nat_gateway

        """
        pass

    def test_patch_namespaced_nat_gateway_status(self):
        """Test case for patch_namespaced_nat_gateway_status

        """
        pass

    def test_patch_namespaced_network_acl(self):
        """Test case for patch_namespaced_network_acl

        """
        pass

    def test_patch_namespaced_network_acl_status(self):
        """Test case for patch_namespaced_network_acl_status

        """
        pass

    def test_patch_namespaced_route_table(self):
        """Test case for patch_namespaced_route_table

        """
        pass

    def test_patch_namespaced_route_table_status(self):
        """Test case for patch_namespaced_route_table_status

        """
        pass

    def test_patch_namespaced_security_group(self):
        """Test case for patch_namespaced_security_group

        """
        pass

    def test_patch_namespaced_security_group_status(self):
        """Test case for patch_namespaced_security_group_status

        """
        pass

    def test_patch_namespaced_subnet(self):
        """Test case for patch_namespaced_subnet

        """
        pass

    def test_patch_namespaced_subnet_status(self):
        """Test case for patch_namespaced_subnet_status

        """
        pass

    def test_patch_namespaced_transit_gateway(self):
        """Test case for patch_namespaced_transit_gateway

        """
        pass

    def test_patch_namespaced_transit_gateway_status(self):
        """Test case for patch_namespaced_transit_gateway_status

        """
        pass

    def test_patch_namespaced_vpc(self):
        """Test case for patch_namespaced_vpc

        """
        pass

    def test_patch_namespaced_vpc_endpoint(self):
        """Test case for patch_namespaced_vpc_endpoint

        """
        pass

    def test_patch_namespaced_vpc_endpoint_status(self):
        """Test case for patch_namespaced_vpc_endpoint_status

        """
        pass

    def test_patch_namespaced_vpc_status(self):
        """Test case for patch_namespaced_vpc_status

        """
        pass

    def test_read_namespaced_dhcp_options(self):
        """Test case for read_namespaced_dhcp_options

        """
        pass

    def test_read_namespaced_dhcp_options_status(self):
        """Test case for read_namespaced_dhcp_options_status

        """
        pass

    def test_read_namespaced_elastic_ip_address(self):
        """Test case for read_namespaced_elastic_ip_address

        """
        pass

    def test_read_namespaced_elastic_ip_address_status(self):
        """Test case for read_namespaced_elastic_ip_address_status

        """
        pass

    def test_read_namespaced_flow_log(self):
        """Test case for read_namespaced_flow_log

        """
        pass

    def test_read_namespaced_flow_log_status(self):
        """Test case for read_namespaced_flow_log_status

        """
        pass

    def test_read_namespaced_instance(self):
        """Test case for read_namespaced_instance

        """
        pass

    def test_read_namespaced_instance_status(self):
        """Test case for read_namespaced_instance_status

        """
        pass

    def test_read_namespaced_internet_gateway(self):
        """Test case for read_namespaced_internet_gateway

        """
        pass

    def test_read_namespaced_internet_gateway_status(self):
        """Test case for read_namespaced_internet_gateway_status

        """
        pass

    def test_read_namespaced_nat_gateway(self):
        """Test case for read_namespaced_nat_gateway

        """
        pass

    def test_read_namespaced_nat_gateway_status(self):
        """Test case for read_namespaced_nat_gateway_status

        """
        pass

    def test_read_namespaced_network_acl(self):
        """Test case for read_namespaced_network_acl

        """
        pass

    def test_read_namespaced_network_acl_status(self):
        """Test case for read_namespaced_network_acl_status

        """
        pass

    def test_read_namespaced_route_table(self):
        """Test case for read_namespaced_route_table

        """
        pass

    def test_read_namespaced_route_table_status(self):
        """Test case for read_namespaced_route_table_status

        """
        pass

    def test_read_namespaced_security_group(self):
        """Test case for read_namespaced_security_group

        """
        pass

    def test_read_namespaced_security_group_status(self):
        """Test case for read_namespaced_security_group_status

        """
        pass

    def test_read_namespaced_subnet(self):
        """Test case for read_namespaced_subnet

        """
        pass

    def test_read_namespaced_subnet_status(self):
        """Test case for read_namespaced_subnet_status

        """
        pass

    def test_read_namespaced_transit_gateway(self):
        """Test case for read_namespaced_transit_gateway

        """
        pass

    def test_read_namespaced_transit_gateway_status(self):
        """Test case for read_namespaced_transit_gateway_status

        """
        pass

    def test_read_namespaced_vpc(self):
        """Test case for read_namespaced_vpc

        """
        pass

    def test_read_namespaced_vpc_endpoint(self):
        """Test case for read_namespaced_vpc_endpoint

        """
        pass

    def test_read_namespaced_vpc_endpoint_status(self):
        """Test case for read_namespaced_vpc_endpoint_status

        """
        pass

    def test_read_namespaced_vpc_status(self):
        """Test case for read_namespaced_vpc_status

        """
        pass

    def test_replace_namespaced_dhcp_options(self):
        """Test case for replace_namespaced_dhcp_options

        """
        pass

    def test_replace_namespaced_dhcp_options_status(self):
        """Test case for replace_namespaced_dhcp_options_status

        """
        pass

    def test_replace_namespaced_elastic_ip_address(self):
        """Test case for replace_namespaced_elastic_ip_address

        """
        pass

    def test_replace_namespaced_elastic_ip_address_status(self):
        """Test case for replace_namespaced_elastic_ip_address_status

        """
        pass

    def test_replace_namespaced_flow_log(self):
        """Test case for replace_namespaced_flow_log

        """
        pass

    def test_replace_namespaced_flow_log_status(self):
        """Test case for replace_namespaced_flow_log_status

        """
        pass

    def test_replace_namespaced_instance(self):
        """Test case for replace_namespaced_instance

        """
        pass

    def test_replace_namespaced_instance_status(self):
        """Test case for replace_namespaced_instance_status

        """
        pass

    def test_replace_namespaced_internet_gateway(self):
        """Test case for replace_namespaced_internet_gateway

        """
        pass

    def test_replace_namespaced_internet_gateway_status(self):
        """Test case for replace_namespaced_internet_gateway_status

        """
        pass

    def test_replace_namespaced_nat_gateway(self):
        """Test case for replace_namespaced_nat_gateway

        """
        pass

    def test_replace_namespaced_nat_gateway_status(self):
        """Test case for replace_namespaced_nat_gateway_status

        """
        pass

    def test_replace_namespaced_network_acl(self):
        """Test case for replace_namespaced_network_acl

        """
        pass

    def test_replace_namespaced_network_acl_status(self):
        """Test case for replace_namespaced_network_acl_status

        """
        pass

    def test_replace_namespaced_route_table(self):
        """Test case for replace_namespaced_route_table

        """
        pass

    def test_replace_namespaced_route_table_status(self):
        """Test case for replace_namespaced_route_table_status

        """
        pass

    def test_replace_namespaced_security_group(self):
        """Test case for replace_namespaced_security_group

        """
        pass

    def test_replace_namespaced_security_group_status(self):
        """Test case for replace_namespaced_security_group_status

        """
        pass

    def test_replace_namespaced_subnet(self):
        """Test case for replace_namespaced_subnet

        """
        pass

    def test_replace_namespaced_subnet_status(self):
        """Test case for replace_namespaced_subnet_status

        """
        pass

    def test_replace_namespaced_transit_gateway(self):
        """Test case for replace_namespaced_transit_gateway

        """
        pass

    def test_replace_namespaced_transit_gateway_status(self):
        """Test case for replace_namespaced_transit_gateway_status

        """
        pass

    def test_replace_namespaced_vpc(self):
        """Test case for replace_namespaced_vpc

        """
        pass

    def test_replace_namespaced_vpc_endpoint(self):
        """Test case for replace_namespaced_vpc_endpoint

        """
        pass

    def test_replace_namespaced_vpc_endpoint_status(self):
        """Test case for replace_namespaced_vpc_endpoint_status

        """
        pass

    def test_replace_namespaced_vpc_status(self):
        """Test case for replace_namespaced_vpc_status

        """
        pass


if __name__ == '__main__':
    unittest.main()
