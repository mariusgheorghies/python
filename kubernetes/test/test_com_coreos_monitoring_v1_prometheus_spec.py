# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1.25.12
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import kubernetes.client
from kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec import ComCoreosMonitoringV1PrometheusSpec  # noqa: E501
from kubernetes.client.rest import ApiException

class TestComCoreosMonitoringV1PrometheusSpec(unittest.TestCase):
    """ComCoreosMonitoringV1PrometheusSpec unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ComCoreosMonitoringV1PrometheusSpec
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec.ComCoreosMonitoringV1PrometheusSpec()  # noqa: E501
        if include_optional :
            return ComCoreosMonitoringV1PrometheusSpec(
                additional_alert_manager_configs = kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec_additional_alert_manager_configs.com_coreos_monitoring_v1_Prometheus_spec_additionalAlertManagerConfigs(
                    key = '0', 
                    name = '0', 
                    optional = True, ), 
                additional_alert_relabel_configs = kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec_additional_alert_relabel_configs.com_coreos_monitoring_v1_Prometheus_spec_additionalAlertRelabelConfigs(
                    key = '0', 
                    name = '0', 
                    optional = True, ), 
                additional_scrape_configs = kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec_additional_scrape_configs.com_coreos_monitoring_v1_Prometheus_spec_additionalScrapeConfigs(
                    key = '0', 
                    name = '0', 
                    optional = True, ), 
                affinity = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_affinity.com_coreos_monitoring_v1_Alertmanager_spec_affinity(
                    node_affinity = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_affinity_node_affinity.com_coreos_monitoring_v1_Alertmanager_spec_affinity_nodeAffinity(
                        preferred_during_scheduling_ignored_during_execution = [
                            kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_affinity_node_affinity_preferred_during_scheduling_ignored_during_execution.com_coreos_monitoring_v1_Alertmanager_spec_affinity_nodeAffinity_preferredDuringSchedulingIgnoredDuringExecution(
                                preference = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_affinity_node_affinity_preference.com_coreos_monitoring_v1_Alertmanager_spec_affinity_nodeAffinity_preference(
                                    match_expressions = [
                                        kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_affinity_node_affinity_preference_match_expressions.com_coreos_monitoring_v1_Alertmanager_spec_affinity_nodeAffinity_preference_matchExpressions(
                                            key = '0', 
                                            operator = '0', 
                                            values = [
                                                '0'
                                                ], )
                                        ], 
                                    match_fields = [
                                        kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_affinity_node_affinity_preference_match_expressions.com_coreos_monitoring_v1_Alertmanager_spec_affinity_nodeAffinity_preference_matchExpressions(
                                            key = '0', 
                                            operator = '0', )
                                        ], ), 
                                weight = 56, )
                            ], 
                        required_during_scheduling_ignored_during_execution = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_affinity_node_affinity_required_during_scheduling_ignored_during_execution.com_coreos_monitoring_v1_Alertmanager_spec_affinity_nodeAffinity_requiredDuringSchedulingIgnoredDuringExecution(
                            node_selector_terms = [
                                kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_affinity_node_affinity_required_during_scheduling_ignored_during_execution_node_selector_terms.com_coreos_monitoring_v1_Alertmanager_spec_affinity_nodeAffinity_requiredDuringSchedulingIgnoredDuringExecution_nodeSelectorTerms()
                                ], ), ), 
                    pod_affinity = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_affinity_pod_affinity.com_coreos_monitoring_v1_Alertmanager_spec_affinity_podAffinity(), 
                    pod_anti_affinity = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_affinity_pod_anti_affinity.com_coreos_monitoring_v1_Alertmanager_spec_affinity_podAntiAffinity(), ), 
                alerting = kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec_alerting.com_coreos_monitoring_v1_Prometheus_spec_alerting(
                    alertmanagers = [
                        kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec_alerting_alertmanagers.com_coreos_monitoring_v1_Prometheus_spec_alerting_alertmanagers(
                            api_version = '0', 
                            authorization = kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec_alerting_authorization.com_coreos_monitoring_v1_Prometheus_spec_alerting_authorization(
                                credentials = kubernetes.client.models.com_coreos_monitoring_v1_pod_monitor_spec_authorization_credentials.com_coreos_monitoring_v1_PodMonitor_spec_authorization_credentials(
                                    key = '0', 
                                    name = '0', 
                                    optional = True, ), 
                                type = '0', ), 
                            bearer_token_file = '0', 
                            name = '0', 
                            namespace = '0', 
                            path_prefix = '0', 
                            port = kubernetes.client.models.port.port(), 
                            scheme = '0', 
                            timeout = '0', 
                            tls_config = kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec_alerting_tls_config.com_coreos_monitoring_v1_Prometheus_spec_alerting_tlsConfig(
                                ca = kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec_alerting_tls_config_ca.com_coreos_monitoring_v1_Prometheus_spec_alerting_tlsConfig_ca(
                                    config_map = kubernetes.client.models.com_coreos_monitoring_v1_pod_monitor_spec_oauth2_client_id_config_map.com_coreos_monitoring_v1_PodMonitor_spec_oauth2_clientId_configMap(
                                        key = '0', 
                                        name = '0', 
                                        optional = True, ), 
                                    secret = kubernetes.client.models.com_coreos_monitoring_v1_pod_monitor_spec_oauth2_client_id_secret.com_coreos_monitoring_v1_PodMonitor_spec_oauth2_clientId_secret(
                                        key = '0', 
                                        name = '0', 
                                        optional = True, ), ), 
                                ca_file = '0', 
                                cert = kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec_alerting_tls_config_cert.com_coreos_monitoring_v1_Prometheus_spec_alerting_tlsConfig_cert(), 
                                cert_file = '0', 
                                insecure_skip_verify = True, 
                                key_file = '0', 
                                key_secret = kubernetes.client.models.com_coreos_monitoring_v1_pod_monitor_spec_tls_config_key_secret.com_coreos_monitoring_v1_PodMonitor_spec_tlsConfig_keySecret(
                                    key = '0', 
                                    name = '0', 
                                    optional = True, ), 
                                server_name = '0', ), )
                        ], ), 
                allow_overlapping_blocks = True, 
                apiserver_config = kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec_apiserver_config.com_coreos_monitoring_v1_Prometheus_spec_apiserverConfig(
                    authorization = kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec_apiserver_config_authorization.com_coreos_monitoring_v1_Prometheus_spec_apiserverConfig_authorization(
                        credentials = kubernetes.client.models.com_coreos_monitoring_v1_pod_monitor_spec_authorization_credentials.com_coreos_monitoring_v1_PodMonitor_spec_authorization_credentials(
                            key = '0', 
                            name = '0', 
                            optional = True, ), 
                        credentials_file = '0', 
                        type = '0', ), 
                    basic_auth = kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec_apiserver_config_basic_auth.com_coreos_monitoring_v1_Prometheus_spec_apiserverConfig_basicAuth(
                        password = kubernetes.client.models.com_coreos_monitoring_v1_pod_monitor_spec_basic_auth_password.com_coreos_monitoring_v1_PodMonitor_spec_basicAuth_password(
                            key = '0', 
                            name = '0', 
                            optional = True, ), 
                        username = kubernetes.client.models.com_coreos_monitoring_v1_pod_monitor_spec_basic_auth_username.com_coreos_monitoring_v1_PodMonitor_spec_basicAuth_username(
                            key = '0', 
                            name = '0', 
                            optional = True, ), ), 
                    bearer_token = '0', 
                    bearer_token_file = '0', 
                    host = '0', 
                    tls_config = kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec_apiserver_config_tls_config.com_coreos_monitoring_v1_Prometheus_spec_apiserverConfig_tlsConfig(
                        ca = kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec_alerting_tls_config_ca.com_coreos_monitoring_v1_Prometheus_spec_alerting_tlsConfig_ca(
                            config_map = kubernetes.client.models.com_coreos_monitoring_v1_pod_monitor_spec_oauth2_client_id_config_map.com_coreos_monitoring_v1_PodMonitor_spec_oauth2_clientId_configMap(
                                key = '0', 
                                name = '0', 
                                optional = True, ), 
                            secret = kubernetes.client.models.com_coreos_monitoring_v1_pod_monitor_spec_oauth2_client_id_secret.com_coreos_monitoring_v1_PodMonitor_spec_oauth2_clientId_secret(
                                key = '0', 
                                name = '0', 
                                optional = True, ), ), 
                        ca_file = '0', 
                        cert = kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec_alerting_tls_config_cert.com_coreos_monitoring_v1_Prometheus_spec_alerting_tlsConfig_cert(), 
                        cert_file = '0', 
                        insecure_skip_verify = True, 
                        key_file = '0', 
                        key_secret = kubernetes.client.models.com_coreos_monitoring_v1_pod_monitor_spec_tls_config_key_secret.com_coreos_monitoring_v1_PodMonitor_spec_tlsConfig_keySecret(
                            key = '0', 
                            name = '0', 
                            optional = True, ), 
                        server_name = '0', ), ), 
                arbitrary_fs_access_through_s_ms = kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec_arbitrary_fs_access_through_s_ms.com_coreos_monitoring_v1_Prometheus_spec_arbitraryFSAccessThroughSMs(
                    deny = True, ), 
                base_image = '0', 
                config_maps = [
                    '0'
                    ], 
                containers = [
                    kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_containers.com_coreos_monitoring_v1_Alertmanager_spec_containers(
                        args = [
                            '0'
                            ], 
                        command = [
                            '0'
                            ], 
                        env = [
                            kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_env.com_coreos_monitoring_v1_Alertmanager_spec_env(
                                name = '0', 
                                value = '0', 
                                value_from = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_value_from.com_coreos_monitoring_v1_Alertmanager_spec_valueFrom(
                                    config_map_key_ref = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_value_from_config_map_key_ref.com_coreos_monitoring_v1_Alertmanager_spec_valueFrom_configMapKeyRef(
                                        key = '0', 
                                        name = '0', 
                                        optional = True, ), 
                                    field_ref = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_value_from_field_ref.com_coreos_monitoring_v1_Alertmanager_spec_valueFrom_fieldRef(
                                        api_version = '0', 
                                        field_path = '0', ), 
                                    resource_field_ref = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_value_from_resource_field_ref.com_coreos_monitoring_v1_Alertmanager_spec_valueFrom_resourceFieldRef(
                                        container_name = '0', 
                                        divisor = kubernetes.client.models.divisor.divisor(), 
                                        resource = '0', ), 
                                    secret_key_ref = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_value_from_secret_key_ref.com_coreos_monitoring_v1_Alertmanager_spec_valueFrom_secretKeyRef(
                                        key = '0', 
                                        name = '0', 
                                        optional = True, ), ), )
                            ], 
                        env_from = [
                            kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_env_from.com_coreos_monitoring_v1_Alertmanager_spec_envFrom(
                                config_map_ref = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_config_map_ref.com_coreos_monitoring_v1_Alertmanager_spec_configMapRef(
                                    name = '0', 
                                    optional = True, ), 
                                prefix = '0', 
                                secret_ref = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_secret_ref.com_coreos_monitoring_v1_Alertmanager_spec_secretRef(
                                    name = '0', 
                                    optional = True, ), )
                            ], 
                        image = '0', 
                        image_pull_policy = '0', 
                        lifecycle = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_lifecycle.com_coreos_monitoring_v1_Alertmanager_spec_lifecycle(
                            post_start = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_lifecycle_post_start.com_coreos_monitoring_v1_Alertmanager_spec_lifecycle_postStart(
                                exec = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_lifecycle_post_start_exec.com_coreos_monitoring_v1_Alertmanager_spec_lifecycle_postStart_exec(), 
                                http_get = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_lifecycle_post_start_http_get.com_coreos_monitoring_v1_Alertmanager_spec_lifecycle_postStart_httpGet(
                                    host = '0', 
                                    http_headers = [
                                        kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_lifecycle_post_start_http_get_http_headers.com_coreos_monitoring_v1_Alertmanager_spec_lifecycle_postStart_httpGet_httpHeaders(
                                            name = '0', 
                                            value = '0', )
                                        ], 
                                    path = '0', 
                                    port = kubernetes.client.models.port.port(), 
                                    scheme = '0', ), 
                                tcp_socket = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_lifecycle_post_start_tcp_socket.com_coreos_monitoring_v1_Alertmanager_spec_lifecycle_postStart_tcpSocket(
                                    host = '0', 
                                    port = kubernetes.client.models.port.port(), ), ), 
                            pre_stop = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_lifecycle_pre_stop.com_coreos_monitoring_v1_Alertmanager_spec_lifecycle_preStop(), ), 
                        liveness_probe = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_liveness_probe.com_coreos_monitoring_v1_Alertmanager_spec_livenessProbe(
                            failure_threshold = 56, 
                            grpc = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_liveness_probe_grpc.com_coreos_monitoring_v1_Alertmanager_spec_livenessProbe_grpc(
                                port = 56, 
                                service = '0', ), 
                            initial_delay_seconds = 56, 
                            period_seconds = 56, 
                            success_threshold = 56, 
                            termination_grace_period_seconds = 56, 
                            timeout_seconds = 56, ), 
                        name = '0', 
                        ports = [
                            kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_ports.com_coreos_monitoring_v1_Alertmanager_spec_ports(
                                container_port = 56, 
                                host_ip = '0', 
                                host_port = 56, 
                                name = '0', 
                                protocol = '0', )
                            ], 
                        readiness_probe = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_readiness_probe.com_coreos_monitoring_v1_Alertmanager_spec_readinessProbe(
                            failure_threshold = 56, 
                            initial_delay_seconds = 56, 
                            period_seconds = 56, 
                            success_threshold = 56, 
                            termination_grace_period_seconds = 56, 
                            timeout_seconds = 56, ), 
                        resources = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_resources.com_coreos_monitoring_v1_Alertmanager_spec_resources(
                            limits = {
                                'key' : None
                                }, 
                            requests = {
                                'key' : None
                                }, ), 
                        security_context = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_security_context.com_coreos_monitoring_v1_Alertmanager_spec_securityContext(
                            allow_privilege_escalation = True, 
                            capabilities = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_security_context_capabilities.com_coreos_monitoring_v1_Alertmanager_spec_securityContext_capabilities(
                                add = [
                                    '0'
                                    ], 
                                drop = [
                                    '0'
                                    ], ), 
                            privileged = True, 
                            proc_mount = '0', 
                            read_only_root_filesystem = True, 
                            run_as_group = 56, 
                            run_as_non_root = True, 
                            run_as_user = 56, 
                            se_linux_options = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_security_context_se_linux_options.com_coreos_monitoring_v1_Alertmanager_spec_securityContext_seLinuxOptions(
                                level = '0', 
                                role = '0', 
                                type = '0', 
                                user = '0', ), 
                            seccomp_profile = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_security_context_seccomp_profile.com_coreos_monitoring_v1_Alertmanager_spec_securityContext_seccompProfile(
                                localhost_profile = '0', 
                                type = '0', ), 
                            windows_options = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_security_context_windows_options.com_coreos_monitoring_v1_Alertmanager_spec_securityContext_windowsOptions(
                                gmsa_credential_spec = '0', 
                                gmsa_credential_spec_name = '0', 
                                host_process = True, 
                                run_as_user_name = '0', ), ), 
                        startup_probe = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_startup_probe.com_coreos_monitoring_v1_Alertmanager_spec_startupProbe(
                            failure_threshold = 56, 
                            initial_delay_seconds = 56, 
                            period_seconds = 56, 
                            success_threshold = 56, 
                            termination_grace_period_seconds = 56, 
                            timeout_seconds = 56, ), 
                        stdin = True, 
                        stdin_once = True, 
                        termination_message_path = '0', 
                        termination_message_policy = '0', 
                        tty = True, 
                        volume_devices = [
                            kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_volume_devices.com_coreos_monitoring_v1_Alertmanager_spec_volumeDevices(
                                device_path = '0', 
                                name = '0', )
                            ], 
                        volume_mounts = [
                            kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_volume_mounts.com_coreos_monitoring_v1_Alertmanager_spec_volumeMounts(
                                mount_path = '0', 
                                mount_propagation = '0', 
                                name = '0', 
                                read_only = True, 
                                sub_path = '0', 
                                sub_path_expr = '0', )
                            ], 
                        working_dir = '0', )
                    ], 
                disable_compaction = True, 
                enable_admin_api = True, 
                enable_features = [
                    '0'
                    ], 
                enforced_body_size_limit = '0', 
                enforced_label_limit = 56, 
                enforced_label_name_length_limit = 56, 
                enforced_label_value_length_limit = 56, 
                enforced_namespace_label = '0', 
                enforced_sample_limit = 56, 
                enforced_target_limit = 56, 
                evaluation_interval = '0', 
                external_labels = {
                    'key' : '0'
                    }, 
                external_url = '0', 
                ignore_namespace_selectors = True, 
                image = '0', 
                image_pull_secrets = [
                    kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_image_pull_secrets.com_coreos_monitoring_v1_Alertmanager_spec_imagePullSecrets(
                        name = '0', )
                    ], 
                init_containers = [
                    kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_containers.com_coreos_monitoring_v1_Alertmanager_spec_containers(
                        args = [
                            '0'
                            ], 
                        command = [
                            '0'
                            ], 
                        env = [
                            kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_env.com_coreos_monitoring_v1_Alertmanager_spec_env(
                                name = '0', 
                                value = '0', 
                                value_from = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_value_from.com_coreos_monitoring_v1_Alertmanager_spec_valueFrom(
                                    config_map_key_ref = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_value_from_config_map_key_ref.com_coreos_monitoring_v1_Alertmanager_spec_valueFrom_configMapKeyRef(
                                        key = '0', 
                                        name = '0', 
                                        optional = True, ), 
                                    field_ref = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_value_from_field_ref.com_coreos_monitoring_v1_Alertmanager_spec_valueFrom_fieldRef(
                                        api_version = '0', 
                                        field_path = '0', ), 
                                    resource_field_ref = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_value_from_resource_field_ref.com_coreos_monitoring_v1_Alertmanager_spec_valueFrom_resourceFieldRef(
                                        container_name = '0', 
                                        divisor = kubernetes.client.models.divisor.divisor(), 
                                        resource = '0', ), 
                                    secret_key_ref = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_value_from_secret_key_ref.com_coreos_monitoring_v1_Alertmanager_spec_valueFrom_secretKeyRef(
                                        key = '0', 
                                        name = '0', 
                                        optional = True, ), ), )
                            ], 
                        env_from = [
                            kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_env_from.com_coreos_monitoring_v1_Alertmanager_spec_envFrom(
                                config_map_ref = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_config_map_ref.com_coreos_monitoring_v1_Alertmanager_spec_configMapRef(
                                    name = '0', 
                                    optional = True, ), 
                                prefix = '0', 
                                secret_ref = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_secret_ref.com_coreos_monitoring_v1_Alertmanager_spec_secretRef(
                                    name = '0', 
                                    optional = True, ), )
                            ], 
                        image = '0', 
                        image_pull_policy = '0', 
                        lifecycle = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_lifecycle.com_coreos_monitoring_v1_Alertmanager_spec_lifecycle(
                            post_start = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_lifecycle_post_start.com_coreos_monitoring_v1_Alertmanager_spec_lifecycle_postStart(
                                exec = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_lifecycle_post_start_exec.com_coreos_monitoring_v1_Alertmanager_spec_lifecycle_postStart_exec(), 
                                http_get = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_lifecycle_post_start_http_get.com_coreos_monitoring_v1_Alertmanager_spec_lifecycle_postStart_httpGet(
                                    host = '0', 
                                    http_headers = [
                                        kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_lifecycle_post_start_http_get_http_headers.com_coreos_monitoring_v1_Alertmanager_spec_lifecycle_postStart_httpGet_httpHeaders(
                                            name = '0', 
                                            value = '0', )
                                        ], 
                                    path = '0', 
                                    port = kubernetes.client.models.port.port(), 
                                    scheme = '0', ), 
                                tcp_socket = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_lifecycle_post_start_tcp_socket.com_coreos_monitoring_v1_Alertmanager_spec_lifecycle_postStart_tcpSocket(
                                    host = '0', 
                                    port = kubernetes.client.models.port.port(), ), ), 
                            pre_stop = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_lifecycle_pre_stop.com_coreos_monitoring_v1_Alertmanager_spec_lifecycle_preStop(), ), 
                        liveness_probe = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_liveness_probe.com_coreos_monitoring_v1_Alertmanager_spec_livenessProbe(
                            failure_threshold = 56, 
                            grpc = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_liveness_probe_grpc.com_coreos_monitoring_v1_Alertmanager_spec_livenessProbe_grpc(
                                port = 56, 
                                service = '0', ), 
                            initial_delay_seconds = 56, 
                            period_seconds = 56, 
                            success_threshold = 56, 
                            termination_grace_period_seconds = 56, 
                            timeout_seconds = 56, ), 
                        name = '0', 
                        ports = [
                            kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_ports.com_coreos_monitoring_v1_Alertmanager_spec_ports(
                                container_port = 56, 
                                host_ip = '0', 
                                host_port = 56, 
                                name = '0', 
                                protocol = '0', )
                            ], 
                        readiness_probe = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_readiness_probe.com_coreos_monitoring_v1_Alertmanager_spec_readinessProbe(
                            failure_threshold = 56, 
                            initial_delay_seconds = 56, 
                            period_seconds = 56, 
                            success_threshold = 56, 
                            termination_grace_period_seconds = 56, 
                            timeout_seconds = 56, ), 
                        resources = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_resources.com_coreos_monitoring_v1_Alertmanager_spec_resources(
                            limits = {
                                'key' : None
                                }, 
                            requests = {
                                'key' : None
                                }, ), 
                        security_context = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_security_context.com_coreos_monitoring_v1_Alertmanager_spec_securityContext(
                            allow_privilege_escalation = True, 
                            capabilities = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_security_context_capabilities.com_coreos_monitoring_v1_Alertmanager_spec_securityContext_capabilities(
                                add = [
                                    '0'
                                    ], 
                                drop = [
                                    '0'
                                    ], ), 
                            privileged = True, 
                            proc_mount = '0', 
                            read_only_root_filesystem = True, 
                            run_as_group = 56, 
                            run_as_non_root = True, 
                            run_as_user = 56, 
                            se_linux_options = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_security_context_se_linux_options.com_coreos_monitoring_v1_Alertmanager_spec_securityContext_seLinuxOptions(
                                level = '0', 
                                role = '0', 
                                type = '0', 
                                user = '0', ), 
                            seccomp_profile = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_security_context_seccomp_profile.com_coreos_monitoring_v1_Alertmanager_spec_securityContext_seccompProfile(
                                localhost_profile = '0', 
                                type = '0', ), 
                            windows_options = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_security_context_windows_options.com_coreos_monitoring_v1_Alertmanager_spec_securityContext_windowsOptions(
                                gmsa_credential_spec = '0', 
                                gmsa_credential_spec_name = '0', 
                                host_process = True, 
                                run_as_user_name = '0', ), ), 
                        startup_probe = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_startup_probe.com_coreos_monitoring_v1_Alertmanager_spec_startupProbe(
                            failure_threshold = 56, 
                            initial_delay_seconds = 56, 
                            period_seconds = 56, 
                            success_threshold = 56, 
                            termination_grace_period_seconds = 56, 
                            timeout_seconds = 56, ), 
                        stdin = True, 
                        stdin_once = True, 
                        termination_message_path = '0', 
                        termination_message_policy = '0', 
                        tty = True, 
                        volume_devices = [
                            kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_volume_devices.com_coreos_monitoring_v1_Alertmanager_spec_volumeDevices(
                                device_path = '0', 
                                name = '0', )
                            ], 
                        volume_mounts = [
                            kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_volume_mounts.com_coreos_monitoring_v1_Alertmanager_spec_volumeMounts(
                                mount_path = '0', 
                                mount_propagation = '0', 
                                name = '0', 
                                read_only = True, 
                                sub_path = '0', 
                                sub_path_expr = '0', )
                            ], 
                        working_dir = '0', )
                    ], 
                listen_local = True, 
                log_format = '0', 
                log_level = '0', 
                min_ready_seconds = 56, 
                node_selector = {
                    'key' : '0'
                    }, 
                override_honor_labels = True, 
                override_honor_timestamps = True, 
                paused = True, 
                pod_metadata = kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec_pod_metadata.com_coreos_monitoring_v1_Prometheus_spec_podMetadata(
                    annotations = {
                        'key' : '0'
                        }, 
                    labels = {
                        'key' : '0'
                        }, 
                    name = '0', ), 
                pod_monitor_namespace_selector = kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec_pod_monitor_namespace_selector.com_coreos_monitoring_v1_Prometheus_spec_podMonitorNamespaceSelector(
                    match_expressions = [
                        kubernetes.client.models.aws_k8s_networking_v1alpha1_policy_endpoint_spec_pod_selector_match_expressions.aws_k8s_networking_v1alpha1_PolicyEndpoint_spec_podSelector_matchExpressions(
                            key = '0', 
                            operator = '0', 
                            values = [
                                '0'
                                ], )
                        ], 
                    match_labels = {
                        'key' : '0'
                        }, ), 
                pod_monitor_selector = kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec_pod_monitor_selector.com_coreos_monitoring_v1_Prometheus_spec_podMonitorSelector(
                    match_expressions = [
                        kubernetes.client.models.aws_k8s_networking_v1alpha1_policy_endpoint_spec_pod_selector_match_expressions.aws_k8s_networking_v1alpha1_PolicyEndpoint_spec_podSelector_matchExpressions(
                            key = '0', 
                            operator = '0', 
                            values = [
                                '0'
                                ], )
                        ], 
                    match_labels = {
                        'key' : '0'
                        }, ), 
                port_name = '0', 
                priority_class_name = '0', 
                probe_namespace_selector = kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec_probe_namespace_selector.com_coreos_monitoring_v1_Prometheus_spec_probeNamespaceSelector(
                    match_expressions = [
                        kubernetes.client.models.aws_k8s_networking_v1alpha1_policy_endpoint_spec_pod_selector_match_expressions.aws_k8s_networking_v1alpha1_PolicyEndpoint_spec_podSelector_matchExpressions(
                            key = '0', 
                            operator = '0', 
                            values = [
                                '0'
                                ], )
                        ], 
                    match_labels = {
                        'key' : '0'
                        }, ), 
                probe_selector = kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec_probe_selector.com_coreos_monitoring_v1_Prometheus_spec_probeSelector(
                    match_expressions = [
                        kubernetes.client.models.aws_k8s_networking_v1alpha1_policy_endpoint_spec_pod_selector_match_expressions.aws_k8s_networking_v1alpha1_PolicyEndpoint_spec_podSelector_matchExpressions(
                            key = '0', 
                            operator = '0', 
                            values = [
                                '0'
                                ], )
                        ], 
                    match_labels = {
                        'key' : '0'
                        }, ), 
                prometheus_external_label_name = '0', 
                prometheus_rules_excluded_from_enforce = [
                    kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec_prometheus_rules_excluded_from_enforce.com_coreos_monitoring_v1_Prometheus_spec_prometheusRulesExcludedFromEnforce(
                        rule_name = '0', 
                        rule_namespace = '0', )
                    ], 
                query = kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec_query.com_coreos_monitoring_v1_Prometheus_spec_query(
                    lookback_delta = '0', 
                    max_concurrency = 56, 
                    max_samples = 56, 
                    timeout = '0', ), 
                query_log_file = '0', 
                remote_read = [
                    kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec_remote_read.com_coreos_monitoring_v1_Prometheus_spec_remoteRead(
                        authorization = kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec_authorization.com_coreos_monitoring_v1_Prometheus_spec_authorization(
                            credentials = kubernetes.client.models.com_coreos_monitoring_v1_pod_monitor_spec_authorization_credentials.com_coreos_monitoring_v1_PodMonitor_spec_authorization_credentials(
                                key = '0', 
                                name = '0', 
                                optional = True, ), 
                            credentials_file = '0', 
                            type = '0', ), 
                        basic_auth = kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec_basic_auth.com_coreos_monitoring_v1_Prometheus_spec_basicAuth(
                            password = kubernetes.client.models.com_coreos_monitoring_v1_pod_monitor_spec_basic_auth_password.com_coreos_monitoring_v1_PodMonitor_spec_basicAuth_password(
                                key = '0', 
                                name = '0', 
                                optional = True, ), 
                            username = kubernetes.client.models.com_coreos_monitoring_v1_pod_monitor_spec_basic_auth_username.com_coreos_monitoring_v1_PodMonitor_spec_basicAuth_username(
                                key = '0', 
                                name = '0', 
                                optional = True, ), ), 
                        bearer_token = '0', 
                        bearer_token_file = '0', 
                        headers = {
                            'key' : '0'
                            }, 
                        name = '0', 
                        oauth2 = kubernetes.client.models.com_coreos_monitoring_v1_pod_monitor_spec_oauth2.com_coreos_monitoring_v1_PodMonitor_spec_oauth2(
                            kubernetes.client_id = kubernetes.client.models.com_coreos_monitoring_v1_pod_monitor_spec_oauth2_client_id.com_coreos_monitoring_v1_PodMonitor_spec_oauth2_clientId(
                                config_map = kubernetes.client.models.com_coreos_monitoring_v1_pod_monitor_spec_oauth2_client_id_config_map.com_coreos_monitoring_v1_PodMonitor_spec_oauth2_clientId_configMap(
                                    key = '0', 
                                    name = '0', 
                                    optional = True, ), 
                                secret = kubernetes.client.models.com_coreos_monitoring_v1_pod_monitor_spec_oauth2_client_id_secret.com_coreos_monitoring_v1_PodMonitor_spec_oauth2_clientId_secret(
                                    key = '0', 
                                    name = '0', 
                                    optional = True, ), ), 
                            kubernetes.client_secret = kubernetes.client.models.com_coreos_monitoring_v1_pod_monitor_spec_oauth2_client_secret.com_coreos_monitoring_v1_PodMonitor_spec_oauth2_clientSecret(
                                key = '0', 
                                name = '0', 
                                optional = True, ), 
                            endpoint_params = {
                                'key' : '0'
                                }, 
                            scopes = [
                                '0'
                                ], 
                            token_url = '0', ), 
                        proxy_url = '0', 
                        read_recent = True, 
                        remote_timeout = '0', 
                        required_matchers = {
                            'key' : '0'
                            }, 
                        tls_config = kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec_tls_config.com_coreos_monitoring_v1_Prometheus_spec_tlsConfig(
                            ca = kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec_alerting_tls_config_ca.com_coreos_monitoring_v1_Prometheus_spec_alerting_tlsConfig_ca(), 
                            ca_file = '0', 
                            cert = kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec_alerting_tls_config_cert.com_coreos_monitoring_v1_Prometheus_spec_alerting_tlsConfig_cert(), 
                            cert_file = '0', 
                            insecure_skip_verify = True, 
                            key_file = '0', 
                            key_secret = kubernetes.client.models.com_coreos_monitoring_v1_pod_monitor_spec_tls_config_key_secret.com_coreos_monitoring_v1_PodMonitor_spec_tlsConfig_keySecret(
                                key = '0', 
                                name = '0', 
                                optional = True, ), 
                            server_name = '0', ), 
                        url = '0', )
                    ], 
                remote_write = [
                    kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec_remote_write.com_coreos_monitoring_v1_Prometheus_spec_remoteWrite(
                        authorization = kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec_authorization_1.com_coreos_monitoring_v1_Prometheus_spec_authorization_1(
                            credentials = kubernetes.client.models.com_coreos_monitoring_v1_pod_monitor_spec_authorization_credentials.com_coreos_monitoring_v1_PodMonitor_spec_authorization_credentials(
                                key = '0', 
                                name = '0', 
                                optional = True, ), 
                            credentials_file = '0', 
                            type = '0', ), 
                        basic_auth = kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec_basic_auth.com_coreos_monitoring_v1_Prometheus_spec_basicAuth(
                            password = kubernetes.client.models.com_coreos_monitoring_v1_pod_monitor_spec_basic_auth_password.com_coreos_monitoring_v1_PodMonitor_spec_basicAuth_password(
                                key = '0', 
                                name = '0', 
                                optional = True, ), 
                            username = kubernetes.client.models.com_coreos_monitoring_v1_pod_monitor_spec_basic_auth_username.com_coreos_monitoring_v1_PodMonitor_spec_basicAuth_username(
                                key = '0', 
                                name = '0', 
                                optional = True, ), ), 
                        bearer_token = '0', 
                        bearer_token_file = '0', 
                        headers = {
                            'key' : '0'
                            }, 
                        metadata_config = kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec_metadata_config.com_coreos_monitoring_v1_Prometheus_spec_metadataConfig(
                            send = True, 
                            send_interval = '0', ), 
                        name = '0', 
                        oauth2 = kubernetes.client.models.com_coreos_monitoring_v1_pod_monitor_spec_oauth2.com_coreos_monitoring_v1_PodMonitor_spec_oauth2(
                            kubernetes.client_id = kubernetes.client.models.com_coreos_monitoring_v1_pod_monitor_spec_oauth2_client_id.com_coreos_monitoring_v1_PodMonitor_spec_oauth2_clientId(
                                config_map = kubernetes.client.models.com_coreos_monitoring_v1_pod_monitor_spec_oauth2_client_id_config_map.com_coreos_monitoring_v1_PodMonitor_spec_oauth2_clientId_configMap(
                                    key = '0', 
                                    name = '0', 
                                    optional = True, ), 
                                secret = kubernetes.client.models.com_coreos_monitoring_v1_pod_monitor_spec_oauth2_client_id_secret.com_coreos_monitoring_v1_PodMonitor_spec_oauth2_clientId_secret(
                                    key = '0', 
                                    name = '0', 
                                    optional = True, ), ), 
                            kubernetes.client_secret = kubernetes.client.models.com_coreos_monitoring_v1_pod_monitor_spec_oauth2_client_secret.com_coreos_monitoring_v1_PodMonitor_spec_oauth2_clientSecret(
                                key = '0', 
                                name = '0', 
                                optional = True, ), 
                            endpoint_params = {
                                'key' : '0'
                                }, 
                            scopes = [
                                '0'
                                ], 
                            token_url = '0', ), 
                        proxy_url = '0', 
                        queue_config = kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec_queue_config.com_coreos_monitoring_v1_Prometheus_spec_queueConfig(
                            batch_send_deadline = '0', 
                            capacity = 56, 
                            max_backoff = '0', 
                            max_retries = 56, 
                            max_samples_per_send = 56, 
                            max_shards = 56, 
                            min_backoff = '0', 
                            min_shards = 56, 
                            retry_on_rate_limit = True, ), 
                        remote_timeout = '0', 
                        send_exemplars = True, 
                        sigv4 = kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec_sigv4.com_coreos_monitoring_v1_Prometheus_spec_sigv4(
                            access_key = kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec_sigv4_access_key.com_coreos_monitoring_v1_Prometheus_spec_sigv4_accessKey(
                                key = '0', 
                                name = '0', 
                                optional = True, ), 
                            profile = '0', 
                            region = '0', 
                            role_arn = '0', 
                            secret_key = kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec_sigv4_secret_key.com_coreos_monitoring_v1_Prometheus_spec_sigv4_secretKey(
                                key = '0', 
                                name = '0', 
                                optional = True, ), ), 
                        tls_config = kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec_tls_config_1.com_coreos_monitoring_v1_Prometheus_spec_tlsConfig_1(
                            ca = kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec_alerting_tls_config_ca.com_coreos_monitoring_v1_Prometheus_spec_alerting_tlsConfig_ca(), 
                            ca_file = '0', 
                            cert = kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec_alerting_tls_config_cert.com_coreos_monitoring_v1_Prometheus_spec_alerting_tlsConfig_cert(), 
                            cert_file = '0', 
                            insecure_skip_verify = True, 
                            key_file = '0', 
                            key_secret = kubernetes.client.models.com_coreos_monitoring_v1_pod_monitor_spec_tls_config_key_secret.com_coreos_monitoring_v1_PodMonitor_spec_tlsConfig_keySecret(
                                key = '0', 
                                name = '0', 
                                optional = True, ), 
                            server_name = '0', ), 
                        url = '0', 
                        write_relabel_configs = [
                            kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec_write_relabel_configs.com_coreos_monitoring_v1_Prometheus_spec_writeRelabelConfigs(
                                action = 'replace', 
                                modulus = 56, 
                                regex = '0', 
                                replacement = '0', 
                                separator = '0', 
                                source_labels = [
                                    '0'
                                    ], 
                                target_label = '0', )
                            ], )
                    ], 
                replica_external_label_name = '0', 
                replicas = 56, 
                resources = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_resources_1.com_coreos_monitoring_v1_Alertmanager_spec_resources_1(
                    limits = {
                        'key' : None
                        }, 
                    requests = {
                        'key' : None
                        }, ), 
                retention = '0', 
                retention_size = '0', 
                route_prefix = '0', 
                rule_namespace_selector = kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec_rule_namespace_selector.com_coreos_monitoring_v1_Prometheus_spec_ruleNamespaceSelector(
                    match_expressions = [
                        kubernetes.client.models.aws_k8s_networking_v1alpha1_policy_endpoint_spec_pod_selector_match_expressions.aws_k8s_networking_v1alpha1_PolicyEndpoint_spec_podSelector_matchExpressions(
                            key = '0', 
                            operator = '0', 
                            values = [
                                '0'
                                ], )
                        ], 
                    match_labels = {
                        'key' : '0'
                        }, ), 
                rule_selector = kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec_rule_selector.com_coreos_monitoring_v1_Prometheus_spec_ruleSelector(
                    match_expressions = [
                        kubernetes.client.models.aws_k8s_networking_v1alpha1_policy_endpoint_spec_pod_selector_match_expressions.aws_k8s_networking_v1alpha1_PolicyEndpoint_spec_podSelector_matchExpressions(
                            key = '0', 
                            operator = '0', 
                            values = [
                                '0'
                                ], )
                        ], 
                    match_labels = {
                        'key' : '0'
                        }, ), 
                rules = kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec_rules.com_coreos_monitoring_v1_Prometheus_spec_rules(
                    alert = kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec_rules_alert.com_coreos_monitoring_v1_Prometheus_spec_rules_alert(
                        for_grace_period = '0', 
                        for_outage_tolerance = '0', 
                        resend_delay = '0', ), ), 
                scrape_interval = '0', 
                scrape_timeout = '0', 
                secrets = [
                    '0'
                    ], 
                security_context = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_security_context_1.com_coreos_monitoring_v1_Alertmanager_spec_securityContext_1(
                    fs_group = 56, 
                    fs_group_change_policy = '0', 
                    run_as_group = 56, 
                    run_as_non_root = True, 
                    run_as_user = 56, 
                    se_linux_options = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_security_context_1_se_linux_options.com_coreos_monitoring_v1_Alertmanager_spec_securityContext_1_seLinuxOptions(
                        level = '0', 
                        role = '0', 
                        type = '0', 
                        user = '0', ), 
                    seccomp_profile = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_security_context_1_seccomp_profile.com_coreos_monitoring_v1_Alertmanager_spec_securityContext_1_seccompProfile(
                        localhost_profile = '0', 
                        type = '0', ), 
                    supplemental_groups = [
                        56
                        ], 
                    sysctls = [
                        kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_security_context_1_sysctls.com_coreos_monitoring_v1_Alertmanager_spec_securityContext_1_sysctls(
                            name = '0', 
                            value = '0', )
                        ], 
                    windows_options = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_security_context_1_windows_options.com_coreos_monitoring_v1_Alertmanager_spec_securityContext_1_windowsOptions(
                        gmsa_credential_spec = '0', 
                        gmsa_credential_spec_name = '0', 
                        host_process = True, 
                        run_as_user_name = '0', ), ), 
                service_account_name = '0', 
                service_monitor_namespace_selector = kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec_service_monitor_namespace_selector.com_coreos_monitoring_v1_Prometheus_spec_serviceMonitorNamespaceSelector(
                    match_expressions = [
                        kubernetes.client.models.aws_k8s_networking_v1alpha1_policy_endpoint_spec_pod_selector_match_expressions.aws_k8s_networking_v1alpha1_PolicyEndpoint_spec_podSelector_matchExpressions(
                            key = '0', 
                            operator = '0', 
                            values = [
                                '0'
                                ], )
                        ], 
                    match_labels = {
                        'key' : '0'
                        }, ), 
                service_monitor_selector = kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec_service_monitor_selector.com_coreos_monitoring_v1_Prometheus_spec_serviceMonitorSelector(
                    match_expressions = [
                        kubernetes.client.models.aws_k8s_networking_v1alpha1_policy_endpoint_spec_pod_selector_match_expressions.aws_k8s_networking_v1alpha1_PolicyEndpoint_spec_podSelector_matchExpressions(
                            key = '0', 
                            operator = '0', 
                            values = [
                                '0'
                                ], )
                        ], 
                    match_labels = {
                        'key' : '0'
                        }, ), 
                sha = '0', 
                shards = 56, 
                storage = kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec_storage.com_coreos_monitoring_v1_Prometheus_spec_storage(
                    disable_mount_sub_path = True, 
                    empty_dir = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_storage_empty_dir.com_coreos_monitoring_v1_Alertmanager_spec_storage_emptyDir(
                        medium = '0', 
                        size_limit = kubernetes.client.models.size_limit.sizeLimit(), ), 
                    ephemeral = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_storage_ephemeral.com_coreos_monitoring_v1_Alertmanager_spec_storage_ephemeral(
                        volume_claim_template = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_storage_ephemeral_volume_claim_template.com_coreos_monitoring_v1_Alertmanager_spec_storage_ephemeral_volumeClaimTemplate(
                            metadata = kubernetes.client.models.metadata.metadata(), 
                            spec = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_storage_ephemeral_volume_claim_template_spec.com_coreos_monitoring_v1_Alertmanager_spec_storage_ephemeral_volumeClaimTemplate_spec(
                                access_modes = [
                                    '0'
                                    ], 
                                data_source = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_storage_ephemeral_volume_claim_template_spec_data_source.com_coreos_monitoring_v1_Alertmanager_spec_storage_ephemeral_volumeClaimTemplate_spec_dataSource(
                                    api_group = '0', 
                                    kind = '0', 
                                    name = '0', ), 
                                data_source_ref = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_storage_ephemeral_volume_claim_template_spec_data_source_ref.com_coreos_monitoring_v1_Alertmanager_spec_storage_ephemeral_volumeClaimTemplate_spec_dataSourceRef(
                                    api_group = '0', 
                                    kind = '0', 
                                    name = '0', ), 
                                resources = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_storage_ephemeral_volume_claim_template_spec_resources.com_coreos_monitoring_v1_Alertmanager_spec_storage_ephemeral_volumeClaimTemplate_spec_resources(
                                    limits = {
                                        'key' : None
                                        }, 
                                    requests = {
                                        'key' : None
                                        }, ), 
                                selector = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_storage_ephemeral_volume_claim_template_spec_selector.com_coreos_monitoring_v1_Alertmanager_spec_storage_ephemeral_volumeClaimTemplate_spec_selector(
                                    match_expressions = [
                                        kubernetes.client.models.aws_k8s_networking_v1alpha1_policy_endpoint_spec_pod_selector_match_expressions.aws_k8s_networking_v1alpha1_PolicyEndpoint_spec_podSelector_matchExpressions(
                                            key = '0', 
                                            operator = '0', 
                                            values = [
                                                '0'
                                                ], )
                                        ], 
                                    match_labels = {
                                        'key' : '0'
                                        }, ), 
                                storage_class_name = '0', 
                                volume_mode = '0', 
                                volume_name = '0', ), ), ), 
                    volume_claim_template = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_storage_volume_claim_template.com_coreos_monitoring_v1_Alertmanager_spec_storage_volumeClaimTemplate(
                        api_version = '0', 
                        kind = '0', 
                        metadata = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_storage_volume_claim_template_metadata.com_coreos_monitoring_v1_Alertmanager_spec_storage_volumeClaimTemplate_metadata(
                            annotations = {
                                'key' : '0'
                                }, 
                            labels = {
                                'key' : '0'
                                }, 
                            name = '0', ), 
                        status = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_storage_volume_claim_template_status.com_coreos_monitoring_v1_Alertmanager_spec_storage_volumeClaimTemplate_status(
                            allocated_resources = {
                                'key' : None
                                }, 
                            capacity = {
                                'key' : None
                                }, 
                            conditions = [
                                kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_storage_volume_claim_template_status_conditions.com_coreos_monitoring_v1_Alertmanager_spec_storage_volumeClaimTemplate_status_conditions(
                                    last_probe_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    last_transition_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    message = '0', 
                                    reason = '0', 
                                    status = '0', 
                                    type = '0', )
                                ], 
                            phase = '0', 
                            resize_status = '0', ), ), ), 
                tag = '0', 
                thanos = kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec_thanos.com_coreos_monitoring_v1_Prometheus_spec_thanos(
                    base_image = '0', 
                    grpc_server_tls_config = kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec_thanos_grpc_server_tls_config.com_coreos_monitoring_v1_Prometheus_spec_thanos_grpcServerTlsConfig(
                        ca = kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec_alerting_tls_config_ca.com_coreos_monitoring_v1_Prometheus_spec_alerting_tlsConfig_ca(
                            config_map = kubernetes.client.models.com_coreos_monitoring_v1_pod_monitor_spec_oauth2_client_id_config_map.com_coreos_monitoring_v1_PodMonitor_spec_oauth2_clientId_configMap(
                                key = '0', 
                                name = '0', 
                                optional = True, ), 
                            secret = kubernetes.client.models.com_coreos_monitoring_v1_pod_monitor_spec_oauth2_client_id_secret.com_coreos_monitoring_v1_PodMonitor_spec_oauth2_clientId_secret(
                                key = '0', 
                                name = '0', 
                                optional = True, ), ), 
                        ca_file = '0', 
                        cert = kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec_alerting_tls_config_cert.com_coreos_monitoring_v1_Prometheus_spec_alerting_tlsConfig_cert(), 
                        cert_file = '0', 
                        insecure_skip_verify = True, 
                        key_file = '0', 
                        key_secret = kubernetes.client.models.com_coreos_monitoring_v1_pod_monitor_spec_tls_config_key_secret.com_coreos_monitoring_v1_PodMonitor_spec_tlsConfig_keySecret(
                            key = '0', 
                            name = '0', 
                            optional = True, ), 
                        server_name = '0', ), 
                    image = '0', 
                    listen_local = True, 
                    log_format = '0', 
                    log_level = '0', 
                    min_time = '0', 
                    object_storage_config = kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec_thanos_object_storage_config.com_coreos_monitoring_v1_Prometheus_spec_thanos_objectStorageConfig(
                        key = '0', 
                        name = '0', 
                        optional = True, ), 
                    object_storage_config_file = '0', 
                    ready_timeout = '0', 
                    resources = kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec_thanos_resources.com_coreos_monitoring_v1_Prometheus_spec_thanos_resources(
                        limits = {
                            'key' : None
                            }, 
                        requests = {
                            'key' : None
                            }, ), 
                    sha = '0', 
                    tag = '0', 
                    tracing_config = kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec_thanos_tracing_config.com_coreos_monitoring_v1_Prometheus_spec_thanos_tracingConfig(
                        key = '0', 
                        name = '0', 
                        optional = True, ), 
                    tracing_config_file = '0', 
                    version = '0', 
                    volume_mounts = [
                        kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_volume_mounts.com_coreos_monitoring_v1_Alertmanager_spec_volumeMounts(
                            mount_path = '0', 
                            mount_propagation = '0', 
                            name = '0', 
                            read_only = True, 
                            sub_path = '0', 
                            sub_path_expr = '0', )
                        ], ), 
                tolerations = [
                    kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_tolerations.com_coreos_monitoring_v1_Alertmanager_spec_tolerations(
                        effect = '0', 
                        key = '0', 
                        operator = '0', 
                        toleration_seconds = 56, 
                        value = '0', )
                    ], 
                topology_spread_constraints = [
                    kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_topology_spread_constraints.com_coreos_monitoring_v1_Alertmanager_spec_topologySpreadConstraints(
                        label_selector = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_label_selector.com_coreos_monitoring_v1_Alertmanager_spec_labelSelector(
                            match_expressions = [
                                kubernetes.client.models.aws_k8s_networking_v1alpha1_policy_endpoint_spec_pod_selector_match_expressions.aws_k8s_networking_v1alpha1_PolicyEndpoint_spec_podSelector_matchExpressions(
                                    key = '0', 
                                    operator = '0', 
                                    values = [
                                        '0'
                                        ], )
                                ], 
                            match_labels = {
                                'key' : '0'
                                }, ), 
                        max_skew = 56, 
                        topology_key = '0', 
                        when_unsatisfiable = '0', )
                    ], 
                version = '0', 
                volume_mounts = [
                    kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_volume_mounts.com_coreos_monitoring_v1_Alertmanager_spec_volumeMounts(
                        mount_path = '0', 
                        mount_propagation = '0', 
                        name = '0', 
                        read_only = True, 
                        sub_path = '0', 
                        sub_path_expr = '0', )
                    ], 
                volumes = [
                    kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_volumes.com_coreos_monitoring_v1_Alertmanager_spec_volumes(
                        aws_elastic_block_store = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_aws_elastic_block_store.com_coreos_monitoring_v1_Alertmanager_spec_awsElasticBlockStore(
                            fs_type = '0', 
                            partition = 56, 
                            read_only = True, 
                            volume_id = '0', ), 
                        azure_disk = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_azure_disk.com_coreos_monitoring_v1_Alertmanager_spec_azureDisk(
                            caching_mode = '0', 
                            disk_name = '0', 
                            disk_uri = '0', 
                            fs_type = '0', 
                            kind = '0', 
                            read_only = True, ), 
                        azure_file = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_azure_file.com_coreos_monitoring_v1_Alertmanager_spec_azureFile(
                            read_only = True, 
                            secret_name = '0', 
                            share_name = '0', ), 
                        cephfs = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_cephfs.com_coreos_monitoring_v1_Alertmanager_spec_cephfs(
                            monitors = [
                                '0'
                                ], 
                            path = '0', 
                            read_only = True, 
                            secret_file = '0', 
                            secret_ref = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_cephfs_secret_ref.com_coreos_monitoring_v1_Alertmanager_spec_cephfs_secretRef(
                                name = '0', ), 
                            user = '0', ), 
                        cinder = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_cinder.com_coreos_monitoring_v1_Alertmanager_spec_cinder(
                            fs_type = '0', 
                            read_only = True, 
                            volume_id = '0', ), 
                        config_map = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_config_map.com_coreos_monitoring_v1_Alertmanager_spec_configMap(
                            default_mode = 56, 
                            items = [
                                kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_config_map_items.com_coreos_monitoring_v1_Alertmanager_spec_configMap_items(
                                    key = '0', 
                                    mode = 56, 
                                    path = '0', )
                                ], 
                            name = '0', 
                            optional = True, ), 
                        csi = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_csi.com_coreos_monitoring_v1_Alertmanager_spec_csi(
                            driver = '0', 
                            fs_type = '0', 
                            node_publish_secret_ref = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_csi_node_publish_secret_ref.com_coreos_monitoring_v1_Alertmanager_spec_csi_nodePublishSecretRef(
                                name = '0', ), 
                            read_only = True, 
                            volume_attributes = {
                                'key' : '0'
                                }, ), 
                        downward_api = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_downward_api.com_coreos_monitoring_v1_Alertmanager_spec_downwardAPI(
                            default_mode = 56, ), 
                        empty_dir = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_empty_dir.com_coreos_monitoring_v1_Alertmanager_spec_emptyDir(
                            medium = '0', 
                            size_limit = kubernetes.client.models.size_limit.sizeLimit(), ), 
                        ephemeral = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_ephemeral.com_coreos_monitoring_v1_Alertmanager_spec_ephemeral(
                            volume_claim_template = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_storage_ephemeral_volume_claim_template.com_coreos_monitoring_v1_Alertmanager_spec_storage_ephemeral_volumeClaimTemplate(
                                metadata = kubernetes.client.models.metadata.metadata(), 
                                spec = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_storage_ephemeral_volume_claim_template_spec.com_coreos_monitoring_v1_Alertmanager_spec_storage_ephemeral_volumeClaimTemplate_spec(
                                    access_modes = [
                                        '0'
                                        ], 
                                    data_source = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_storage_ephemeral_volume_claim_template_spec_data_source.com_coreos_monitoring_v1_Alertmanager_spec_storage_ephemeral_volumeClaimTemplate_spec_dataSource(
                                        api_group = '0', 
                                        kind = '0', 
                                        name = '0', ), 
                                    data_source_ref = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_storage_ephemeral_volume_claim_template_spec_data_source_ref.com_coreos_monitoring_v1_Alertmanager_spec_storage_ephemeral_volumeClaimTemplate_spec_dataSourceRef(
                                        api_group = '0', 
                                        kind = '0', 
                                        name = '0', ), 
                                    resources = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_storage_ephemeral_volume_claim_template_spec_resources.com_coreos_monitoring_v1_Alertmanager_spec_storage_ephemeral_volumeClaimTemplate_spec_resources(
                                        limits = {
                                            'key' : None
                                            }, 
                                        requests = {
                                            'key' : None
                                            }, ), 
                                    selector = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_storage_ephemeral_volume_claim_template_spec_selector.com_coreos_monitoring_v1_Alertmanager_spec_storage_ephemeral_volumeClaimTemplate_spec_selector(
                                        match_expressions = [
                                            kubernetes.client.models.aws_k8s_networking_v1alpha1_policy_endpoint_spec_pod_selector_match_expressions.aws_k8s_networking_v1alpha1_PolicyEndpoint_spec_podSelector_matchExpressions(
                                                key = '0', 
                                                operator = '0', 
                                                values = [
                                                    '0'
                                                    ], )
                                            ], 
                                        match_labels = {
                                            'key' : '0'
                                            }, ), 
                                    storage_class_name = '0', 
                                    volume_mode = '0', 
                                    volume_name = '0', ), ), ), 
                        fc = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_fc.com_coreos_monitoring_v1_Alertmanager_spec_fc(
                            fs_type = '0', 
                            lun = 56, 
                            read_only = True, 
                            target_ww_ns = [
                                '0'
                                ], 
                            wwids = [
                                '0'
                                ], ), 
                        flex_volume = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_flex_volume.com_coreos_monitoring_v1_Alertmanager_spec_flexVolume(
                            driver = '0', 
                            fs_type = '0', 
                            options = {
                                'key' : '0'
                                }, 
                            read_only = True, ), 
                        flocker = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_flocker.com_coreos_monitoring_v1_Alertmanager_spec_flocker(
                            dataset_name = '0', 
                            dataset_uuid = '0', ), 
                        gce_persistent_disk = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_gce_persistent_disk.com_coreos_monitoring_v1_Alertmanager_spec_gcePersistentDisk(
                            fs_type = '0', 
                            partition = 56, 
                            pd_name = '0', 
                            read_only = True, ), 
                        git_repo = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_git_repo.com_coreos_monitoring_v1_Alertmanager_spec_gitRepo(
                            directory = '0', 
                            repository = '0', 
                            revision = '0', ), 
                        glusterfs = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_glusterfs.com_coreos_monitoring_v1_Alertmanager_spec_glusterfs(
                            endpoints = '0', 
                            path = '0', 
                            read_only = True, ), 
                        host_path = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_host_path.com_coreos_monitoring_v1_Alertmanager_spec_hostPath(
                            path = '0', 
                            type = '0', ), 
                        iscsi = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_iscsi.com_coreos_monitoring_v1_Alertmanager_spec_iscsi(
                            chap_auth_discovery = True, 
                            chap_auth_session = True, 
                            fs_type = '0', 
                            initiator_name = '0', 
                            iqn = '0', 
                            iscsi_interface = '0', 
                            lun = 56, 
                            portals = [
                                '0'
                                ], 
                            read_only = True, 
                            target_portal = '0', ), 
                        name = '0', 
                        nfs = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_nfs.com_coreos_monitoring_v1_Alertmanager_spec_nfs(
                            path = '0', 
                            read_only = True, 
                            server = '0', ), 
                        persistent_volume_claim = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_persistent_volume_claim.com_coreos_monitoring_v1_Alertmanager_spec_persistentVolumeClaim(
                            claim_name = '0', 
                            read_only = True, ), 
                        photon_persistent_disk = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_photon_persistent_disk.com_coreos_monitoring_v1_Alertmanager_spec_photonPersistentDisk(
                            fs_type = '0', 
                            pd_id = '0', ), 
                        portworx_volume = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_portworx_volume.com_coreos_monitoring_v1_Alertmanager_spec_portworxVolume(
                            fs_type = '0', 
                            read_only = True, 
                            volume_id = '0', ), 
                        projected = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_projected.com_coreos_monitoring_v1_Alertmanager_spec_projected(
                            default_mode = 56, 
                            sources = [
                                kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_projected_sources.com_coreos_monitoring_v1_Alertmanager_spec_projected_sources(
                                    secret = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_projected_secret.com_coreos_monitoring_v1_Alertmanager_spec_projected_secret(
                                        name = '0', 
                                        optional = True, ), 
                                    service_account_token = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_projected_service_account_token.com_coreos_monitoring_v1_Alertmanager_spec_projected_serviceAccountToken(
                                        audience = '0', 
                                        expiration_seconds = 56, 
                                        path = '0', ), )
                                ], ), 
                        quobyte = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_quobyte.com_coreos_monitoring_v1_Alertmanager_spec_quobyte(
                            group = '0', 
                            read_only = True, 
                            registry = '0', 
                            tenant = '0', 
                            user = '0', 
                            volume = '0', ), 
                        rbd = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_rbd.com_coreos_monitoring_v1_Alertmanager_spec_rbd(
                            fs_type = '0', 
                            image = '0', 
                            keyring = '0', 
                            monitors = [
                                '0'
                                ], 
                            pool = '0', 
                            read_only = True, 
                            user = '0', ), 
                        scale_io = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_scale_io.com_coreos_monitoring_v1_Alertmanager_spec_scaleIO(
                            fs_type = '0', 
                            gateway = '0', 
                            protection_domain = '0', 
                            read_only = True, 
                            secret_ref = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_scale_io_secret_ref.com_coreos_monitoring_v1_Alertmanager_spec_scaleIO_secretRef(
                                name = '0', ), 
                            ssl_enabled = True, 
                            storage_mode = '0', 
                            storage_pool = '0', 
                            system = '0', 
                            volume_name = '0', ), 
                        secret = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_secret.com_coreos_monitoring_v1_Alertmanager_spec_secret(
                            default_mode = 56, 
                            optional = True, 
                            secret_name = '0', ), 
                        storageos = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_storageos.com_coreos_monitoring_v1_Alertmanager_spec_storageos(
                            fs_type = '0', 
                            read_only = True, 
                            volume_name = '0', 
                            volume_namespace = '0', ), 
                        vsphere_volume = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_vsphere_volume.com_coreos_monitoring_v1_Alertmanager_spec_vsphereVolume(
                            fs_type = '0', 
                            storage_policy_id = '0', 
                            storage_policy_name = '0', 
                            volume_path = '0', ), )
                    ], 
                wal_compression = True, 
                web = kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec_web.com_coreos_monitoring_v1_Prometheus_spec_web(
                    page_title = '0', 
                    tls_config = kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec_web_tls_config.com_coreos_monitoring_v1_Prometheus_spec_web_tlsConfig(
                        cert = kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec_web_tls_config_cert.com_coreos_monitoring_v1_Prometheus_spec_web_tlsConfig_cert(
                            config_map = kubernetes.client.models.com_coreos_monitoring_v1_pod_monitor_spec_oauth2_client_id_config_map.com_coreos_monitoring_v1_PodMonitor_spec_oauth2_clientId_configMap(
                                key = '0', 
                                name = '0', 
                                optional = True, ), 
                            secret = kubernetes.client.models.com_coreos_monitoring_v1_pod_monitor_spec_oauth2_client_id_secret.com_coreos_monitoring_v1_PodMonitor_spec_oauth2_clientId_secret(
                                key = '0', 
                                name = '0', 
                                optional = True, ), ), 
                        cipher_suites = [
                            '0'
                            ], 
                        kubernetes.client_auth_type = '0', 
                        kubernetes.client_ca = kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec_web_tls_config_client_ca.com_coreos_monitoring_v1_Prometheus_spec_web_tlsConfig_client_ca(), 
                        curve_preferences = [
                            '0'
                            ], 
                        key_secret = kubernetes.client.models.com_coreos_monitoring_v1_prometheus_spec_web_tls_config_key_secret.com_coreos_monitoring_v1_Prometheus_spec_web_tlsConfig_keySecret(
                            key = '0', 
                            name = '0', 
                            optional = True, ), 
                        max_version = '0', 
                        min_version = '0', 
                        prefer_server_cipher_suites = True, ), )
            )
        else :
            return ComCoreosMonitoringV1PrometheusSpec(
        )

    def testComCoreosMonitoringV1PrometheusSpec(self):
        """Test ComCoreosMonitoringV1PrometheusSpec"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
