# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1.25.12
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest

import kubernetes.client
from kubernetes.client.api.crd_projectcalico_org_v1_api import CrdProjectcalicoOrgV1Api  # noqa: E501
from kubernetes.client.rest import ApiException


class TestCrdProjectcalicoOrgV1Api(unittest.TestCase):
    """CrdProjectcalicoOrgV1Api unit test stubs"""

    def setUp(self):
        self.api = kubernetes.client.api.crd_projectcalico_org_v1_api.CrdProjectcalicoOrgV1Api()  # noqa: E501

    def tearDown(self):
        pass

    def test_create_bgp_configuration(self):
        """Test case for create_bgp_configuration

        """
        pass

    def test_create_bgp_peer(self):
        """Test case for create_bgp_peer

        """
        pass

    def test_create_block_affinity(self):
        """Test case for create_block_affinity

        """
        pass

    def test_create_cluster_information(self):
        """Test case for create_cluster_information

        """
        pass

    def test_create_felix_configuration(self):
        """Test case for create_felix_configuration

        """
        pass

    def test_create_global_network_policy(self):
        """Test case for create_global_network_policy

        """
        pass

    def test_create_global_network_set(self):
        """Test case for create_global_network_set

        """
        pass

    def test_create_host_endpoint(self):
        """Test case for create_host_endpoint

        """
        pass

    def test_create_ip_pool(self):
        """Test case for create_ip_pool

        """
        pass

    def test_create_ipam_block(self):
        """Test case for create_ipam_block

        """
        pass

    def test_create_ipam_config(self):
        """Test case for create_ipam_config

        """
        pass

    def test_create_ipam_handle(self):
        """Test case for create_ipam_handle

        """
        pass

    def test_create_kube_controllers_configuration(self):
        """Test case for create_kube_controllers_configuration

        """
        pass

    def test_create_namespaced_network_policy(self):
        """Test case for create_namespaced_network_policy

        """
        pass

    def test_create_namespaced_network_set(self):
        """Test case for create_namespaced_network_set

        """
        pass

    def test_delete_bgp_configuration(self):
        """Test case for delete_bgp_configuration

        """
        pass

    def test_delete_bgp_peer(self):
        """Test case for delete_bgp_peer

        """
        pass

    def test_delete_block_affinity(self):
        """Test case for delete_block_affinity

        """
        pass

    def test_delete_cluster_information(self):
        """Test case for delete_cluster_information

        """
        pass

    def test_delete_collection_bgp_configuration(self):
        """Test case for delete_collection_bgp_configuration

        """
        pass

    def test_delete_collection_bgp_peer(self):
        """Test case for delete_collection_bgp_peer

        """
        pass

    def test_delete_collection_block_affinity(self):
        """Test case for delete_collection_block_affinity

        """
        pass

    def test_delete_collection_cluster_information(self):
        """Test case for delete_collection_cluster_information

        """
        pass

    def test_delete_collection_felix_configuration(self):
        """Test case for delete_collection_felix_configuration

        """
        pass

    def test_delete_collection_global_network_policy(self):
        """Test case for delete_collection_global_network_policy

        """
        pass

    def test_delete_collection_global_network_set(self):
        """Test case for delete_collection_global_network_set

        """
        pass

    def test_delete_collection_host_endpoint(self):
        """Test case for delete_collection_host_endpoint

        """
        pass

    def test_delete_collection_ip_pool(self):
        """Test case for delete_collection_ip_pool

        """
        pass

    def test_delete_collection_ipam_block(self):
        """Test case for delete_collection_ipam_block

        """
        pass

    def test_delete_collection_ipam_config(self):
        """Test case for delete_collection_ipam_config

        """
        pass

    def test_delete_collection_ipam_handle(self):
        """Test case for delete_collection_ipam_handle

        """
        pass

    def test_delete_collection_kube_controllers_configuration(self):
        """Test case for delete_collection_kube_controllers_configuration

        """
        pass

    def test_delete_collection_namespaced_network_policy(self):
        """Test case for delete_collection_namespaced_network_policy

        """
        pass

    def test_delete_collection_namespaced_network_set(self):
        """Test case for delete_collection_namespaced_network_set

        """
        pass

    def test_delete_felix_configuration(self):
        """Test case for delete_felix_configuration

        """
        pass

    def test_delete_global_network_policy(self):
        """Test case for delete_global_network_policy

        """
        pass

    def test_delete_global_network_set(self):
        """Test case for delete_global_network_set

        """
        pass

    def test_delete_host_endpoint(self):
        """Test case for delete_host_endpoint

        """
        pass

    def test_delete_ip_pool(self):
        """Test case for delete_ip_pool

        """
        pass

    def test_delete_ipam_block(self):
        """Test case for delete_ipam_block

        """
        pass

    def test_delete_ipam_config(self):
        """Test case for delete_ipam_config

        """
        pass

    def test_delete_ipam_handle(self):
        """Test case for delete_ipam_handle

        """
        pass

    def test_delete_kube_controllers_configuration(self):
        """Test case for delete_kube_controllers_configuration

        """
        pass

    def test_delete_namespaced_network_policy(self):
        """Test case for delete_namespaced_network_policy

        """
        pass

    def test_delete_namespaced_network_set(self):
        """Test case for delete_namespaced_network_set

        """
        pass

    def test_list_bgp_configuration(self):
        """Test case for list_bgp_configuration

        """
        pass

    def test_list_bgp_peer(self):
        """Test case for list_bgp_peer

        """
        pass

    def test_list_block_affinity(self):
        """Test case for list_block_affinity

        """
        pass

    def test_list_cluster_information(self):
        """Test case for list_cluster_information

        """
        pass

    def test_list_felix_configuration(self):
        """Test case for list_felix_configuration

        """
        pass

    def test_list_global_network_policy(self):
        """Test case for list_global_network_policy

        """
        pass

    def test_list_global_network_set(self):
        """Test case for list_global_network_set

        """
        pass

    def test_list_host_endpoint(self):
        """Test case for list_host_endpoint

        """
        pass

    def test_list_ip_pool(self):
        """Test case for list_ip_pool

        """
        pass

    def test_list_ipam_block(self):
        """Test case for list_ipam_block

        """
        pass

    def test_list_ipam_config(self):
        """Test case for list_ipam_config

        """
        pass

    def test_list_ipam_handle(self):
        """Test case for list_ipam_handle

        """
        pass

    def test_list_kube_controllers_configuration(self):
        """Test case for list_kube_controllers_configuration

        """
        pass

    def test_list_namespaced_network_policy(self):
        """Test case for list_namespaced_network_policy

        """
        pass

    def test_list_namespaced_network_set(self):
        """Test case for list_namespaced_network_set

        """
        pass

    def test_list_network_policy_for_all_namespaces(self):
        """Test case for list_network_policy_for_all_namespaces

        """
        pass

    def test_list_network_set_for_all_namespaces(self):
        """Test case for list_network_set_for_all_namespaces

        """
        pass

    def test_patch_bgp_configuration(self):
        """Test case for patch_bgp_configuration

        """
        pass

    def test_patch_bgp_peer(self):
        """Test case for patch_bgp_peer

        """
        pass

    def test_patch_block_affinity(self):
        """Test case for patch_block_affinity

        """
        pass

    def test_patch_cluster_information(self):
        """Test case for patch_cluster_information

        """
        pass

    def test_patch_felix_configuration(self):
        """Test case for patch_felix_configuration

        """
        pass

    def test_patch_global_network_policy(self):
        """Test case for patch_global_network_policy

        """
        pass

    def test_patch_global_network_set(self):
        """Test case for patch_global_network_set

        """
        pass

    def test_patch_host_endpoint(self):
        """Test case for patch_host_endpoint

        """
        pass

    def test_patch_ip_pool(self):
        """Test case for patch_ip_pool

        """
        pass

    def test_patch_ipam_block(self):
        """Test case for patch_ipam_block

        """
        pass

    def test_patch_ipam_config(self):
        """Test case for patch_ipam_config

        """
        pass

    def test_patch_ipam_handle(self):
        """Test case for patch_ipam_handle

        """
        pass

    def test_patch_kube_controllers_configuration(self):
        """Test case for patch_kube_controllers_configuration

        """
        pass

    def test_patch_namespaced_network_policy(self):
        """Test case for patch_namespaced_network_policy

        """
        pass

    def test_patch_namespaced_network_set(self):
        """Test case for patch_namespaced_network_set

        """
        pass

    def test_read_bgp_configuration(self):
        """Test case for read_bgp_configuration

        """
        pass

    def test_read_bgp_peer(self):
        """Test case for read_bgp_peer

        """
        pass

    def test_read_block_affinity(self):
        """Test case for read_block_affinity

        """
        pass

    def test_read_cluster_information(self):
        """Test case for read_cluster_information

        """
        pass

    def test_read_felix_configuration(self):
        """Test case for read_felix_configuration

        """
        pass

    def test_read_global_network_policy(self):
        """Test case for read_global_network_policy

        """
        pass

    def test_read_global_network_set(self):
        """Test case for read_global_network_set

        """
        pass

    def test_read_host_endpoint(self):
        """Test case for read_host_endpoint

        """
        pass

    def test_read_ip_pool(self):
        """Test case for read_ip_pool

        """
        pass

    def test_read_ipam_block(self):
        """Test case for read_ipam_block

        """
        pass

    def test_read_ipam_config(self):
        """Test case for read_ipam_config

        """
        pass

    def test_read_ipam_handle(self):
        """Test case for read_ipam_handle

        """
        pass

    def test_read_kube_controllers_configuration(self):
        """Test case for read_kube_controllers_configuration

        """
        pass

    def test_read_namespaced_network_policy(self):
        """Test case for read_namespaced_network_policy

        """
        pass

    def test_read_namespaced_network_set(self):
        """Test case for read_namespaced_network_set

        """
        pass

    def test_replace_bgp_configuration(self):
        """Test case for replace_bgp_configuration

        """
        pass

    def test_replace_bgp_peer(self):
        """Test case for replace_bgp_peer

        """
        pass

    def test_replace_block_affinity(self):
        """Test case for replace_block_affinity

        """
        pass

    def test_replace_cluster_information(self):
        """Test case for replace_cluster_information

        """
        pass

    def test_replace_felix_configuration(self):
        """Test case for replace_felix_configuration

        """
        pass

    def test_replace_global_network_policy(self):
        """Test case for replace_global_network_policy

        """
        pass

    def test_replace_global_network_set(self):
        """Test case for replace_global_network_set

        """
        pass

    def test_replace_host_endpoint(self):
        """Test case for replace_host_endpoint

        """
        pass

    def test_replace_ip_pool(self):
        """Test case for replace_ip_pool

        """
        pass

    def test_replace_ipam_block(self):
        """Test case for replace_ipam_block

        """
        pass

    def test_replace_ipam_config(self):
        """Test case for replace_ipam_config

        """
        pass

    def test_replace_ipam_handle(self):
        """Test case for replace_ipam_handle

        """
        pass

    def test_replace_kube_controllers_configuration(self):
        """Test case for replace_kube_controllers_configuration

        """
        pass

    def test_replace_namespaced_network_policy(self):
        """Test case for replace_namespaced_network_policy

        """
        pass

    def test_replace_namespaced_network_set(self):
        """Test case for replace_namespaced_network_set

        """
        pass


if __name__ == '__main__':
    unittest.main()
