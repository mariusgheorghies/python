# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1.25.12
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import kubernetes.client
from kubernetes.client.models.io_argoproj_v1alpha1_application_status import IoArgoprojV1alpha1ApplicationStatus  # noqa: E501
from kubernetes.client.rest import ApiException

class TestIoArgoprojV1alpha1ApplicationStatus(unittest.TestCase):
    """IoArgoprojV1alpha1ApplicationStatus unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test IoArgoprojV1alpha1ApplicationStatus
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = kubernetes.client.models.io_argoproj_v1alpha1_application_status.IoArgoprojV1alpha1ApplicationStatus()  # noqa: E501
        if include_optional :
            return IoArgoprojV1alpha1ApplicationStatus(
                conditions = [
                    kubernetes.client.models.io_argoproj_v1alpha1_application_status_conditions.io_argoproj_v1alpha1_Application_status_conditions(
                        last_transition_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        message = '0', 
                        type = '0', )
                    ], 
                health = kubernetes.client.models.io_argoproj_v1alpha1_application_status_health.io_argoproj_v1alpha1_Application_status_health(
                    message = '0', 
                    status = '0', ), 
                history = [
                    kubernetes.client.models.io_argoproj_v1alpha1_application_status_history.io_argoproj_v1alpha1_Application_status_history(
                        deploy_started_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        deployed_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        id = 56, 
                        revision = '0', 
                        revisions = [
                            '0'
                            ], 
                        source = kubernetes.client.models.io_argoproj_v1alpha1_application_status_source.io_argoproj_v1alpha1_Application_status_source(
                            chart = '0', 
                            directory = kubernetes.client.models.io_argoproj_v1alpha1_application_operation_sync_source_directory.io_argoproj_v1alpha1_Application_operation_sync_source_directory(
                                exclude = '0', 
                                include = '0', 
                                jsonnet = kubernetes.client.models.io_argoproj_v1alpha1_application_operation_sync_source_directory_jsonnet.io_argoproj_v1alpha1_Application_operation_sync_source_directory_jsonnet(
                                    ext_vars = [
                                        kubernetes.client.models.io_argoproj_v1alpha1_application_operation_sync_source_directory_jsonnet_ext_vars.io_argoproj_v1alpha1_Application_operation_sync_source_directory_jsonnet_extVars(
                                            code = True, 
                                            name = '0', 
                                            value = '0', )
                                        ], 
                                    libs = [
                                        '0'
                                        ], 
                                    tlas = [
                                        kubernetes.client.models.io_argoproj_v1alpha1_application_operation_sync_source_directory_jsonnet_ext_vars.io_argoproj_v1alpha1_Application_operation_sync_source_directory_jsonnet_extVars(
                                            code = True, 
                                            name = '0', 
                                            value = '0', )
                                        ], ), 
                                recurse = True, ), 
                            helm = kubernetes.client.models.io_argoproj_v1alpha1_application_operation_sync_source_helm.io_argoproj_v1alpha1_Application_operation_sync_source_helm(
                                file_parameters = [
                                    kubernetes.client.models.io_argoproj_v1alpha1_application_operation_sync_source_helm_file_parameters.io_argoproj_v1alpha1_Application_operation_sync_source_helm_fileParameters(
                                        name = '0', 
                                        path = '0', )
                                    ], 
                                ignore_missing_value_files = True, 
                                parameters = [
                                    kubernetes.client.models.io_argoproj_v1alpha1_application_operation_sync_source_helm_parameters.io_argoproj_v1alpha1_Application_operation_sync_source_helm_parameters(
                                        force_string = True, 
                                        name = '0', 
                                        value = '0', )
                                    ], 
                                pass_credentials = True, 
                                release_name = '0', 
                                skip_crds = True, 
                                value_files = [
                                    '0'
                                    ], 
                                values = '0', 
                                version = '0', ), 
                            kustomize = kubernetes.client.models.io_argoproj_v1alpha1_application_operation_sync_source_kustomize.io_argoproj_v1alpha1_Application_operation_sync_source_kustomize(
                                common_annotations = {
                                    'key' : '0'
                                    }, 
                                common_annotations_envsubst = True, 
                                common_labels = {
                                    'key' : '0'
                                    }, 
                                force_common_annotations = True, 
                                force_common_labels = True, 
                                images = [
                                    '0'
                                    ], 
                                name_prefix = '0', 
                                name_suffix = '0', 
                                namespace = '0', 
                                replicas = [
                                    kubernetes.client.models.io_argoproj_v1alpha1_application_operation_sync_source_kustomize_replicas.io_argoproj_v1alpha1_Application_operation_sync_source_kustomize_replicas(
                                        count = kubernetes.client.models.count.count(), 
                                        name = '0', )
                                    ], 
                                version = '0', ), 
                            path = '0', 
                            plugin = kubernetes.client.models.io_argoproj_v1alpha1_application_operation_sync_source_plugin.io_argoproj_v1alpha1_Application_operation_sync_source_plugin(
                                env = [
                                    kubernetes.client.models.io_argoproj_v1alpha1_application_operation_sync_source_plugin_env.io_argoproj_v1alpha1_Application_operation_sync_source_plugin_env(
                                        name = '0', 
                                        value = '0', )
                                    ], 
                                name = '0', ), 
                            ref = '0', 
                            repo_url = '0', 
                            target_revision = '0', ), 
                        sources = [
                            kubernetes.client.models.io_argoproj_v1alpha1_application_operation_sync_sources.io_argoproj_v1alpha1_Application_operation_sync_sources(
                                chart = '0', 
                                path = '0', 
                                ref = '0', 
                                repo_url = '0', 
                                target_revision = '0', )
                            ], )
                    ], 
                observed_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                operation_state = kubernetes.client.models.io_argoproj_v1alpha1_application_status_operation_state.io_argoproj_v1alpha1_Application_status_operationState(
                    finished_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    message = '0', 
                    operation = kubernetes.client.models.io_argoproj_v1alpha1_application_status_operation_state_operation.io_argoproj_v1alpha1_Application_status_operationState_operation(
                        info = [
                            kubernetes.client.models.io_argoproj_v1alpha1_application_operation_info.io_argoproj_v1alpha1_Application_operation_info(
                                name = '0', 
                                value = '0', )
                            ], 
                        initiated_by = kubernetes.client.models.io_argoproj_v1alpha1_application_operation_initiated_by.io_argoproj_v1alpha1_Application_operation_initiatedBy(
                            automated = True, 
                            username = '0', ), 
                        retry = kubernetes.client.models.io_argoproj_v1alpha1_application_operation_retry.io_argoproj_v1alpha1_Application_operation_retry(
                            backoff = kubernetes.client.models.io_argoproj_v1alpha1_application_operation_retry_backoff.io_argoproj_v1alpha1_Application_operation_retry_backoff(
                                duration = '0', 
                                factor = 56, 
                                max_duration = '0', ), 
                            limit = 56, ), 
                        sync = kubernetes.client.models.io_argoproj_v1alpha1_application_operation_sync.io_argoproj_v1alpha1_Application_operation_sync(
                            dry_run = True, 
                            manifests = [
                                '0'
                                ], 
                            prune = True, 
                            resources = [
                                kubernetes.client.models.io_argoproj_v1alpha1_application_operation_sync_resources.io_argoproj_v1alpha1_Application_operation_sync_resources(
                                    group = '0', 
                                    kind = '0', 
                                    name = '0', 
                                    namespace = '0', )
                                ], 
                            revision = '0', 
                            revisions = [
                                '0'
                                ], 
                            source = kubernetes.client.models.io_argoproj_v1alpha1_application_operation_sync_source.io_argoproj_v1alpha1_Application_operation_sync_source(
                                chart = '0', 
                                directory = kubernetes.client.models.io_argoproj_v1alpha1_application_operation_sync_source_directory.io_argoproj_v1alpha1_Application_operation_sync_source_directory(
                                    exclude = '0', 
                                    include = '0', 
                                    jsonnet = kubernetes.client.models.io_argoproj_v1alpha1_application_operation_sync_source_directory_jsonnet.io_argoproj_v1alpha1_Application_operation_sync_source_directory_jsonnet(
                                        ext_vars = [
                                            kubernetes.client.models.io_argoproj_v1alpha1_application_operation_sync_source_directory_jsonnet_ext_vars.io_argoproj_v1alpha1_Application_operation_sync_source_directory_jsonnet_extVars(
                                                code = True, 
                                                name = '0', 
                                                value = '0', )
                                            ], 
                                        libs = [
                                            '0'
                                            ], 
                                        tlas = [
                                            kubernetes.client.models.io_argoproj_v1alpha1_application_operation_sync_source_directory_jsonnet_ext_vars.io_argoproj_v1alpha1_Application_operation_sync_source_directory_jsonnet_extVars(
                                                code = True, 
                                                name = '0', 
                                                value = '0', )
                                            ], ), 
                                    recurse = True, ), 
                                helm = kubernetes.client.models.io_argoproj_v1alpha1_application_operation_sync_source_helm.io_argoproj_v1alpha1_Application_operation_sync_source_helm(
                                    file_parameters = [
                                        kubernetes.client.models.io_argoproj_v1alpha1_application_operation_sync_source_helm_file_parameters.io_argoproj_v1alpha1_Application_operation_sync_source_helm_fileParameters(
                                            name = '0', 
                                            path = '0', )
                                        ], 
                                    ignore_missing_value_files = True, 
                                    parameters = [
                                        kubernetes.client.models.io_argoproj_v1alpha1_application_operation_sync_source_helm_parameters.io_argoproj_v1alpha1_Application_operation_sync_source_helm_parameters(
                                            force_string = True, 
                                            name = '0', 
                                            value = '0', )
                                        ], 
                                    pass_credentials = True, 
                                    release_name = '0', 
                                    skip_crds = True, 
                                    value_files = [
                                        '0'
                                        ], 
                                    values = '0', 
                                    version = '0', ), 
                                kustomize = kubernetes.client.models.io_argoproj_v1alpha1_application_operation_sync_source_kustomize.io_argoproj_v1alpha1_Application_operation_sync_source_kustomize(
                                    common_annotations = {
                                        'key' : '0'
                                        }, 
                                    common_annotations_envsubst = True, 
                                    common_labels = {
                                        'key' : '0'
                                        }, 
                                    force_common_annotations = True, 
                                    force_common_labels = True, 
                                    images = [
                                        '0'
                                        ], 
                                    name_prefix = '0', 
                                    name_suffix = '0', 
                                    namespace = '0', 
                                    replicas = [
                                        kubernetes.client.models.io_argoproj_v1alpha1_application_operation_sync_source_kustomize_replicas.io_argoproj_v1alpha1_Application_operation_sync_source_kustomize_replicas(
                                            count = kubernetes.client.models.count.count(), 
                                            name = '0', )
                                        ], 
                                    version = '0', ), 
                                path = '0', 
                                plugin = kubernetes.client.models.io_argoproj_v1alpha1_application_operation_sync_source_plugin.io_argoproj_v1alpha1_Application_operation_sync_source_plugin(
                                    env = [
                                        kubernetes.client.models.io_argoproj_v1alpha1_application_operation_sync_source_plugin_env.io_argoproj_v1alpha1_Application_operation_sync_source_plugin_env(
                                            name = '0', 
                                            value = '0', )
                                        ], 
                                    name = '0', ), 
                                ref = '0', 
                                repo_url = '0', 
                                target_revision = '0', ), 
                            sources = [
                                kubernetes.client.models.io_argoproj_v1alpha1_application_operation_sync_sources.io_argoproj_v1alpha1_Application_operation_sync_sources(
                                    chart = '0', 
                                    path = '0', 
                                    ref = '0', 
                                    repo_url = '0', 
                                    target_revision = '0', )
                                ], 
                            sync_options = [
                                '0'
                                ], 
                            sync_strategy = kubernetes.client.models.io_argoproj_v1alpha1_application_operation_sync_sync_strategy.io_argoproj_v1alpha1_Application_operation_sync_syncStrategy(
                                apply = kubernetes.client.models.io_argoproj_v1alpha1_application_operation_sync_sync_strategy_apply.io_argoproj_v1alpha1_Application_operation_sync_syncStrategy_apply(
                                    force = True, ), 
                                hook = kubernetes.client.models.io_argoproj_v1alpha1_application_operation_sync_sync_strategy_hook.io_argoproj_v1alpha1_Application_operation_sync_syncStrategy_hook(
                                    force = True, ), ), ), ), 
                    phase = '0', 
                    retry_count = 56, 
                    started_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    sync_result = kubernetes.client.models.io_argoproj_v1alpha1_application_status_operation_state_sync_result.io_argoproj_v1alpha1_Application_status_operationState_syncResult(
                        revision = '0', ), ), 
                reconciled_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                resource_health_source = '0', 
                resources = [
                    kubernetes.client.models.io_argoproj_v1alpha1_application_status_resources.io_argoproj_v1alpha1_Application_status_resources(
                        group = '0', 
                        health = kubernetes.client.models.io_argoproj_v1alpha1_application_status_health_1.io_argoproj_v1alpha1_Application_status_health_1(
                            message = '0', 
                            status = '0', ), 
                        hook = True, 
                        kind = '0', 
                        name = '0', 
                        namespace = '0', 
                        requires_pruning = True, 
                        status = '0', 
                        sync_wave = 56, 
                        version = '0', )
                    ], 
                source_type = '0', 
                source_types = [
                    '0'
                    ], 
                summary = kubernetes.client.models.io_argoproj_v1alpha1_application_status_summary.io_argoproj_v1alpha1_Application_status_summary(
                    external_ur_ls = [
                        '0'
                        ], 
                    images = [
                        '0'
                        ], ), 
                sync = kubernetes.client.models.io_argoproj_v1alpha1_application_status_sync.io_argoproj_v1alpha1_Application_status_sync(
                    compared_to = kubernetes.client.models.io_argoproj_v1alpha1_application_status_sync_compared_to.io_argoproj_v1alpha1_Application_status_sync_comparedTo(
                        destination = kubernetes.client.models.io_argoproj_v1alpha1_application_status_sync_compared_to_destination.io_argoproj_v1alpha1_Application_status_sync_comparedTo_destination(
                            name = '0', 
                            namespace = '0', 
                            server = '0', ), 
                        source = kubernetes.client.models.io_argoproj_v1alpha1_application_status_sync_compared_to_source.io_argoproj_v1alpha1_Application_status_sync_comparedTo_source(
                            chart = '0', 
                            directory = kubernetes.client.models.io_argoproj_v1alpha1_application_operation_sync_source_directory.io_argoproj_v1alpha1_Application_operation_sync_source_directory(
                                exclude = '0', 
                                include = '0', 
                                jsonnet = kubernetes.client.models.io_argoproj_v1alpha1_application_operation_sync_source_directory_jsonnet.io_argoproj_v1alpha1_Application_operation_sync_source_directory_jsonnet(
                                    ext_vars = [
                                        kubernetes.client.models.io_argoproj_v1alpha1_application_operation_sync_source_directory_jsonnet_ext_vars.io_argoproj_v1alpha1_Application_operation_sync_source_directory_jsonnet_extVars(
                                            code = True, 
                                            name = '0', 
                                            value = '0', )
                                        ], 
                                    libs = [
                                        '0'
                                        ], 
                                    tlas = [
                                        kubernetes.client.models.io_argoproj_v1alpha1_application_operation_sync_source_directory_jsonnet_ext_vars.io_argoproj_v1alpha1_Application_operation_sync_source_directory_jsonnet_extVars(
                                            code = True, 
                                            name = '0', 
                                            value = '0', )
                                        ], ), 
                                recurse = True, ), 
                            helm = kubernetes.client.models.io_argoproj_v1alpha1_application_operation_sync_source_helm.io_argoproj_v1alpha1_Application_operation_sync_source_helm(
                                file_parameters = [
                                    kubernetes.client.models.io_argoproj_v1alpha1_application_operation_sync_source_helm_file_parameters.io_argoproj_v1alpha1_Application_operation_sync_source_helm_fileParameters(
                                        name = '0', 
                                        path = '0', )
                                    ], 
                                ignore_missing_value_files = True, 
                                parameters = [
                                    kubernetes.client.models.io_argoproj_v1alpha1_application_operation_sync_source_helm_parameters.io_argoproj_v1alpha1_Application_operation_sync_source_helm_parameters(
                                        force_string = True, 
                                        name = '0', 
                                        value = '0', )
                                    ], 
                                pass_credentials = True, 
                                release_name = '0', 
                                skip_crds = True, 
                                value_files = [
                                    '0'
                                    ], 
                                values = '0', 
                                version = '0', ), 
                            kustomize = kubernetes.client.models.io_argoproj_v1alpha1_application_operation_sync_source_kustomize.io_argoproj_v1alpha1_Application_operation_sync_source_kustomize(
                                common_annotations = {
                                    'key' : '0'
                                    }, 
                                common_annotations_envsubst = True, 
                                common_labels = {
                                    'key' : '0'
                                    }, 
                                force_common_annotations = True, 
                                force_common_labels = True, 
                                images = [
                                    '0'
                                    ], 
                                name_prefix = '0', 
                                name_suffix = '0', 
                                namespace = '0', 
                                replicas = [
                                    kubernetes.client.models.io_argoproj_v1alpha1_application_operation_sync_source_kustomize_replicas.io_argoproj_v1alpha1_Application_operation_sync_source_kustomize_replicas(
                                        count = kubernetes.client.models.count.count(), 
                                        name = '0', )
                                    ], 
                                version = '0', ), 
                            path = '0', 
                            plugin = kubernetes.client.models.io_argoproj_v1alpha1_application_operation_sync_source_plugin.io_argoproj_v1alpha1_Application_operation_sync_source_plugin(
                                env = [
                                    kubernetes.client.models.io_argoproj_v1alpha1_application_operation_sync_source_plugin_env.io_argoproj_v1alpha1_Application_operation_sync_source_plugin_env(
                                        name = '0', 
                                        value = '0', )
                                    ], 
                                name = '0', ), 
                            ref = '0', 
                            repo_url = '0', 
                            target_revision = '0', ), 
                        sources = [
                            kubernetes.client.models.io_argoproj_v1alpha1_application_operation_sync_sources.io_argoproj_v1alpha1_Application_operation_sync_sources(
                                chart = '0', 
                                path = '0', 
                                ref = '0', 
                                repo_url = '0', 
                                target_revision = '0', )
                            ], ), 
                    revision = '0', 
                    revisions = [
                        '0'
                        ], 
                    status = '0', )
            )
        else :
            return IoArgoprojV1alpha1ApplicationStatus(
        )

    def testIoArgoprojV1alpha1ApplicationStatus(self):
        """Test IoArgoprojV1alpha1ApplicationStatus"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
