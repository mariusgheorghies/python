# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1.25.12
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import kubernetes.client
from kubernetes.client.models.aws_k8s_services_ec2_v1alpha1_instance_spec_instance_market_options_spot_options import AwsK8sServicesEc2V1alpha1InstanceSpecInstanceMarketOptionsSpotOptions  # noqa: E501
from kubernetes.client.rest import ApiException

class TestAwsK8sServicesEc2V1alpha1InstanceSpecInstanceMarketOptionsSpotOptions(unittest.TestCase):
    """AwsK8sServicesEc2V1alpha1InstanceSpecInstanceMarketOptionsSpotOptions unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test AwsK8sServicesEc2V1alpha1InstanceSpecInstanceMarketOptionsSpotOptions
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = kubernetes.client.models.aws_k8s_services_ec2_v1alpha1_instance_spec_instance_market_options_spot_options.AwsK8sServicesEc2V1alpha1InstanceSpecInstanceMarketOptionsSpotOptions()  # noqa: E501
        if include_optional :
            return AwsK8sServicesEc2V1alpha1InstanceSpecInstanceMarketOptionsSpotOptions(
                block_duration_minutes = 56, 
                instance_interruption_behavior = '0', 
                max_price = '0', 
                spot_instance_type = '0', 
                valid_until = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else :
            return AwsK8sServicesEc2V1alpha1InstanceSpecInstanceMarketOptionsSpotOptions(
        )

    def testAwsK8sServicesEc2V1alpha1InstanceSpecInstanceMarketOptionsSpotOptions(self):
        """Test AwsK8sServicesEc2V1alpha1InstanceSpecInstanceMarketOptionsSpotOptions"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
