# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1.20.7
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import kubernetes.client
from kubernetes.client.models.aws_k8s_vpcresources_v1beta1_security_group_policy_list import AwsK8sVpcresourcesV1beta1SecurityGroupPolicyList  # noqa: E501
from kubernetes.client.rest import ApiException

class TestAwsK8sVpcresourcesV1beta1SecurityGroupPolicyList(unittest.TestCase):
    """AwsK8sVpcresourcesV1beta1SecurityGroupPolicyList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test AwsK8sVpcresourcesV1beta1SecurityGroupPolicyList
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = kubernetes.client.models.aws_k8s_vpcresources_v1beta1_security_group_policy_list.AwsK8sVpcresourcesV1beta1SecurityGroupPolicyList()  # noqa: E501
        if include_optional :
            return AwsK8sVpcresourcesV1beta1SecurityGroupPolicyList(
                api_version = '0', 
                items = [
                    None
                    ], 
                kind = '0', 
                metadata = kubernetes.client.models.v1/list_meta.v1.ListMeta(
                    continue = '0', 
                    remaining_item_count = 56, 
                    resource_version = '0', 
                    self_link = '0', )
            )
        else :
            return AwsK8sVpcresourcesV1beta1SecurityGroupPolicyList(
                items = [
                    None
                    ],
        )

    def testAwsK8sVpcresourcesV1beta1SecurityGroupPolicyList(self):
        """Test AwsK8sVpcresourcesV1beta1SecurityGroupPolicyList"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
