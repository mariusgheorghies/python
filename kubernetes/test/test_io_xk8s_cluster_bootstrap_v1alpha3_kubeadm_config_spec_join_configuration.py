# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1.20.7
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import kubernetes.client
from kubernetes.client.models.io_xk8s_cluster_bootstrap_v1alpha3_kubeadm_config_spec_join_configuration import IoXK8sClusterBootstrapV1alpha3KubeadmConfigSpecJoinConfiguration  # noqa: E501
from kubernetes.client.rest import ApiException

class TestIoXK8sClusterBootstrapV1alpha3KubeadmConfigSpecJoinConfiguration(unittest.TestCase):
    """IoXK8sClusterBootstrapV1alpha3KubeadmConfigSpecJoinConfiguration unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test IoXK8sClusterBootstrapV1alpha3KubeadmConfigSpecJoinConfiguration
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = kubernetes.client.models.io_xk8s_cluster_bootstrap_v1alpha3_kubeadm_config_spec_join_configuration.IoXK8sClusterBootstrapV1alpha3KubeadmConfigSpecJoinConfiguration()  # noqa: E501
        if include_optional :
            return IoXK8sClusterBootstrapV1alpha3KubeadmConfigSpecJoinConfiguration(
                api_version = '0', 
                ca_cert_path = '0', 
                control_plane = kubernetes.client.models.io_x_k8s_cluster_bootstrap_v1alpha3_kubeadm_config_spec_join_configuration_control_plane.io_x_k8s_cluster_bootstrap_v1alpha3_KubeadmConfig_spec_joinConfiguration_controlPlane(
                    local_api_endpoint = kubernetes.client.models.io_x_k8s_cluster_bootstrap_v1alpha3_kubeadm_config_spec_join_configuration_control_plane_local_api_endpoint.io_x_k8s_cluster_bootstrap_v1alpha3_KubeadmConfig_spec_joinConfiguration_controlPlane_localAPIEndpoint(
                        advertise_address = '0', 
                        bind_port = 56, ), ), 
                discovery = kubernetes.client.models.io_x_k8s_cluster_bootstrap_v1alpha3_kubeadm_config_spec_join_configuration_discovery.io_x_k8s_cluster_bootstrap_v1alpha3_KubeadmConfig_spec_joinConfiguration_discovery(
                    bootstrap_token = kubernetes.client.models.io_x_k8s_cluster_bootstrap_v1alpha3_kubeadm_config_spec_join_configuration_discovery_bootstrap_token.io_x_k8s_cluster_bootstrap_v1alpha3_KubeadmConfig_spec_joinConfiguration_discovery_bootstrapToken(
                        api_server_endpoint = '0', 
                        ca_cert_hashes = [
                            '0'
                            ], 
                        token = '0', 
                        unsafe_skip_ca_verification = True, ), 
                    file = kubernetes.client.models.io_x_k8s_cluster_bootstrap_v1alpha3_kubeadm_config_spec_join_configuration_discovery_file.io_x_k8s_cluster_bootstrap_v1alpha3_KubeadmConfig_spec_joinConfiguration_discovery_file(
                        kube_config_path = '0', ), 
                    timeout = '0', 
                    tls_bootstrap_token = '0', ), 
                kind = '0', 
                node_registration = kubernetes.client.models.io_x_k8s_cluster_bootstrap_v1alpha3_kubeadm_config_spec_init_configuration_node_registration.io_x_k8s_cluster_bootstrap_v1alpha3_KubeadmConfig_spec_initConfiguration_nodeRegistration(
                    cri_socket = '0', 
                    kubelet_extra_args = {
                        'key' : '0'
                        }, 
                    name = '0', 
                    taints = [
                        kubernetes.client.models.io_x_k8s_cluster_bootstrap_v1alpha3_kubeadm_config_spec_init_configuration_node_registration_taints.io_x_k8s_cluster_bootstrap_v1alpha3_KubeadmConfig_spec_initConfiguration_nodeRegistration_taints(
                            effect = '0', 
                            key = '0', 
                            time_added = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            value = '0', )
                        ], )
            )
        else :
            return IoXK8sClusterBootstrapV1alpha3KubeadmConfigSpecJoinConfiguration(
        )

    def testIoXK8sClusterBootstrapV1alpha3KubeadmConfigSpecJoinConfiguration(self):
        """Test IoXK8sClusterBootstrapV1alpha3KubeadmConfigSpecJoinConfiguration"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
