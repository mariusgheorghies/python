# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1.25.12
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import kubernetes.client
from kubernetes.client.models.aws_k8s_services_ec2_v1alpha1_instance_spec_network_interfaces import AwsK8sServicesEc2V1alpha1InstanceSpecNetworkInterfaces  # noqa: E501
from kubernetes.client.rest import ApiException

class TestAwsK8sServicesEc2V1alpha1InstanceSpecNetworkInterfaces(unittest.TestCase):
    """AwsK8sServicesEc2V1alpha1InstanceSpecNetworkInterfaces unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test AwsK8sServicesEc2V1alpha1InstanceSpecNetworkInterfaces
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = kubernetes.client.models.aws_k8s_services_ec2_v1alpha1_instance_spec_network_interfaces.AwsK8sServicesEc2V1alpha1InstanceSpecNetworkInterfaces()  # noqa: E501
        if include_optional :
            return AwsK8sServicesEc2V1alpha1InstanceSpecNetworkInterfaces(
                associate_carrier_ip_address = True, 
                associate_public_ip_address = True, 
                delete_on_termination = True, 
                description = '0', 
                device_index = 56, 
                interface_type = '0', 
                ipv4_prefix_count = 56, 
                ipv4_prefixes = [
                    kubernetes.client.models.aws_k8s_services_ec2_v1alpha1_instance_spec_ipv4_prefixes.aws_k8s_services_ec2_v1alpha1_Instance_spec_ipv4Prefixes(
                        ipv4_prefix = '0', )
                    ], 
                ipv6_address_count = 56, 
                ipv6_addresses = [
                    kubernetes.client.models.aws_k8s_services_ec2_v1alpha1_instance_spec_ipv6_addresses.aws_k8s_services_ec2_v1alpha1_Instance_spec_ipv6Addresses(
                        ipv6_address = '0', )
                    ], 
                ipv6_prefix_count = 56, 
                ipv6_prefixes = [
                    kubernetes.client.models.aws_k8s_services_ec2_v1alpha1_instance_spec_ipv6_prefixes.aws_k8s_services_ec2_v1alpha1_Instance_spec_ipv6Prefixes(
                        ipv6_prefix = '0', )
                    ], 
                network_card_index = 56, 
                network_interface_id = '0', 
                private_ip_address = '0', 
                private_ip_addresses = [
                    kubernetes.client.models.aws_k8s_services_ec2_v1alpha1_instance_spec_private_ip_addresses.aws_k8s_services_ec2_v1alpha1_Instance_spec_privateIPAddresses(
                        primary = True, 
                        private_ip_address = '0', )
                    ], 
                secondary_private_ip_address_count = 56, 
                subnet_id = '0'
            )
        else :
            return AwsK8sServicesEc2V1alpha1InstanceSpecNetworkInterfaces(
        )

    def testAwsK8sServicesEc2V1alpha1InstanceSpecNetworkInterfaces(self):
        """Test AwsK8sServicesEc2V1alpha1InstanceSpecNetworkInterfaces"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
