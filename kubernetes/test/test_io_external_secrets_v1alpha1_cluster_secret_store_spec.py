# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1.25.12
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import kubernetes.client
from kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec import IoExternalSecretsV1alpha1ClusterSecretStoreSpec  # noqa: E501
from kubernetes.client.rest import ApiException

class TestIoExternalSecretsV1alpha1ClusterSecretStoreSpec(unittest.TestCase):
    """IoExternalSecretsV1alpha1ClusterSecretStoreSpec unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test IoExternalSecretsV1alpha1ClusterSecretStoreSpec
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec.IoExternalSecretsV1alpha1ClusterSecretStoreSpec()  # noqa: E501
        if include_optional :
            return IoExternalSecretsV1alpha1ClusterSecretStoreSpec(
                controller = '0', 
                provider = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider(
                    akeyless = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_akeyless.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_akeyless(
                        akeyless_gw_api_url = '0', 
                        auth_secret_ref = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_akeyless_auth_secret_ref.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_akeyless_authSecretRef(
                            kubernetes_auth = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_akeyless_auth_secret_ref_kubernetes_auth.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_akeyless_authSecretRef_kubernetesAuth(
                                access_id = '0', 
                                k8s_conf_name = '0', 
                                secret_ref = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_akeyless_auth_secret_ref_kubernetes_auth_secret_ref.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_akeyless_authSecretRef_kubernetesAuth_secretRef(
                                    key = '0', 
                                    name = '0', 
                                    namespace = '0', ), 
                                service_account_ref = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_akeyless_auth_secret_ref_kubernetes_auth_service_account_ref.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_akeyless_authSecretRef_kubernetesAuth_serviceAccountRef(
                                    audiences = [
                                        '0'
                                        ], 
                                    name = '0', 
                                    namespace = '0', ), ), 
                            secret_ref = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_akeyless_auth_secret_ref_secret_ref.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_akeyless_authSecretRef_secretRef(
                                access_id = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_akeyless_auth_secret_ref_secret_ref_access_id.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_akeyless_authSecretRef_secretRef_accessID(
                                    key = '0', 
                                    name = '0', 
                                    namespace = '0', ), 
                                access_type = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_akeyless_auth_secret_ref_secret_ref_access_type.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_akeyless_authSecretRef_secretRef_accessType(
                                    key = '0', 
                                    name = '0', 
                                    namespace = '0', ), 
                                access_type_param = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_akeyless_auth_secret_ref_secret_ref_access_type.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_akeyless_authSecretRef_secretRef_accessType(
                                    key = '0', 
                                    name = '0', 
                                    namespace = '0', ), ), ), 
                        ca_bundle = 'YQ==', 
                        ca_provider = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_akeyless_ca_provider.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_akeyless_caProvider(
                            key = '0', 
                            name = '0', 
                            namespace = '0', 
                            type = 'Secret', ), ), 
                    alibaba = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_alibaba.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_alibaba(
                        auth = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_alibaba_auth.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_alibaba_auth(
                            secret_ref = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_alibaba_auth_secret_ref.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_alibaba_auth_secretRef(
                                access_key_id_secret_ref = kubernetes.client.models.io_external_secrets_generators_v1alpha1_ecr_authorization_token_spec_auth_secret_ref_access_key_id_secret_ref.io_external_secrets_generators_v1alpha1_ECRAuthorizationToken_spec_auth_secretRef_accessKeyIDSecretRef(
                                    key = '0', 
                                    name = '0', 
                                    namespace = '0', ), 
                                access_key_secret_secret_ref = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_alibaba_auth_secret_ref_access_key_secret_secret_ref.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_alibaba_auth_secretRef_accessKeySecretSecretRef(
                                    key = '0', 
                                    name = '0', 
                                    namespace = '0', ), ), ), 
                        endpoint = '0', 
                        region_id = '0', ), 
                    aws = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_aws.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_aws(
                        region = '0', 
                        role = '0', 
                        service = 'SecretsManager', ), 
                    azurekv = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_azurekv.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_azurekv(
                        auth_type = 'ServicePrincipal', 
                        identity_id = '0', 
                        tenant_id = '0', 
                        vault_url = '0', ), 
                    fake = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_fake.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_fake(
                        data = [
                            kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_fake_data.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_fake_data(
                                key = '0', 
                                value = '0', 
                                value_map = {
                                    'key' : '0'
                                    }, 
                                version = '0', )
                            ], ), 
                    gcpsm = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_gcpsm.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_gcpsm(
                        project_id = '0', ), 
                    gitlab = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_gitlab.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_gitlab(
                        auth = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_gitlab_auth.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_gitlab_auth(
                            secret_ref = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_gitlab_auth_secret_ref.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_gitlab_auth_SecretRef(
                                access_token = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_gitlab_auth_secret_ref_access_token.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_gitlab_auth_SecretRef_accessToken(
                                    key = '0', 
                                    name = '0', 
                                    namespace = '0', ), ), ), 
                        project_id = '0', 
                        url = '0', ), 
                    ibm = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_ibm.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_ibm(
                        auth = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_ibm_auth.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_ibm_auth(
                            secret_ref = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_ibm_auth_secret_ref.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_ibm_auth_secretRef(
                                secret_api_key_secret_ref = kubernetes.client.models.io_external_secrets_generators_v1alpha1_ecr_authorization_token_spec_auth_secret_ref_secret_access_key_secret_ref.io_external_secrets_generators_v1alpha1_ECRAuthorizationToken_spec_auth_secretRef_secretAccessKeySecretRef(
                                    key = '0', 
                                    name = '0', 
                                    namespace = '0', ), ), ), 
                        service_url = '0', ), 
                    kubernetes = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_kubernetes.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_kubernetes(
                        auth = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_kubernetes_auth.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_kubernetes_auth(
                            cert = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_kubernetes_auth_cert.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_kubernetes_auth_cert(
                                kubernetes.client_cert = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_akeyless_auth_secret_ref_secret_ref_access_type.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_akeyless_authSecretRef_secretRef_accessType(
                                    key = '0', 
                                    name = '0', 
                                    namespace = '0', ), 
                                kubernetes.client_key = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_akeyless_auth_secret_ref_secret_ref_access_type.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_akeyless_authSecretRef_secretRef_accessType(
                                    key = '0', 
                                    name = '0', 
                                    namespace = '0', ), ), 
                            service_account = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_kubernetes_auth_service_account.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_kubernetes_auth_serviceAccount(), 
                            token = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_kubernetes_auth_token.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_kubernetes_auth_token(
                                bearer_token = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_akeyless_auth_secret_ref_secret_ref_access_type.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_akeyless_authSecretRef_secretRef_accessType(
                                    key = '0', 
                                    name = '0', 
                                    namespace = '0', ), ), ), 
                        remote_namespace = '0', 
                        server = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_kubernetes_server.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_kubernetes_server(
                            ca_bundle = 'YQ==', 
                            url = '0', ), ), 
                    oracle = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_oracle.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_oracle(
                        region = '0', 
                        vault = '0', ), 
                    vault = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_vault.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_vault(
                        auth = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_vault_auth.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_vault_auth(
                            app_role = kubernetes.client.models.io_external_secrets_generators_v1alpha1_vault_dynamic_secret_spec_provider_auth_app_role.io_external_secrets_generators_v1alpha1_VaultDynamicSecret_spec_provider_auth_appRole(
                                path = '0', 
                                role_id = '0', 
                                secret_ref = kubernetes.client.models.io_external_secrets_generators_v1alpha1_vault_dynamic_secret_spec_provider_auth_app_role_secret_ref.io_external_secrets_generators_v1alpha1_VaultDynamicSecret_spec_provider_auth_appRole_secretRef(
                                    key = '0', 
                                    name = '0', 
                                    namespace = '0', ), ), 
                            jwt = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_vault_auth_jwt.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_vault_auth_jwt(
                                kubernetes_service_account_token = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_vault_auth_jwt_kubernetes_service_account_token.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_vault_auth_jwt_kubernetesServiceAccountToken(
                                    expiration_seconds = 56, 
                                    service_account_ref = kubernetes.client.models.io_external_secrets_generators_v1alpha1_vault_dynamic_secret_spec_provider_auth_jwt_kubernetes_service_account_token_service_account_ref.io_external_secrets_generators_v1alpha1_VaultDynamicSecret_spec_provider_auth_jwt_kubernetesServiceAccountToken_serviceAccountRef(
                                        name = '0', 
                                        namespace = '0', ), ), 
                                path = '0', 
                                role = '0', ), 
                            ldap = kubernetes.client.models.io_external_secrets_generators_v1alpha1_vault_dynamic_secret_spec_provider_auth_ldap.io_external_secrets_generators_v1alpha1_VaultDynamicSecret_spec_provider_auth_ldap(
                                path = '0', 
                                username = '0', ), 
                            token_secret_ref = kubernetes.client.models.io_external_secrets_generators_v1alpha1_vault_dynamic_secret_spec_provider_auth_token_secret_ref.io_external_secrets_generators_v1alpha1_VaultDynamicSecret_spec_provider_auth_tokenSecretRef(
                                key = '0', 
                                name = '0', 
                                namespace = '0', ), ), 
                        ca_bundle = 'YQ==', 
                        forward_inconsistent = True, 
                        namespace = '0', 
                        path = '0', 
                        read_your_writes = True, 
                        server = '0', 
                        version = 'v1', ), 
                    webhook = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_webhook.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_webhook(
                        body = '0', 
                        ca_bundle = 'YQ==', 
                        headers = {
                            'key' : '0'
                            }, 
                        method = '0', 
                        result = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_webhook_result.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_webhook_result(
                            json_path = '0', ), 
                        secrets = [
                            kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_webhook_secrets.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_webhook_secrets(
                                name = '0', 
                                secret_ref = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_webhook_secret_ref.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_webhook_secretRef(
                                    key = '0', 
                                    name = '0', 
                                    namespace = '0', ), )
                            ], 
                        timeout = '0', 
                        url = '0', ), 
                    yandexlockbox = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_yandexlockbox.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_yandexlockbox(
                        api_endpoint = '0', 
                        auth = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_yandexlockbox_auth.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_yandexlockbox_auth(
                            authorized_key_secret_ref = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_yandexlockbox_auth_authorized_key_secret_ref.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_yandexlockbox_auth_authorizedKeySecretRef(
                                key = '0', 
                                name = '0', 
                                namespace = '0', ), ), ), ), 
                retry_settings = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_retry_settings.io_external_secrets_v1alpha1_ClusterSecretStore_spec_retrySettings(
                    max_retries = 56, 
                    retry_interval = '0', )
            )
        else :
            return IoExternalSecretsV1alpha1ClusterSecretStoreSpec(
                provider = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider(
                    akeyless = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_akeyless.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_akeyless(
                        akeyless_gw_api_url = '0', 
                        auth_secret_ref = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_akeyless_auth_secret_ref.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_akeyless_authSecretRef(
                            kubernetes_auth = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_akeyless_auth_secret_ref_kubernetes_auth.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_akeyless_authSecretRef_kubernetesAuth(
                                access_id = '0', 
                                k8s_conf_name = '0', 
                                secret_ref = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_akeyless_auth_secret_ref_kubernetes_auth_secret_ref.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_akeyless_authSecretRef_kubernetesAuth_secretRef(
                                    key = '0', 
                                    name = '0', 
                                    namespace = '0', ), 
                                service_account_ref = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_akeyless_auth_secret_ref_kubernetes_auth_service_account_ref.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_akeyless_authSecretRef_kubernetesAuth_serviceAccountRef(
                                    audiences = [
                                        '0'
                                        ], 
                                    name = '0', 
                                    namespace = '0', ), ), 
                            secret_ref = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_akeyless_auth_secret_ref_secret_ref.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_akeyless_authSecretRef_secretRef(
                                access_id = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_akeyless_auth_secret_ref_secret_ref_access_id.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_akeyless_authSecretRef_secretRef_accessID(
                                    key = '0', 
                                    name = '0', 
                                    namespace = '0', ), 
                                access_type = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_akeyless_auth_secret_ref_secret_ref_access_type.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_akeyless_authSecretRef_secretRef_accessType(
                                    key = '0', 
                                    name = '0', 
                                    namespace = '0', ), 
                                access_type_param = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_akeyless_auth_secret_ref_secret_ref_access_type.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_akeyless_authSecretRef_secretRef_accessType(
                                    key = '0', 
                                    name = '0', 
                                    namespace = '0', ), ), ), 
                        ca_bundle = 'YQ==', 
                        ca_provider = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_akeyless_ca_provider.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_akeyless_caProvider(
                            key = '0', 
                            name = '0', 
                            namespace = '0', 
                            type = 'Secret', ), ), 
                    alibaba = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_alibaba.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_alibaba(
                        auth = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_alibaba_auth.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_alibaba_auth(
                            secret_ref = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_alibaba_auth_secret_ref.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_alibaba_auth_secretRef(
                                access_key_id_secret_ref = kubernetes.client.models.io_external_secrets_generators_v1alpha1_ecr_authorization_token_spec_auth_secret_ref_access_key_id_secret_ref.io_external_secrets_generators_v1alpha1_ECRAuthorizationToken_spec_auth_secretRef_accessKeyIDSecretRef(
                                    key = '0', 
                                    name = '0', 
                                    namespace = '0', ), 
                                access_key_secret_secret_ref = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_alibaba_auth_secret_ref_access_key_secret_secret_ref.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_alibaba_auth_secretRef_accessKeySecretSecretRef(
                                    key = '0', 
                                    name = '0', 
                                    namespace = '0', ), ), ), 
                        endpoint = '0', 
                        region_id = '0', ), 
                    aws = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_aws.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_aws(
                        region = '0', 
                        role = '0', 
                        service = 'SecretsManager', ), 
                    azurekv = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_azurekv.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_azurekv(
                        auth_type = 'ServicePrincipal', 
                        identity_id = '0', 
                        tenant_id = '0', 
                        vault_url = '0', ), 
                    fake = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_fake.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_fake(
                        data = [
                            kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_fake_data.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_fake_data(
                                key = '0', 
                                value = '0', 
                                value_map = {
                                    'key' : '0'
                                    }, 
                                version = '0', )
                            ], ), 
                    gcpsm = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_gcpsm.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_gcpsm(
                        project_id = '0', ), 
                    gitlab = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_gitlab.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_gitlab(
                        auth = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_gitlab_auth.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_gitlab_auth(
                            secret_ref = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_gitlab_auth_secret_ref.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_gitlab_auth_SecretRef(
                                access_token = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_gitlab_auth_secret_ref_access_token.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_gitlab_auth_SecretRef_accessToken(
                                    key = '0', 
                                    name = '0', 
                                    namespace = '0', ), ), ), 
                        project_id = '0', 
                        url = '0', ), 
                    ibm = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_ibm.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_ibm(
                        auth = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_ibm_auth.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_ibm_auth(
                            secret_ref = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_ibm_auth_secret_ref.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_ibm_auth_secretRef(
                                secret_api_key_secret_ref = kubernetes.client.models.io_external_secrets_generators_v1alpha1_ecr_authorization_token_spec_auth_secret_ref_secret_access_key_secret_ref.io_external_secrets_generators_v1alpha1_ECRAuthorizationToken_spec_auth_secretRef_secretAccessKeySecretRef(
                                    key = '0', 
                                    name = '0', 
                                    namespace = '0', ), ), ), 
                        service_url = '0', ), 
                    kubernetes = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_kubernetes.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_kubernetes(
                        auth = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_kubernetes_auth.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_kubernetes_auth(
                            cert = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_kubernetes_auth_cert.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_kubernetes_auth_cert(
                                kubernetes.client_cert = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_akeyless_auth_secret_ref_secret_ref_access_type.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_akeyless_authSecretRef_secretRef_accessType(
                                    key = '0', 
                                    name = '0', 
                                    namespace = '0', ), 
                                kubernetes.client_key = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_akeyless_auth_secret_ref_secret_ref_access_type.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_akeyless_authSecretRef_secretRef_accessType(
                                    key = '0', 
                                    name = '0', 
                                    namespace = '0', ), ), 
                            service_account = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_kubernetes_auth_service_account.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_kubernetes_auth_serviceAccount(), 
                            token = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_kubernetes_auth_token.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_kubernetes_auth_token(
                                bearer_token = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_akeyless_auth_secret_ref_secret_ref_access_type.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_akeyless_authSecretRef_secretRef_accessType(
                                    key = '0', 
                                    name = '0', 
                                    namespace = '0', ), ), ), 
                        remote_namespace = '0', 
                        server = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_kubernetes_server.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_kubernetes_server(
                            ca_bundle = 'YQ==', 
                            url = '0', ), ), 
                    oracle = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_oracle.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_oracle(
                        region = '0', 
                        vault = '0', ), 
                    vault = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_vault.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_vault(
                        auth = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_vault_auth.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_vault_auth(
                            app_role = kubernetes.client.models.io_external_secrets_generators_v1alpha1_vault_dynamic_secret_spec_provider_auth_app_role.io_external_secrets_generators_v1alpha1_VaultDynamicSecret_spec_provider_auth_appRole(
                                path = '0', 
                                role_id = '0', 
                                secret_ref = kubernetes.client.models.io_external_secrets_generators_v1alpha1_vault_dynamic_secret_spec_provider_auth_app_role_secret_ref.io_external_secrets_generators_v1alpha1_VaultDynamicSecret_spec_provider_auth_appRole_secretRef(
                                    key = '0', 
                                    name = '0', 
                                    namespace = '0', ), ), 
                            jwt = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_vault_auth_jwt.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_vault_auth_jwt(
                                kubernetes_service_account_token = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_vault_auth_jwt_kubernetes_service_account_token.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_vault_auth_jwt_kubernetesServiceAccountToken(
                                    expiration_seconds = 56, 
                                    service_account_ref = kubernetes.client.models.io_external_secrets_generators_v1alpha1_vault_dynamic_secret_spec_provider_auth_jwt_kubernetes_service_account_token_service_account_ref.io_external_secrets_generators_v1alpha1_VaultDynamicSecret_spec_provider_auth_jwt_kubernetesServiceAccountToken_serviceAccountRef(
                                        name = '0', 
                                        namespace = '0', ), ), 
                                path = '0', 
                                role = '0', ), 
                            ldap = kubernetes.client.models.io_external_secrets_generators_v1alpha1_vault_dynamic_secret_spec_provider_auth_ldap.io_external_secrets_generators_v1alpha1_VaultDynamicSecret_spec_provider_auth_ldap(
                                path = '0', 
                                username = '0', ), 
                            token_secret_ref = kubernetes.client.models.io_external_secrets_generators_v1alpha1_vault_dynamic_secret_spec_provider_auth_token_secret_ref.io_external_secrets_generators_v1alpha1_VaultDynamicSecret_spec_provider_auth_tokenSecretRef(
                                key = '0', 
                                name = '0', 
                                namespace = '0', ), ), 
                        ca_bundle = 'YQ==', 
                        forward_inconsistent = True, 
                        namespace = '0', 
                        path = '0', 
                        read_your_writes = True, 
                        server = '0', 
                        version = 'v1', ), 
                    webhook = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_webhook.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_webhook(
                        body = '0', 
                        ca_bundle = 'YQ==', 
                        headers = {
                            'key' : '0'
                            }, 
                        method = '0', 
                        result = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_webhook_result.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_webhook_result(
                            json_path = '0', ), 
                        secrets = [
                            kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_webhook_secrets.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_webhook_secrets(
                                name = '0', 
                                secret_ref = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_webhook_secret_ref.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_webhook_secretRef(
                                    key = '0', 
                                    name = '0', 
                                    namespace = '0', ), )
                            ], 
                        timeout = '0', 
                        url = '0', ), 
                    yandexlockbox = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_yandexlockbox.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_yandexlockbox(
                        api_endpoint = '0', 
                        auth = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_yandexlockbox_auth.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_yandexlockbox_auth(
                            authorized_key_secret_ref = kubernetes.client.models.io_external_secrets_v1alpha1_cluster_secret_store_spec_provider_yandexlockbox_auth_authorized_key_secret_ref.io_external_secrets_v1alpha1_ClusterSecretStore_spec_provider_yandexlockbox_auth_authorizedKeySecretRef(
                                key = '0', 
                                name = '0', 
                                namespace = '0', ), ), ), ),
        )

    def testIoExternalSecretsV1alpha1ClusterSecretStoreSpec(self):
        """Test IoExternalSecretsV1alpha1ClusterSecretStoreSpec"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
