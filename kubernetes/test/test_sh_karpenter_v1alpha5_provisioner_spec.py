# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1.25.12
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import kubernetes.client
from kubernetes.client.models.sh_karpenter_v1alpha5_provisioner_spec import ShKarpenterV1alpha5ProvisionerSpec  # noqa: E501
from kubernetes.client.rest import ApiException

class TestShKarpenterV1alpha5ProvisionerSpec(unittest.TestCase):
    """ShKarpenterV1alpha5ProvisionerSpec unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ShKarpenterV1alpha5ProvisionerSpec
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = kubernetes.client.models.sh_karpenter_v1alpha5_provisioner_spec.ShKarpenterV1alpha5ProvisionerSpec()  # noqa: E501
        if include_optional :
            return ShKarpenterV1alpha5ProvisionerSpec(
                kubelet_configuration = kubernetes.client.models.sh_karpenter_v1alpha5_provisioner_spec_kubelet_configuration.sh_karpenter_v1alpha5_Provisioner_spec_kubeletConfiguration(
                    cluster_dns = [
                        '0'
                        ], 
                    container_runtime = '0', ), 
                labels = {
                    'key' : '0'
                    }, 
                limits = kubernetes.client.models.sh_karpenter_v1alpha5_provisioner_spec_limits.sh_karpenter_v1alpha5_Provisioner_spec_limits(
                    resources = {
                        'key' : None
                        }, ), 
                provider = kubernetes.client.models.provider.provider(), 
                provider_ref = kubernetes.client.models.sh_karpenter_v1alpha5_provisioner_spec_provider_ref.sh_karpenter_v1alpha5_Provisioner_spec_providerRef(
                    api_version = '0', 
                    kind = '0', 
                    name = '0', ), 
                requirements = [
                    kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_affinity_node_affinity_preference_match_expressions.com_coreos_monitoring_v1_Alertmanager_spec_affinity_nodeAffinity_preference_matchExpressions(
                        key = '0', 
                        operator = '0', 
                        values = [
                            '0'
                            ], )
                    ], 
                startup_taints = [
                    kubernetes.client.models.sh_karpenter_v1alpha5_provisioner_spec_startup_taints.sh_karpenter_v1alpha5_Provisioner_spec_startupTaints(
                        effect = '0', 
                        key = '0', 
                        time_added = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        value = '0', )
                    ], 
                taints = [
                    kubernetes.client.models.sh_karpenter_v1alpha5_provisioner_spec_startup_taints.sh_karpenter_v1alpha5_Provisioner_spec_startupTaints(
                        effect = '0', 
                        key = '0', 
                        time_added = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        value = '0', )
                    ], 
                ttl_seconds_after_empty = 56, 
                ttl_seconds_until_expired = 56
            )
        else :
            return ShKarpenterV1alpha5ProvisionerSpec(
        )

    def testShKarpenterV1alpha5ProvisionerSpec(self):
        """Test ShKarpenterV1alpha5ProvisionerSpec"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
