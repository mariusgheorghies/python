# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1.20.7
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import kubernetes.client
from kubernetes.client.models.com_coreos_monitoring_v1_thanos_ruler_spec_rule_namespace_selector import ComCoreosMonitoringV1ThanosRulerSpecRuleNamespaceSelector  # noqa: E501
from kubernetes.client.rest import ApiException

class TestComCoreosMonitoringV1ThanosRulerSpecRuleNamespaceSelector(unittest.TestCase):
    """ComCoreosMonitoringV1ThanosRulerSpecRuleNamespaceSelector unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ComCoreosMonitoringV1ThanosRulerSpecRuleNamespaceSelector
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = kubernetes.client.models.com_coreos_monitoring_v1_thanos_ruler_spec_rule_namespace_selector.ComCoreosMonitoringV1ThanosRulerSpecRuleNamespaceSelector()  # noqa: E501
        if include_optional :
            return ComCoreosMonitoringV1ThanosRulerSpecRuleNamespaceSelector(
                match_expressions = [
                    kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_affinity_pod_affinity_pod_affinity_term_label_selector_match_expressions.com_coreos_monitoring_v1_Alertmanager_spec_affinity_podAffinity_podAffinityTerm_labelSelector_matchExpressions(
                        key = '0', 
                        operator = '0', 
                        values = [
                            '0'
                            ], )
                    ], 
                match_labels = {
                    'key' : '0'
                    }
            )
        else :
            return ComCoreosMonitoringV1ThanosRulerSpecRuleNamespaceSelector(
        )

    def testComCoreosMonitoringV1ThanosRulerSpecRuleNamespaceSelector(self):
        """Test ComCoreosMonitoringV1ThanosRulerSpecRuleNamespaceSelector"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
