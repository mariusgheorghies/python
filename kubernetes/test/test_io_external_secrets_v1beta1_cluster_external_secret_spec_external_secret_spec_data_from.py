# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1.25.12
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import kubernetes.client
from kubernetes.client.models.io_external_secrets_v1beta1_cluster_external_secret_spec_external_secret_spec_data_from import IoExternalSecretsV1beta1ClusterExternalSecretSpecExternalSecretSpecDataFrom  # noqa: E501
from kubernetes.client.rest import ApiException

class TestIoExternalSecretsV1beta1ClusterExternalSecretSpecExternalSecretSpecDataFrom(unittest.TestCase):
    """IoExternalSecretsV1beta1ClusterExternalSecretSpecExternalSecretSpecDataFrom unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test IoExternalSecretsV1beta1ClusterExternalSecretSpecExternalSecretSpecDataFrom
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = kubernetes.client.models.io_external_secrets_v1beta1_cluster_external_secret_spec_external_secret_spec_data_from.IoExternalSecretsV1beta1ClusterExternalSecretSpecExternalSecretSpecDataFrom()  # noqa: E501
        if include_optional :
            return IoExternalSecretsV1beta1ClusterExternalSecretSpecExternalSecretSpecDataFrom(
                extract = kubernetes.client.models.io_external_secrets_v1beta1_cluster_external_secret_spec_external_secret_spec_extract.io_external_secrets_v1beta1_ClusterExternalSecret_spec_externalSecretSpec_extract(
                    conversion_strategy = '0', 
                    decoding_strategy = '0', 
                    key = '0', 
                    metadata_policy = '0', 
                    property = '0', 
                    version = '0', ), 
                find = kubernetes.client.models.io_external_secrets_v1beta1_cluster_external_secret_spec_external_secret_spec_find.io_external_secrets_v1beta1_ClusterExternalSecret_spec_externalSecretSpec_find(
                    conversion_strategy = '0', 
                    decoding_strategy = '0', 
                    name = kubernetes.client.models.io_external_secrets_v1beta1_cluster_external_secret_spec_external_secret_spec_find_name.io_external_secrets_v1beta1_ClusterExternalSecret_spec_externalSecretSpec_find_name(
                        regexp = '0', ), 
                    path = '0', 
                    tags = {
                        'key' : '0'
                        }, ), 
                rewrite = [
                    kubernetes.client.models.io_external_secrets_v1beta1_cluster_external_secret_spec_external_secret_spec_rewrite.io_external_secrets_v1beta1_ClusterExternalSecret_spec_externalSecretSpec_rewrite(
                        regexp = kubernetes.client.models.io_external_secrets_v1beta1_cluster_external_secret_spec_external_secret_spec_regexp.io_external_secrets_v1beta1_ClusterExternalSecret_spec_externalSecretSpec_regexp(
                            source = '0', 
                            target = '0', ), )
                    ], 
                source_ref = kubernetes.client.models.io_external_secrets_v1beta1_cluster_external_secret_spec_external_secret_spec_source_ref_1.io_external_secrets_v1beta1_ClusterExternalSecret_spec_externalSecretSpec_sourceRef_1(
                    generator_ref = kubernetes.client.models.io_external_secrets_v1beta1_cluster_external_secret_spec_external_secret_spec_source_ref_generator_ref.io_external_secrets_v1beta1_ClusterExternalSecret_spec_externalSecretSpec_sourceRef_generatorRef(
                        api_version = '0', 
                        kind = '0', 
                        name = '0', ), 
                    store_ref = kubernetes.client.models.io_external_secrets_v1alpha1_external_secret_spec_secret_store_ref.io_external_secrets_v1alpha1_ExternalSecret_spec_secretStoreRef(
                        kind = '0', 
                        name = '0', ), )
            )
        else :
            return IoExternalSecretsV1beta1ClusterExternalSecretSpecExternalSecretSpecDataFrom(
        )

    def testIoExternalSecretsV1beta1ClusterExternalSecretSpecExternalSecretSpecDataFrom(self):
        """Test IoExternalSecretsV1beta1ClusterExternalSecretSpecExternalSecretSpecDataFrom"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
