# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1.25.12
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import kubernetes.client
from kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_projected_sources import ComGrafanaMonitoringV1alpha1GrafanaAgentSpecProjectedSources  # noqa: E501
from kubernetes.client.rest import ApiException

class TestComGrafanaMonitoringV1alpha1GrafanaAgentSpecProjectedSources(unittest.TestCase):
    """ComGrafanaMonitoringV1alpha1GrafanaAgentSpecProjectedSources unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ComGrafanaMonitoringV1alpha1GrafanaAgentSpecProjectedSources
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_projected_sources.ComGrafanaMonitoringV1alpha1GrafanaAgentSpecProjectedSources()  # noqa: E501
        if include_optional :
            return ComGrafanaMonitoringV1alpha1GrafanaAgentSpecProjectedSources(
                config_map = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_projected_config_map.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_projected_configMap(
                    items = [
                        kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_config_map_items.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_configMap_items(
                            key = '0', 
                            mode = 56, 
                            path = '0', )
                        ], 
                    name = '0', 
                    optional = True, ), 
                downward_api = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_projected_downward_api.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_projected_downwardAPI(
                    items = [
                        kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_downward_api_items.com_coreos_monitoring_v1_Alertmanager_spec_downwardAPI_items(
                            field_ref = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_downward_api_field_ref.com_coreos_monitoring_v1_Alertmanager_spec_downwardAPI_fieldRef(
                                api_version = '0', 
                                field_path = '0', ), 
                            mode = 56, 
                            path = '0', 
                            resource_field_ref = kubernetes.client.models.com_coreos_monitoring_v1_alertmanager_spec_downward_api_resource_field_ref.com_coreos_monitoring_v1_Alertmanager_spec_downwardAPI_resourceFieldRef(
                                container_name = '0', 
                                divisor = kubernetes.client.models.divisor.divisor(), 
                                resource = '0', ), )
                        ], ), 
                secret = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_projected_secret.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_projected_secret(
                    items = [
                        kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_config_map_items.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_configMap_items(
                            key = '0', 
                            mode = 56, 
                            path = '0', )
                        ], 
                    name = '0', 
                    optional = True, ), 
                service_account_token = kubernetes.client.models.com_grafana_monitoring_v1alpha1_grafana_agent_spec_projected_service_account_token.com_grafana_monitoring_v1alpha1_GrafanaAgent_spec_projected_serviceAccountToken(
                    audience = '0', 
                    expiration_seconds = 56, 
                    path = '0', )
            )
        else :
            return ComGrafanaMonitoringV1alpha1GrafanaAgentSpecProjectedSources(
        )

    def testComGrafanaMonitoringV1alpha1GrafanaAgentSpecProjectedSources(self):
        """Test ComGrafanaMonitoringV1alpha1GrafanaAgentSpecProjectedSources"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
