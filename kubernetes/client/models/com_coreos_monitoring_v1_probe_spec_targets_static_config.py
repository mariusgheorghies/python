# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1.20.7
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from kubernetes.client.configuration import Configuration


class ComCoreosMonitoringV1ProbeSpecTargetsStaticConfig(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'labels': 'dict(str, str)',
        'relabeling_configs': 'list[ComCoreosMonitoringV1PodMonitorSpecMetricRelabelings]',
        'static': 'list[str]'
    }

    attribute_map = {
        'labels': 'labels',
        'relabeling_configs': 'relabelingConfigs',
        'static': 'static'
    }

    def __init__(self, labels=None, relabeling_configs=None, static=None, local_vars_configuration=None):  # noqa: E501
        """ComCoreosMonitoringV1ProbeSpecTargetsStaticConfig - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._labels = None
        self._relabeling_configs = None
        self._static = None
        self.discriminator = None

        if labels is not None:
            self.labels = labels
        if relabeling_configs is not None:
            self.relabeling_configs = relabeling_configs
        if static is not None:
            self.static = static

    @property
    def labels(self):
        """Gets the labels of this ComCoreosMonitoringV1ProbeSpecTargetsStaticConfig.  # noqa: E501

        Labels assigned to all metrics scraped from the targets.  # noqa: E501

        :return: The labels of this ComCoreosMonitoringV1ProbeSpecTargetsStaticConfig.  # noqa: E501
        :rtype: dict(str, str)
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this ComCoreosMonitoringV1ProbeSpecTargetsStaticConfig.

        Labels assigned to all metrics scraped from the targets.  # noqa: E501

        :param labels: The labels of this ComCoreosMonitoringV1ProbeSpecTargetsStaticConfig.  # noqa: E501
        :type: dict(str, str)
        """

        self._labels = labels

    @property
    def relabeling_configs(self):
        """Gets the relabeling_configs of this ComCoreosMonitoringV1ProbeSpecTargetsStaticConfig.  # noqa: E501

        RelabelConfigs to apply to samples before ingestion. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config  # noqa: E501

        :return: The relabeling_configs of this ComCoreosMonitoringV1ProbeSpecTargetsStaticConfig.  # noqa: E501
        :rtype: list[ComCoreosMonitoringV1PodMonitorSpecMetricRelabelings]
        """
        return self._relabeling_configs

    @relabeling_configs.setter
    def relabeling_configs(self, relabeling_configs):
        """Sets the relabeling_configs of this ComCoreosMonitoringV1ProbeSpecTargetsStaticConfig.

        RelabelConfigs to apply to samples before ingestion. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config  # noqa: E501

        :param relabeling_configs: The relabeling_configs of this ComCoreosMonitoringV1ProbeSpecTargetsStaticConfig.  # noqa: E501
        :type: list[ComCoreosMonitoringV1PodMonitorSpecMetricRelabelings]
        """

        self._relabeling_configs = relabeling_configs

    @property
    def static(self):
        """Gets the static of this ComCoreosMonitoringV1ProbeSpecTargetsStaticConfig.  # noqa: E501

        Targets is a list of URLs to probe using the configured prober.  # noqa: E501

        :return: The static of this ComCoreosMonitoringV1ProbeSpecTargetsStaticConfig.  # noqa: E501
        :rtype: list[str]
        """
        return self._static

    @static.setter
    def static(self, static):
        """Sets the static of this ComCoreosMonitoringV1ProbeSpecTargetsStaticConfig.

        Targets is a list of URLs to probe using the configured prober.  # noqa: E501

        :param static: The static of this ComCoreosMonitoringV1ProbeSpecTargetsStaticConfig.  # noqa: E501
        :type: list[str]
        """

        self._static = static

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ComCoreosMonitoringV1ProbeSpecTargetsStaticConfig):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, ComCoreosMonitoringV1ProbeSpecTargetsStaticConfig):
            return True

        return self.to_dict() != other.to_dict()
