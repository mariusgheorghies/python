# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1.20.7
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from kubernetes.client.configuration import Configuration


class IoXK8sClusterControlplaneV1alpha3AWSManagedControlPlaneStatusNetworkApiServerElbAttributes(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'cross_zone_load_balancing': 'bool',
        'idle_timeout': 'int'
    }

    attribute_map = {
        'cross_zone_load_balancing': 'crossZoneLoadBalancing',
        'idle_timeout': 'idleTimeout'
    }

    def __init__(self, cross_zone_load_balancing=None, idle_timeout=None, local_vars_configuration=None):  # noqa: E501
        """IoXK8sClusterControlplaneV1alpha3AWSManagedControlPlaneStatusNetworkApiServerElbAttributes - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._cross_zone_load_balancing = None
        self._idle_timeout = None
        self.discriminator = None

        if cross_zone_load_balancing is not None:
            self.cross_zone_load_balancing = cross_zone_load_balancing
        if idle_timeout is not None:
            self.idle_timeout = idle_timeout

    @property
    def cross_zone_load_balancing(self):
        """Gets the cross_zone_load_balancing of this IoXK8sClusterControlplaneV1alpha3AWSManagedControlPlaneStatusNetworkApiServerElbAttributes.  # noqa: E501

        CrossZoneLoadBalancing enables the classic load balancer load balancing.  # noqa: E501

        :return: The cross_zone_load_balancing of this IoXK8sClusterControlplaneV1alpha3AWSManagedControlPlaneStatusNetworkApiServerElbAttributes.  # noqa: E501
        :rtype: bool
        """
        return self._cross_zone_load_balancing

    @cross_zone_load_balancing.setter
    def cross_zone_load_balancing(self, cross_zone_load_balancing):
        """Sets the cross_zone_load_balancing of this IoXK8sClusterControlplaneV1alpha3AWSManagedControlPlaneStatusNetworkApiServerElbAttributes.

        CrossZoneLoadBalancing enables the classic load balancer load balancing.  # noqa: E501

        :param cross_zone_load_balancing: The cross_zone_load_balancing of this IoXK8sClusterControlplaneV1alpha3AWSManagedControlPlaneStatusNetworkApiServerElbAttributes.  # noqa: E501
        :type: bool
        """

        self._cross_zone_load_balancing = cross_zone_load_balancing

    @property
    def idle_timeout(self):
        """Gets the idle_timeout of this IoXK8sClusterControlplaneV1alpha3AWSManagedControlPlaneStatusNetworkApiServerElbAttributes.  # noqa: E501

        IdleTimeout is time that the connection is allowed to be idle (no data has been sent over the connection) before it is closed by the load balancer.  # noqa: E501

        :return: The idle_timeout of this IoXK8sClusterControlplaneV1alpha3AWSManagedControlPlaneStatusNetworkApiServerElbAttributes.  # noqa: E501
        :rtype: int
        """
        return self._idle_timeout

    @idle_timeout.setter
    def idle_timeout(self, idle_timeout):
        """Sets the idle_timeout of this IoXK8sClusterControlplaneV1alpha3AWSManagedControlPlaneStatusNetworkApiServerElbAttributes.

        IdleTimeout is time that the connection is allowed to be idle (no data has been sent over the connection) before it is closed by the load balancer.  # noqa: E501

        :param idle_timeout: The idle_timeout of this IoXK8sClusterControlplaneV1alpha3AWSManagedControlPlaneStatusNetworkApiServerElbAttributes.  # noqa: E501
        :type: int
        """

        self._idle_timeout = idle_timeout

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, IoXK8sClusterControlplaneV1alpha3AWSManagedControlPlaneStatusNetworkApiServerElbAttributes):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, IoXK8sClusterControlplaneV1alpha3AWSManagedControlPlaneStatusNetworkApiServerElbAttributes):
            return True

        return self.to_dict() != other.to_dict()
