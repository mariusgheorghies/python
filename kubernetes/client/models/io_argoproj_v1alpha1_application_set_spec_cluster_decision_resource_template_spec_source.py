# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1.25.12
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from kubernetes.client.configuration import Configuration


class IoArgoprojV1alpha1ApplicationSetSpecClusterDecisionResourceTemplateSpecSource(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'chart': 'str',
        'directory': 'IoArgoprojV1alpha1ApplicationSetSpecClusterDecisionResourceTemplateSpecSourceDirectory',
        'helm': 'IoArgoprojV1alpha1ApplicationSetSpecClusterDecisionResourceTemplateSpecSourceHelm',
        'kustomize': 'IoArgoprojV1alpha1ApplicationSetSpecClusterDecisionResourceTemplateSpecSourceKustomize',
        'path': 'str',
        'plugin': 'IoArgoprojV1alpha1ApplicationSetSpecClusterDecisionResourceTemplateSpecSourcePlugin',
        'ref': 'str',
        'repo_url': 'str',
        'target_revision': 'str'
    }

    attribute_map = {
        'chart': 'chart',
        'directory': 'directory',
        'helm': 'helm',
        'kustomize': 'kustomize',
        'path': 'path',
        'plugin': 'plugin',
        'ref': 'ref',
        'repo_url': 'repoURL',
        'target_revision': 'targetRevision'
    }

    def __init__(self, chart=None, directory=None, helm=None, kustomize=None, path=None, plugin=None, ref=None, repo_url=None, target_revision=None, local_vars_configuration=None):  # noqa: E501
        """IoArgoprojV1alpha1ApplicationSetSpecClusterDecisionResourceTemplateSpecSource - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._chart = None
        self._directory = None
        self._helm = None
        self._kustomize = None
        self._path = None
        self._plugin = None
        self._ref = None
        self._repo_url = None
        self._target_revision = None
        self.discriminator = None

        if chart is not None:
            self.chart = chart
        if directory is not None:
            self.directory = directory
        if helm is not None:
            self.helm = helm
        if kustomize is not None:
            self.kustomize = kustomize
        if path is not None:
            self.path = path
        if plugin is not None:
            self.plugin = plugin
        if ref is not None:
            self.ref = ref
        self.repo_url = repo_url
        if target_revision is not None:
            self.target_revision = target_revision

    @property
    def chart(self):
        """Gets the chart of this IoArgoprojV1alpha1ApplicationSetSpecClusterDecisionResourceTemplateSpecSource.  # noqa: E501


        :return: The chart of this IoArgoprojV1alpha1ApplicationSetSpecClusterDecisionResourceTemplateSpecSource.  # noqa: E501
        :rtype: str
        """
        return self._chart

    @chart.setter
    def chart(self, chart):
        """Sets the chart of this IoArgoprojV1alpha1ApplicationSetSpecClusterDecisionResourceTemplateSpecSource.


        :param chart: The chart of this IoArgoprojV1alpha1ApplicationSetSpecClusterDecisionResourceTemplateSpecSource.  # noqa: E501
        :type: str
        """

        self._chart = chart

    @property
    def directory(self):
        """Gets the directory of this IoArgoprojV1alpha1ApplicationSetSpecClusterDecisionResourceTemplateSpecSource.  # noqa: E501


        :return: The directory of this IoArgoprojV1alpha1ApplicationSetSpecClusterDecisionResourceTemplateSpecSource.  # noqa: E501
        :rtype: IoArgoprojV1alpha1ApplicationSetSpecClusterDecisionResourceTemplateSpecSourceDirectory
        """
        return self._directory

    @directory.setter
    def directory(self, directory):
        """Sets the directory of this IoArgoprojV1alpha1ApplicationSetSpecClusterDecisionResourceTemplateSpecSource.


        :param directory: The directory of this IoArgoprojV1alpha1ApplicationSetSpecClusterDecisionResourceTemplateSpecSource.  # noqa: E501
        :type: IoArgoprojV1alpha1ApplicationSetSpecClusterDecisionResourceTemplateSpecSourceDirectory
        """

        self._directory = directory

    @property
    def helm(self):
        """Gets the helm of this IoArgoprojV1alpha1ApplicationSetSpecClusterDecisionResourceTemplateSpecSource.  # noqa: E501


        :return: The helm of this IoArgoprojV1alpha1ApplicationSetSpecClusterDecisionResourceTemplateSpecSource.  # noqa: E501
        :rtype: IoArgoprojV1alpha1ApplicationSetSpecClusterDecisionResourceTemplateSpecSourceHelm
        """
        return self._helm

    @helm.setter
    def helm(self, helm):
        """Sets the helm of this IoArgoprojV1alpha1ApplicationSetSpecClusterDecisionResourceTemplateSpecSource.


        :param helm: The helm of this IoArgoprojV1alpha1ApplicationSetSpecClusterDecisionResourceTemplateSpecSource.  # noqa: E501
        :type: IoArgoprojV1alpha1ApplicationSetSpecClusterDecisionResourceTemplateSpecSourceHelm
        """

        self._helm = helm

    @property
    def kustomize(self):
        """Gets the kustomize of this IoArgoprojV1alpha1ApplicationSetSpecClusterDecisionResourceTemplateSpecSource.  # noqa: E501


        :return: The kustomize of this IoArgoprojV1alpha1ApplicationSetSpecClusterDecisionResourceTemplateSpecSource.  # noqa: E501
        :rtype: IoArgoprojV1alpha1ApplicationSetSpecClusterDecisionResourceTemplateSpecSourceKustomize
        """
        return self._kustomize

    @kustomize.setter
    def kustomize(self, kustomize):
        """Sets the kustomize of this IoArgoprojV1alpha1ApplicationSetSpecClusterDecisionResourceTemplateSpecSource.


        :param kustomize: The kustomize of this IoArgoprojV1alpha1ApplicationSetSpecClusterDecisionResourceTemplateSpecSource.  # noqa: E501
        :type: IoArgoprojV1alpha1ApplicationSetSpecClusterDecisionResourceTemplateSpecSourceKustomize
        """

        self._kustomize = kustomize

    @property
    def path(self):
        """Gets the path of this IoArgoprojV1alpha1ApplicationSetSpecClusterDecisionResourceTemplateSpecSource.  # noqa: E501


        :return: The path of this IoArgoprojV1alpha1ApplicationSetSpecClusterDecisionResourceTemplateSpecSource.  # noqa: E501
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this IoArgoprojV1alpha1ApplicationSetSpecClusterDecisionResourceTemplateSpecSource.


        :param path: The path of this IoArgoprojV1alpha1ApplicationSetSpecClusterDecisionResourceTemplateSpecSource.  # noqa: E501
        :type: str
        """

        self._path = path

    @property
    def plugin(self):
        """Gets the plugin of this IoArgoprojV1alpha1ApplicationSetSpecClusterDecisionResourceTemplateSpecSource.  # noqa: E501


        :return: The plugin of this IoArgoprojV1alpha1ApplicationSetSpecClusterDecisionResourceTemplateSpecSource.  # noqa: E501
        :rtype: IoArgoprojV1alpha1ApplicationSetSpecClusterDecisionResourceTemplateSpecSourcePlugin
        """
        return self._plugin

    @plugin.setter
    def plugin(self, plugin):
        """Sets the plugin of this IoArgoprojV1alpha1ApplicationSetSpecClusterDecisionResourceTemplateSpecSource.


        :param plugin: The plugin of this IoArgoprojV1alpha1ApplicationSetSpecClusterDecisionResourceTemplateSpecSource.  # noqa: E501
        :type: IoArgoprojV1alpha1ApplicationSetSpecClusterDecisionResourceTemplateSpecSourcePlugin
        """

        self._plugin = plugin

    @property
    def ref(self):
        """Gets the ref of this IoArgoprojV1alpha1ApplicationSetSpecClusterDecisionResourceTemplateSpecSource.  # noqa: E501


        :return: The ref of this IoArgoprojV1alpha1ApplicationSetSpecClusterDecisionResourceTemplateSpecSource.  # noqa: E501
        :rtype: str
        """
        return self._ref

    @ref.setter
    def ref(self, ref):
        """Sets the ref of this IoArgoprojV1alpha1ApplicationSetSpecClusterDecisionResourceTemplateSpecSource.


        :param ref: The ref of this IoArgoprojV1alpha1ApplicationSetSpecClusterDecisionResourceTemplateSpecSource.  # noqa: E501
        :type: str
        """

        self._ref = ref

    @property
    def repo_url(self):
        """Gets the repo_url of this IoArgoprojV1alpha1ApplicationSetSpecClusterDecisionResourceTemplateSpecSource.  # noqa: E501


        :return: The repo_url of this IoArgoprojV1alpha1ApplicationSetSpecClusterDecisionResourceTemplateSpecSource.  # noqa: E501
        :rtype: str
        """
        return self._repo_url

    @repo_url.setter
    def repo_url(self, repo_url):
        """Sets the repo_url of this IoArgoprojV1alpha1ApplicationSetSpecClusterDecisionResourceTemplateSpecSource.


        :param repo_url: The repo_url of this IoArgoprojV1alpha1ApplicationSetSpecClusterDecisionResourceTemplateSpecSource.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and repo_url is None:  # noqa: E501
            raise ValueError("Invalid value for `repo_url`, must not be `None`")  # noqa: E501

        self._repo_url = repo_url

    @property
    def target_revision(self):
        """Gets the target_revision of this IoArgoprojV1alpha1ApplicationSetSpecClusterDecisionResourceTemplateSpecSource.  # noqa: E501


        :return: The target_revision of this IoArgoprojV1alpha1ApplicationSetSpecClusterDecisionResourceTemplateSpecSource.  # noqa: E501
        :rtype: str
        """
        return self._target_revision

    @target_revision.setter
    def target_revision(self, target_revision):
        """Sets the target_revision of this IoArgoprojV1alpha1ApplicationSetSpecClusterDecisionResourceTemplateSpecSource.


        :param target_revision: The target_revision of this IoArgoprojV1alpha1ApplicationSetSpecClusterDecisionResourceTemplateSpecSource.  # noqa: E501
        :type: str
        """

        self._target_revision = target_revision

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, IoArgoprojV1alpha1ApplicationSetSpecClusterDecisionResourceTemplateSpecSource):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, IoArgoprojV1alpha1ApplicationSetSpecClusterDecisionResourceTemplateSpecSource):
            return True

        return self.to_dict() != other.to_dict()
