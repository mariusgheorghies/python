# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1.25.12
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from kubernetes.client.configuration import Configuration


class AwsK8sServicesEc2V1alpha1ElasticIPAddressSpec(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'address': 'str',
        'customer_owned_i_pv4_pool': 'str',
        'network_border_group': 'str',
        'public_i_pv4_pool': 'str',
        'tags': 'list[AwsK8sServicesEc2V1alpha1DHCPOptionsSpecTags]'
    }

    attribute_map = {
        'address': 'address',
        'customer_owned_i_pv4_pool': 'customerOwnedIPv4Pool',
        'network_border_group': 'networkBorderGroup',
        'public_i_pv4_pool': 'publicIPv4Pool',
        'tags': 'tags'
    }

    def __init__(self, address=None, customer_owned_i_pv4_pool=None, network_border_group=None, public_i_pv4_pool=None, tags=None, local_vars_configuration=None):  # noqa: E501
        """AwsK8sServicesEc2V1alpha1ElasticIPAddressSpec - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._address = None
        self._customer_owned_i_pv4_pool = None
        self._network_border_group = None
        self._public_i_pv4_pool = None
        self._tags = None
        self.discriminator = None

        if address is not None:
            self.address = address
        if customer_owned_i_pv4_pool is not None:
            self.customer_owned_i_pv4_pool = customer_owned_i_pv4_pool
        if network_border_group is not None:
            self.network_border_group = network_border_group
        if public_i_pv4_pool is not None:
            self.public_i_pv4_pool = public_i_pv4_pool
        if tags is not None:
            self.tags = tags

    @property
    def address(self):
        """Gets the address of this AwsK8sServicesEc2V1alpha1ElasticIPAddressSpec.  # noqa: E501

        [EC2-VPC] The Elastic IP address to recover or an IPv4 address from an address pool.  # noqa: E501

        :return: The address of this AwsK8sServicesEc2V1alpha1ElasticIPAddressSpec.  # noqa: E501
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this AwsK8sServicesEc2V1alpha1ElasticIPAddressSpec.

        [EC2-VPC] The Elastic IP address to recover or an IPv4 address from an address pool.  # noqa: E501

        :param address: The address of this AwsK8sServicesEc2V1alpha1ElasticIPAddressSpec.  # noqa: E501
        :type: str
        """

        self._address = address

    @property
    def customer_owned_i_pv4_pool(self):
        """Gets the customer_owned_i_pv4_pool of this AwsK8sServicesEc2V1alpha1ElasticIPAddressSpec.  # noqa: E501

        The ID of a customer-owned address pool. Use this parameter to let Amazon EC2 select an address from the address pool. Alternatively, specify a specific address from the address pool.  # noqa: E501

        :return: The customer_owned_i_pv4_pool of this AwsK8sServicesEc2V1alpha1ElasticIPAddressSpec.  # noqa: E501
        :rtype: str
        """
        return self._customer_owned_i_pv4_pool

    @customer_owned_i_pv4_pool.setter
    def customer_owned_i_pv4_pool(self, customer_owned_i_pv4_pool):
        """Sets the customer_owned_i_pv4_pool of this AwsK8sServicesEc2V1alpha1ElasticIPAddressSpec.

        The ID of a customer-owned address pool. Use this parameter to let Amazon EC2 select an address from the address pool. Alternatively, specify a specific address from the address pool.  # noqa: E501

        :param customer_owned_i_pv4_pool: The customer_owned_i_pv4_pool of this AwsK8sServicesEc2V1alpha1ElasticIPAddressSpec.  # noqa: E501
        :type: str
        """

        self._customer_owned_i_pv4_pool = customer_owned_i_pv4_pool

    @property
    def network_border_group(self):
        """Gets the network_border_group of this AwsK8sServicesEc2V1alpha1ElasticIPAddressSpec.  # noqa: E501

        A unique set of Availability Zones, Local Zones, or Wavelength Zones from which Amazon Web Services advertises IP addresses. Use this parameter to limit the IP address to this location. IP addresses cannot move between network border groups.   Use DescribeAvailabilityZones (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeAvailabilityZones.html) to view the network border groups.   You cannot use a network border group with EC2 Classic. If you attempt this operation on EC2 Classic, you receive an InvalidParameterCombination error.  # noqa: E501

        :return: The network_border_group of this AwsK8sServicesEc2V1alpha1ElasticIPAddressSpec.  # noqa: E501
        :rtype: str
        """
        return self._network_border_group

    @network_border_group.setter
    def network_border_group(self, network_border_group):
        """Sets the network_border_group of this AwsK8sServicesEc2V1alpha1ElasticIPAddressSpec.

        A unique set of Availability Zones, Local Zones, or Wavelength Zones from which Amazon Web Services advertises IP addresses. Use this parameter to limit the IP address to this location. IP addresses cannot move between network border groups.   Use DescribeAvailabilityZones (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeAvailabilityZones.html) to view the network border groups.   You cannot use a network border group with EC2 Classic. If you attempt this operation on EC2 Classic, you receive an InvalidParameterCombination error.  # noqa: E501

        :param network_border_group: The network_border_group of this AwsK8sServicesEc2V1alpha1ElasticIPAddressSpec.  # noqa: E501
        :type: str
        """

        self._network_border_group = network_border_group

    @property
    def public_i_pv4_pool(self):
        """Gets the public_i_pv4_pool of this AwsK8sServicesEc2V1alpha1ElasticIPAddressSpec.  # noqa: E501

        The ID of an address pool that you own. Use this parameter to let Amazon EC2 select an address from the address pool. To specify a specific address from the address pool, use the Address parameter instead.  # noqa: E501

        :return: The public_i_pv4_pool of this AwsK8sServicesEc2V1alpha1ElasticIPAddressSpec.  # noqa: E501
        :rtype: str
        """
        return self._public_i_pv4_pool

    @public_i_pv4_pool.setter
    def public_i_pv4_pool(self, public_i_pv4_pool):
        """Sets the public_i_pv4_pool of this AwsK8sServicesEc2V1alpha1ElasticIPAddressSpec.

        The ID of an address pool that you own. Use this parameter to let Amazon EC2 select an address from the address pool. To specify a specific address from the address pool, use the Address parameter instead.  # noqa: E501

        :param public_i_pv4_pool: The public_i_pv4_pool of this AwsK8sServicesEc2V1alpha1ElasticIPAddressSpec.  # noqa: E501
        :type: str
        """

        self._public_i_pv4_pool = public_i_pv4_pool

    @property
    def tags(self):
        """Gets the tags of this AwsK8sServicesEc2V1alpha1ElasticIPAddressSpec.  # noqa: E501

        The tags. The value parameter is required, but if you don't want the tag to have a value, specify the parameter with no value, and we set the value to an empty string.  # noqa: E501

        :return: The tags of this AwsK8sServicesEc2V1alpha1ElasticIPAddressSpec.  # noqa: E501
        :rtype: list[AwsK8sServicesEc2V1alpha1DHCPOptionsSpecTags]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this AwsK8sServicesEc2V1alpha1ElasticIPAddressSpec.

        The tags. The value parameter is required, but if you don't want the tag to have a value, specify the parameter with no value, and we set the value to an empty string.  # noqa: E501

        :param tags: The tags of this AwsK8sServicesEc2V1alpha1ElasticIPAddressSpec.  # noqa: E501
        :type: list[AwsK8sServicesEc2V1alpha1DHCPOptionsSpecTags]
        """

        self._tags = tags

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AwsK8sServicesEc2V1alpha1ElasticIPAddressSpec):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, AwsK8sServicesEc2V1alpha1ElasticIPAddressSpec):
            return True

        return self.to_dict() != other.to_dict()
