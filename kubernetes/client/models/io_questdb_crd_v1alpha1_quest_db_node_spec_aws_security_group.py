# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1.25.12
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from kubernetes.client.configuration import Configuration


class IoQuestdbCrdV1alpha1QuestDBNodeSpecAwsSecurityGroup(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'allowed_cidrs': 'list[str]',
        'ilp_node_port': 'int',
        'psql_node_port': 'int'
    }

    attribute_map = {
        'allowed_cidrs': 'allowedCidrs',
        'ilp_node_port': 'ilpNodePort',
        'psql_node_port': 'psqlNodePort'
    }

    def __init__(self, allowed_cidrs=None, ilp_node_port=None, psql_node_port=None, local_vars_configuration=None):  # noqa: E501
        """IoQuestdbCrdV1alpha1QuestDBNodeSpecAwsSecurityGroup - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._allowed_cidrs = None
        self._ilp_node_port = None
        self._psql_node_port = None
        self.discriminator = None

        if allowed_cidrs is not None:
            self.allowed_cidrs = allowed_cidrs
        if ilp_node_port is not None:
            self.ilp_node_port = ilp_node_port
        if psql_node_port is not None:
            self.psql_node_port = psql_node_port

    @property
    def allowed_cidrs(self):
        """Gets the allowed_cidrs of this IoQuestdbCrdV1alpha1QuestDBNodeSpecAwsSecurityGroup.  # noqa: E501


        :return: The allowed_cidrs of this IoQuestdbCrdV1alpha1QuestDBNodeSpecAwsSecurityGroup.  # noqa: E501
        :rtype: list[str]
        """
        return self._allowed_cidrs

    @allowed_cidrs.setter
    def allowed_cidrs(self, allowed_cidrs):
        """Sets the allowed_cidrs of this IoQuestdbCrdV1alpha1QuestDBNodeSpecAwsSecurityGroup.


        :param allowed_cidrs: The allowed_cidrs of this IoQuestdbCrdV1alpha1QuestDBNodeSpecAwsSecurityGroup.  # noqa: E501
        :type: list[str]
        """

        self._allowed_cidrs = allowed_cidrs

    @property
    def ilp_node_port(self):
        """Gets the ilp_node_port of this IoQuestdbCrdV1alpha1QuestDBNodeSpecAwsSecurityGroup.  # noqa: E501


        :return: The ilp_node_port of this IoQuestdbCrdV1alpha1QuestDBNodeSpecAwsSecurityGroup.  # noqa: E501
        :rtype: int
        """
        return self._ilp_node_port

    @ilp_node_port.setter
    def ilp_node_port(self, ilp_node_port):
        """Sets the ilp_node_port of this IoQuestdbCrdV1alpha1QuestDBNodeSpecAwsSecurityGroup.


        :param ilp_node_port: The ilp_node_port of this IoQuestdbCrdV1alpha1QuestDBNodeSpecAwsSecurityGroup.  # noqa: E501
        :type: int
        """

        self._ilp_node_port = ilp_node_port

    @property
    def psql_node_port(self):
        """Gets the psql_node_port of this IoQuestdbCrdV1alpha1QuestDBNodeSpecAwsSecurityGroup.  # noqa: E501


        :return: The psql_node_port of this IoQuestdbCrdV1alpha1QuestDBNodeSpecAwsSecurityGroup.  # noqa: E501
        :rtype: int
        """
        return self._psql_node_port

    @psql_node_port.setter
    def psql_node_port(self, psql_node_port):
        """Sets the psql_node_port of this IoQuestdbCrdV1alpha1QuestDBNodeSpecAwsSecurityGroup.


        :param psql_node_port: The psql_node_port of this IoQuestdbCrdV1alpha1QuestDBNodeSpecAwsSecurityGroup.  # noqa: E501
        :type: int
        """

        self._psql_node_port = psql_node_port

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, IoQuestdbCrdV1alpha1QuestDBNodeSpecAwsSecurityGroup):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, IoQuestdbCrdV1alpha1QuestDBNodeSpecAwsSecurityGroup):
            return True

        return self.to_dict() != other.to_dict()
