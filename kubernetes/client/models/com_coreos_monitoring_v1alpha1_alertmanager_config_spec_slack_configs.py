# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1.20.7
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from kubernetes.client.configuration import Configuration


class ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'actions': 'list[ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecActions]',
        'api_url': 'ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecApiURL',
        'callback_id': 'str',
        'channel': 'str',
        'color': 'str',
        'fallback': 'str',
        'fields': 'list[ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecFields]',
        'footer': 'str',
        'http_config': 'ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecHttpConfig',
        'icon_emoji': 'str',
        'icon_url': 'str',
        'image_url': 'str',
        'link_names': 'bool',
        'mrkdwn_in': 'list[str]',
        'pretext': 'str',
        'send_resolved': 'bool',
        'short_fields': 'bool',
        'text': 'str',
        'thumb_url': 'str',
        'title': 'str',
        'title_link': 'str',
        'username': 'str'
    }

    attribute_map = {
        'actions': 'actions',
        'api_url': 'apiURL',
        'callback_id': 'callbackId',
        'channel': 'channel',
        'color': 'color',
        'fallback': 'fallback',
        'fields': 'fields',
        'footer': 'footer',
        'http_config': 'httpConfig',
        'icon_emoji': 'iconEmoji',
        'icon_url': 'iconURL',
        'image_url': 'imageURL',
        'link_names': 'linkNames',
        'mrkdwn_in': 'mrkdwnIn',
        'pretext': 'pretext',
        'send_resolved': 'sendResolved',
        'short_fields': 'shortFields',
        'text': 'text',
        'thumb_url': 'thumbURL',
        'title': 'title',
        'title_link': 'titleLink',
        'username': 'username'
    }

    def __init__(self, actions=None, api_url=None, callback_id=None, channel=None, color=None, fallback=None, fields=None, footer=None, http_config=None, icon_emoji=None, icon_url=None, image_url=None, link_names=None, mrkdwn_in=None, pretext=None, send_resolved=None, short_fields=None, text=None, thumb_url=None, title=None, title_link=None, username=None, local_vars_configuration=None):  # noqa: E501
        """ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._actions = None
        self._api_url = None
        self._callback_id = None
        self._channel = None
        self._color = None
        self._fallback = None
        self._fields = None
        self._footer = None
        self._http_config = None
        self._icon_emoji = None
        self._icon_url = None
        self._image_url = None
        self._link_names = None
        self._mrkdwn_in = None
        self._pretext = None
        self._send_resolved = None
        self._short_fields = None
        self._text = None
        self._thumb_url = None
        self._title = None
        self._title_link = None
        self._username = None
        self.discriminator = None

        if actions is not None:
            self.actions = actions
        if api_url is not None:
            self.api_url = api_url
        if callback_id is not None:
            self.callback_id = callback_id
        if channel is not None:
            self.channel = channel
        if color is not None:
            self.color = color
        if fallback is not None:
            self.fallback = fallback
        if fields is not None:
            self.fields = fields
        if footer is not None:
            self.footer = footer
        if http_config is not None:
            self.http_config = http_config
        if icon_emoji is not None:
            self.icon_emoji = icon_emoji
        if icon_url is not None:
            self.icon_url = icon_url
        if image_url is not None:
            self.image_url = image_url
        if link_names is not None:
            self.link_names = link_names
        if mrkdwn_in is not None:
            self.mrkdwn_in = mrkdwn_in
        if pretext is not None:
            self.pretext = pretext
        if send_resolved is not None:
            self.send_resolved = send_resolved
        if short_fields is not None:
            self.short_fields = short_fields
        if text is not None:
            self.text = text
        if thumb_url is not None:
            self.thumb_url = thumb_url
        if title is not None:
            self.title = title
        if title_link is not None:
            self.title_link = title_link
        if username is not None:
            self.username = username

    @property
    def actions(self):
        """Gets the actions of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501

        A list of Slack actions that are sent with each notification.  # noqa: E501

        :return: The actions of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501
        :rtype: list[ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecActions]
        """
        return self._actions

    @actions.setter
    def actions(self, actions):
        """Sets the actions of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.

        A list of Slack actions that are sent with each notification.  # noqa: E501

        :param actions: The actions of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501
        :type: list[ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecActions]
        """

        self._actions = actions

    @property
    def api_url(self):
        """Gets the api_url of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501


        :return: The api_url of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501
        :rtype: ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecApiURL
        """
        return self._api_url

    @api_url.setter
    def api_url(self, api_url):
        """Sets the api_url of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.


        :param api_url: The api_url of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501
        :type: ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecApiURL
        """

        self._api_url = api_url

    @property
    def callback_id(self):
        """Gets the callback_id of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501


        :return: The callback_id of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501
        :rtype: str
        """
        return self._callback_id

    @callback_id.setter
    def callback_id(self, callback_id):
        """Sets the callback_id of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.


        :param callback_id: The callback_id of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501
        :type: str
        """

        self._callback_id = callback_id

    @property
    def channel(self):
        """Gets the channel of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501

        The channel or user to send notifications to.  # noqa: E501

        :return: The channel of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501
        :rtype: str
        """
        return self._channel

    @channel.setter
    def channel(self, channel):
        """Sets the channel of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.

        The channel or user to send notifications to.  # noqa: E501

        :param channel: The channel of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501
        :type: str
        """

        self._channel = channel

    @property
    def color(self):
        """Gets the color of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501


        :return: The color of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501
        :rtype: str
        """
        return self._color

    @color.setter
    def color(self, color):
        """Sets the color of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.


        :param color: The color of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501
        :type: str
        """

        self._color = color

    @property
    def fallback(self):
        """Gets the fallback of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501


        :return: The fallback of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501
        :rtype: str
        """
        return self._fallback

    @fallback.setter
    def fallback(self, fallback):
        """Sets the fallback of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.


        :param fallback: The fallback of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501
        :type: str
        """

        self._fallback = fallback

    @property
    def fields(self):
        """Gets the fields of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501

        A list of Slack fields that are sent with each notification.  # noqa: E501

        :return: The fields of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501
        :rtype: list[ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecFields]
        """
        return self._fields

    @fields.setter
    def fields(self, fields):
        """Sets the fields of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.

        A list of Slack fields that are sent with each notification.  # noqa: E501

        :param fields: The fields of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501
        :type: list[ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecFields]
        """

        self._fields = fields

    @property
    def footer(self):
        """Gets the footer of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501


        :return: The footer of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501
        :rtype: str
        """
        return self._footer

    @footer.setter
    def footer(self, footer):
        """Sets the footer of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.


        :param footer: The footer of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501
        :type: str
        """

        self._footer = footer

    @property
    def http_config(self):
        """Gets the http_config of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501


        :return: The http_config of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501
        :rtype: ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecHttpConfig
        """
        return self._http_config

    @http_config.setter
    def http_config(self, http_config):
        """Sets the http_config of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.


        :param http_config: The http_config of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501
        :type: ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecHttpConfig
        """

        self._http_config = http_config

    @property
    def icon_emoji(self):
        """Gets the icon_emoji of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501


        :return: The icon_emoji of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501
        :rtype: str
        """
        return self._icon_emoji

    @icon_emoji.setter
    def icon_emoji(self, icon_emoji):
        """Sets the icon_emoji of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.


        :param icon_emoji: The icon_emoji of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501
        :type: str
        """

        self._icon_emoji = icon_emoji

    @property
    def icon_url(self):
        """Gets the icon_url of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501


        :return: The icon_url of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501
        :rtype: str
        """
        return self._icon_url

    @icon_url.setter
    def icon_url(self, icon_url):
        """Sets the icon_url of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.


        :param icon_url: The icon_url of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501
        :type: str
        """

        self._icon_url = icon_url

    @property
    def image_url(self):
        """Gets the image_url of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501


        :return: The image_url of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501
        :rtype: str
        """
        return self._image_url

    @image_url.setter
    def image_url(self, image_url):
        """Sets the image_url of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.


        :param image_url: The image_url of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501
        :type: str
        """

        self._image_url = image_url

    @property
    def link_names(self):
        """Gets the link_names of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501


        :return: The link_names of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501
        :rtype: bool
        """
        return self._link_names

    @link_names.setter
    def link_names(self, link_names):
        """Sets the link_names of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.


        :param link_names: The link_names of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501
        :type: bool
        """

        self._link_names = link_names

    @property
    def mrkdwn_in(self):
        """Gets the mrkdwn_in of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501


        :return: The mrkdwn_in of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501
        :rtype: list[str]
        """
        return self._mrkdwn_in

    @mrkdwn_in.setter
    def mrkdwn_in(self, mrkdwn_in):
        """Sets the mrkdwn_in of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.


        :param mrkdwn_in: The mrkdwn_in of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501
        :type: list[str]
        """

        self._mrkdwn_in = mrkdwn_in

    @property
    def pretext(self):
        """Gets the pretext of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501


        :return: The pretext of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501
        :rtype: str
        """
        return self._pretext

    @pretext.setter
    def pretext(self, pretext):
        """Sets the pretext of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.


        :param pretext: The pretext of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501
        :type: str
        """

        self._pretext = pretext

    @property
    def send_resolved(self):
        """Gets the send_resolved of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501

        Whether or not to notify about resolved alerts.  # noqa: E501

        :return: The send_resolved of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501
        :rtype: bool
        """
        return self._send_resolved

    @send_resolved.setter
    def send_resolved(self, send_resolved):
        """Sets the send_resolved of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.

        Whether or not to notify about resolved alerts.  # noqa: E501

        :param send_resolved: The send_resolved of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501
        :type: bool
        """

        self._send_resolved = send_resolved

    @property
    def short_fields(self):
        """Gets the short_fields of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501


        :return: The short_fields of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501
        :rtype: bool
        """
        return self._short_fields

    @short_fields.setter
    def short_fields(self, short_fields):
        """Sets the short_fields of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.


        :param short_fields: The short_fields of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501
        :type: bool
        """

        self._short_fields = short_fields

    @property
    def text(self):
        """Gets the text of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501


        :return: The text of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.


        :param text: The text of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501
        :type: str
        """

        self._text = text

    @property
    def thumb_url(self):
        """Gets the thumb_url of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501


        :return: The thumb_url of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501
        :rtype: str
        """
        return self._thumb_url

    @thumb_url.setter
    def thumb_url(self, thumb_url):
        """Sets the thumb_url of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.


        :param thumb_url: The thumb_url of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501
        :type: str
        """

        self._thumb_url = thumb_url

    @property
    def title(self):
        """Gets the title of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501


        :return: The title of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.


        :param title: The title of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501
        :type: str
        """

        self._title = title

    @property
    def title_link(self):
        """Gets the title_link of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501


        :return: The title_link of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501
        :rtype: str
        """
        return self._title_link

    @title_link.setter
    def title_link(self, title_link):
        """Sets the title_link of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.


        :param title_link: The title_link of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501
        :type: str
        """

        self._title_link = title_link

    @property
    def username(self):
        """Gets the username of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501


        :return: The username of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.


        :param username: The username of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs.  # noqa: E501
        :type: str
        """

        self._username = username

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSlackConfigs):
            return True

        return self.to_dict() != other.to_dict()
