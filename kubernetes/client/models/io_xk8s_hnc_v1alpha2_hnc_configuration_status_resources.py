# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1.20.7
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from kubernetes.client.configuration import Configuration


class IoXK8sHncV1alpha2HNCConfigurationStatusResources(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'group': 'str',
        'mode': 'str',
        'num_propagated_objects': 'int',
        'num_source_objects': 'int',
        'resource': 'str',
        'version': 'str'
    }

    attribute_map = {
        'group': 'group',
        'mode': 'mode',
        'num_propagated_objects': 'numPropagatedObjects',
        'num_source_objects': 'numSourceObjects',
        'resource': 'resource',
        'version': 'version'
    }

    def __init__(self, group=None, mode=None, num_propagated_objects=None, num_source_objects=None, resource=None, version=None, local_vars_configuration=None):  # noqa: E501
        """IoXK8sHncV1alpha2HNCConfigurationStatusResources - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._group = None
        self._mode = None
        self._num_propagated_objects = None
        self._num_source_objects = None
        self._resource = None
        self._version = None
        self.discriminator = None

        self.group = group
        if mode is not None:
            self.mode = mode
        if num_propagated_objects is not None:
            self.num_propagated_objects = num_propagated_objects
        if num_source_objects is not None:
            self.num_source_objects = num_source_objects
        self.resource = resource
        self.version = version

    @property
    def group(self):
        """Gets the group of this IoXK8sHncV1alpha2HNCConfigurationStatusResources.  # noqa: E501

        The API group of the resource being synchronized.  # noqa: E501

        :return: The group of this IoXK8sHncV1alpha2HNCConfigurationStatusResources.  # noqa: E501
        :rtype: str
        """
        return self._group

    @group.setter
    def group(self, group):
        """Sets the group of this IoXK8sHncV1alpha2HNCConfigurationStatusResources.

        The API group of the resource being synchronized.  # noqa: E501

        :param group: The group of this IoXK8sHncV1alpha2HNCConfigurationStatusResources.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and group is None:  # noqa: E501
            raise ValueError("Invalid value for `group`, must not be `None`")  # noqa: E501

        self._group = group

    @property
    def mode(self):
        """Gets the mode of this IoXK8sHncV1alpha2HNCConfigurationStatusResources.  # noqa: E501

        Mode describes the synchronization mode of the kind. Typically, it will be the same as the mode in the spec, except when the reconciler has fallen behind or for resources with an enforced default synchronization mode, such as RBAC objects.  # noqa: E501

        :return: The mode of this IoXK8sHncV1alpha2HNCConfigurationStatusResources.  # noqa: E501
        :rtype: str
        """
        return self._mode

    @mode.setter
    def mode(self, mode):
        """Sets the mode of this IoXK8sHncV1alpha2HNCConfigurationStatusResources.

        Mode describes the synchronization mode of the kind. Typically, it will be the same as the mode in the spec, except when the reconciler has fallen behind or for resources with an enforced default synchronization mode, such as RBAC objects.  # noqa: E501

        :param mode: The mode of this IoXK8sHncV1alpha2HNCConfigurationStatusResources.  # noqa: E501
        :type: str
        """

        self._mode = mode

    @property
    def num_propagated_objects(self):
        """Gets the num_propagated_objects of this IoXK8sHncV1alpha2HNCConfigurationStatusResources.  # noqa: E501

        Tracks the number of objects that are being propagated to descendant namespaces. The propagated objects are created by HNC.  # noqa: E501

        :return: The num_propagated_objects of this IoXK8sHncV1alpha2HNCConfigurationStatusResources.  # noqa: E501
        :rtype: int
        """
        return self._num_propagated_objects

    @num_propagated_objects.setter
    def num_propagated_objects(self, num_propagated_objects):
        """Sets the num_propagated_objects of this IoXK8sHncV1alpha2HNCConfigurationStatusResources.

        Tracks the number of objects that are being propagated to descendant namespaces. The propagated objects are created by HNC.  # noqa: E501

        :param num_propagated_objects: The num_propagated_objects of this IoXK8sHncV1alpha2HNCConfigurationStatusResources.  # noqa: E501
        :type: int
        """
        if (self.local_vars_configuration.client_side_validation and
                num_propagated_objects is not None and num_propagated_objects < 0):  # noqa: E501
            raise ValueError("Invalid value for `num_propagated_objects`, must be a value greater than or equal to `0`")  # noqa: E501

        self._num_propagated_objects = num_propagated_objects

    @property
    def num_source_objects(self):
        """Gets the num_source_objects of this IoXK8sHncV1alpha2HNCConfigurationStatusResources.  # noqa: E501

        Tracks the number of objects that are created by users.  # noqa: E501

        :return: The num_source_objects of this IoXK8sHncV1alpha2HNCConfigurationStatusResources.  # noqa: E501
        :rtype: int
        """
        return self._num_source_objects

    @num_source_objects.setter
    def num_source_objects(self, num_source_objects):
        """Sets the num_source_objects of this IoXK8sHncV1alpha2HNCConfigurationStatusResources.

        Tracks the number of objects that are created by users.  # noqa: E501

        :param num_source_objects: The num_source_objects of this IoXK8sHncV1alpha2HNCConfigurationStatusResources.  # noqa: E501
        :type: int
        """
        if (self.local_vars_configuration.client_side_validation and
                num_source_objects is not None and num_source_objects < 0):  # noqa: E501
            raise ValueError("Invalid value for `num_source_objects`, must be a value greater than or equal to `0`")  # noqa: E501

        self._num_source_objects = num_source_objects

    @property
    def resource(self):
        """Gets the resource of this IoXK8sHncV1alpha2HNCConfigurationStatusResources.  # noqa: E501

        The resource being synchronized.  # noqa: E501

        :return: The resource of this IoXK8sHncV1alpha2HNCConfigurationStatusResources.  # noqa: E501
        :rtype: str
        """
        return self._resource

    @resource.setter
    def resource(self, resource):
        """Sets the resource of this IoXK8sHncV1alpha2HNCConfigurationStatusResources.

        The resource being synchronized.  # noqa: E501

        :param resource: The resource of this IoXK8sHncV1alpha2HNCConfigurationStatusResources.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and resource is None:  # noqa: E501
            raise ValueError("Invalid value for `resource`, must not be `None`")  # noqa: E501

        self._resource = resource

    @property
    def version(self):
        """Gets the version of this IoXK8sHncV1alpha2HNCConfigurationStatusResources.  # noqa: E501

        The API version used by HNC when propagating this resource.  # noqa: E501

        :return: The version of this IoXK8sHncV1alpha2HNCConfigurationStatusResources.  # noqa: E501
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this IoXK8sHncV1alpha2HNCConfigurationStatusResources.

        The API version used by HNC when propagating this resource.  # noqa: E501

        :param version: The version of this IoXK8sHncV1alpha2HNCConfigurationStatusResources.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and version is None:  # noqa: E501
            raise ValueError("Invalid value for `version`, must not be `None`")  # noqa: E501

        self._version = version

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, IoXK8sHncV1alpha2HNCConfigurationStatusResources):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, IoXK8sHncV1alpha2HNCConfigurationStatusResources):
            return True

        return self.to_dict() != other.to_dict()
