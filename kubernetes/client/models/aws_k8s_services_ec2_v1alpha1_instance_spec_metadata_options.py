# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1.25.12
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from kubernetes.client.configuration import Configuration


class AwsK8sServicesEc2V1alpha1InstanceSpecMetadataOptions(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'http_endpoint': 'str',
        'http_protocol_i_pv6': 'str',
        'http_put_response_hop_limit': 'int',
        'http_tokens': 'str',
        'instance_metadata_tags': 'str'
    }

    attribute_map = {
        'http_endpoint': 'httpEndpoint',
        'http_protocol_i_pv6': 'httpProtocolIPv6',
        'http_put_response_hop_limit': 'httpPutResponseHopLimit',
        'http_tokens': 'httpTokens',
        'instance_metadata_tags': 'instanceMetadataTags'
    }

    def __init__(self, http_endpoint=None, http_protocol_i_pv6=None, http_put_response_hop_limit=None, http_tokens=None, instance_metadata_tags=None, local_vars_configuration=None):  # noqa: E501
        """AwsK8sServicesEc2V1alpha1InstanceSpecMetadataOptions - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._http_endpoint = None
        self._http_protocol_i_pv6 = None
        self._http_put_response_hop_limit = None
        self._http_tokens = None
        self._instance_metadata_tags = None
        self.discriminator = None

        if http_endpoint is not None:
            self.http_endpoint = http_endpoint
        if http_protocol_i_pv6 is not None:
            self.http_protocol_i_pv6 = http_protocol_i_pv6
        if http_put_response_hop_limit is not None:
            self.http_put_response_hop_limit = http_put_response_hop_limit
        if http_tokens is not None:
            self.http_tokens = http_tokens
        if instance_metadata_tags is not None:
            self.instance_metadata_tags = instance_metadata_tags

    @property
    def http_endpoint(self):
        """Gets the http_endpoint of this AwsK8sServicesEc2V1alpha1InstanceSpecMetadataOptions.  # noqa: E501


        :return: The http_endpoint of this AwsK8sServicesEc2V1alpha1InstanceSpecMetadataOptions.  # noqa: E501
        :rtype: str
        """
        return self._http_endpoint

    @http_endpoint.setter
    def http_endpoint(self, http_endpoint):
        """Sets the http_endpoint of this AwsK8sServicesEc2V1alpha1InstanceSpecMetadataOptions.


        :param http_endpoint: The http_endpoint of this AwsK8sServicesEc2V1alpha1InstanceSpecMetadataOptions.  # noqa: E501
        :type: str
        """

        self._http_endpoint = http_endpoint

    @property
    def http_protocol_i_pv6(self):
        """Gets the http_protocol_i_pv6 of this AwsK8sServicesEc2V1alpha1InstanceSpecMetadataOptions.  # noqa: E501


        :return: The http_protocol_i_pv6 of this AwsK8sServicesEc2V1alpha1InstanceSpecMetadataOptions.  # noqa: E501
        :rtype: str
        """
        return self._http_protocol_i_pv6

    @http_protocol_i_pv6.setter
    def http_protocol_i_pv6(self, http_protocol_i_pv6):
        """Sets the http_protocol_i_pv6 of this AwsK8sServicesEc2V1alpha1InstanceSpecMetadataOptions.


        :param http_protocol_i_pv6: The http_protocol_i_pv6 of this AwsK8sServicesEc2V1alpha1InstanceSpecMetadataOptions.  # noqa: E501
        :type: str
        """

        self._http_protocol_i_pv6 = http_protocol_i_pv6

    @property
    def http_put_response_hop_limit(self):
        """Gets the http_put_response_hop_limit of this AwsK8sServicesEc2V1alpha1InstanceSpecMetadataOptions.  # noqa: E501


        :return: The http_put_response_hop_limit of this AwsK8sServicesEc2V1alpha1InstanceSpecMetadataOptions.  # noqa: E501
        :rtype: int
        """
        return self._http_put_response_hop_limit

    @http_put_response_hop_limit.setter
    def http_put_response_hop_limit(self, http_put_response_hop_limit):
        """Sets the http_put_response_hop_limit of this AwsK8sServicesEc2V1alpha1InstanceSpecMetadataOptions.


        :param http_put_response_hop_limit: The http_put_response_hop_limit of this AwsK8sServicesEc2V1alpha1InstanceSpecMetadataOptions.  # noqa: E501
        :type: int
        """

        self._http_put_response_hop_limit = http_put_response_hop_limit

    @property
    def http_tokens(self):
        """Gets the http_tokens of this AwsK8sServicesEc2V1alpha1InstanceSpecMetadataOptions.  # noqa: E501


        :return: The http_tokens of this AwsK8sServicesEc2V1alpha1InstanceSpecMetadataOptions.  # noqa: E501
        :rtype: str
        """
        return self._http_tokens

    @http_tokens.setter
    def http_tokens(self, http_tokens):
        """Sets the http_tokens of this AwsK8sServicesEc2V1alpha1InstanceSpecMetadataOptions.


        :param http_tokens: The http_tokens of this AwsK8sServicesEc2V1alpha1InstanceSpecMetadataOptions.  # noqa: E501
        :type: str
        """

        self._http_tokens = http_tokens

    @property
    def instance_metadata_tags(self):
        """Gets the instance_metadata_tags of this AwsK8sServicesEc2V1alpha1InstanceSpecMetadataOptions.  # noqa: E501


        :return: The instance_metadata_tags of this AwsK8sServicesEc2V1alpha1InstanceSpecMetadataOptions.  # noqa: E501
        :rtype: str
        """
        return self._instance_metadata_tags

    @instance_metadata_tags.setter
    def instance_metadata_tags(self, instance_metadata_tags):
        """Sets the instance_metadata_tags of this AwsK8sServicesEc2V1alpha1InstanceSpecMetadataOptions.


        :param instance_metadata_tags: The instance_metadata_tags of this AwsK8sServicesEc2V1alpha1InstanceSpecMetadataOptions.  # noqa: E501
        :type: str
        """

        self._instance_metadata_tags = instance_metadata_tags

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AwsK8sServicesEc2V1alpha1InstanceSpecMetadataOptions):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, AwsK8sServicesEc2V1alpha1InstanceSpecMetadataOptions):
            return True

        return self.to_dict() != other.to_dict()
