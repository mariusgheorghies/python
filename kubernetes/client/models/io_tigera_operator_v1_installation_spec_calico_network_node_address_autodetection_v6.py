# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1.25.12
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from kubernetes.client.configuration import Configuration


class IoTigeraOperatorV1InstallationSpecCalicoNetworkNodeAddressAutodetectionV6(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'can_reach': 'str',
        'cidrs': 'list[str]',
        'first_found': 'bool',
        'interface': 'str',
        'skip_interface': 'str'
    }

    attribute_map = {
        'can_reach': 'canReach',
        'cidrs': 'cidrs',
        'first_found': 'firstFound',
        'interface': 'interface',
        'skip_interface': 'skipInterface'
    }

    def __init__(self, can_reach=None, cidrs=None, first_found=None, interface=None, skip_interface=None, local_vars_configuration=None):  # noqa: E501
        """IoTigeraOperatorV1InstallationSpecCalicoNetworkNodeAddressAutodetectionV6 - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._can_reach = None
        self._cidrs = None
        self._first_found = None
        self._interface = None
        self._skip_interface = None
        self.discriminator = None

        if can_reach is not None:
            self.can_reach = can_reach
        if cidrs is not None:
            self.cidrs = cidrs
        if first_found is not None:
            self.first_found = first_found
        if interface is not None:
            self.interface = interface
        if skip_interface is not None:
            self.skip_interface = skip_interface

    @property
    def can_reach(self):
        """Gets the can_reach of this IoTigeraOperatorV1InstallationSpecCalicoNetworkNodeAddressAutodetectionV6.  # noqa: E501

        CanReach enables IP auto-detection based on which source address on the node is used to reach the specified IP or domain.  # noqa: E501

        :return: The can_reach of this IoTigeraOperatorV1InstallationSpecCalicoNetworkNodeAddressAutodetectionV6.  # noqa: E501
        :rtype: str
        """
        return self._can_reach

    @can_reach.setter
    def can_reach(self, can_reach):
        """Sets the can_reach of this IoTigeraOperatorV1InstallationSpecCalicoNetworkNodeAddressAutodetectionV6.

        CanReach enables IP auto-detection based on which source address on the node is used to reach the specified IP or domain.  # noqa: E501

        :param can_reach: The can_reach of this IoTigeraOperatorV1InstallationSpecCalicoNetworkNodeAddressAutodetectionV6.  # noqa: E501
        :type: str
        """

        self._can_reach = can_reach

    @property
    def cidrs(self):
        """Gets the cidrs of this IoTigeraOperatorV1InstallationSpecCalicoNetworkNodeAddressAutodetectionV6.  # noqa: E501

        CIDRS enables IP auto-detection based on which addresses on the nodes are within one of the provided CIDRs.  # noqa: E501

        :return: The cidrs of this IoTigeraOperatorV1InstallationSpecCalicoNetworkNodeAddressAutodetectionV6.  # noqa: E501
        :rtype: list[str]
        """
        return self._cidrs

    @cidrs.setter
    def cidrs(self, cidrs):
        """Sets the cidrs of this IoTigeraOperatorV1InstallationSpecCalicoNetworkNodeAddressAutodetectionV6.

        CIDRS enables IP auto-detection based on which addresses on the nodes are within one of the provided CIDRs.  # noqa: E501

        :param cidrs: The cidrs of this IoTigeraOperatorV1InstallationSpecCalicoNetworkNodeAddressAutodetectionV6.  # noqa: E501
        :type: list[str]
        """

        self._cidrs = cidrs

    @property
    def first_found(self):
        """Gets the first_found of this IoTigeraOperatorV1InstallationSpecCalicoNetworkNodeAddressAutodetectionV6.  # noqa: E501

        FirstFound uses default interface matching parameters to select an interface, performing best-effort filtering based on well-known interface names.  # noqa: E501

        :return: The first_found of this IoTigeraOperatorV1InstallationSpecCalicoNetworkNodeAddressAutodetectionV6.  # noqa: E501
        :rtype: bool
        """
        return self._first_found

    @first_found.setter
    def first_found(self, first_found):
        """Sets the first_found of this IoTigeraOperatorV1InstallationSpecCalicoNetworkNodeAddressAutodetectionV6.

        FirstFound uses default interface matching parameters to select an interface, performing best-effort filtering based on well-known interface names.  # noqa: E501

        :param first_found: The first_found of this IoTigeraOperatorV1InstallationSpecCalicoNetworkNodeAddressAutodetectionV6.  # noqa: E501
        :type: bool
        """

        self._first_found = first_found

    @property
    def interface(self):
        """Gets the interface of this IoTigeraOperatorV1InstallationSpecCalicoNetworkNodeAddressAutodetectionV6.  # noqa: E501

        Interface enables IP auto-detection based on interfaces that match the given regex.  # noqa: E501

        :return: The interface of this IoTigeraOperatorV1InstallationSpecCalicoNetworkNodeAddressAutodetectionV6.  # noqa: E501
        :rtype: str
        """
        return self._interface

    @interface.setter
    def interface(self, interface):
        """Sets the interface of this IoTigeraOperatorV1InstallationSpecCalicoNetworkNodeAddressAutodetectionV6.

        Interface enables IP auto-detection based on interfaces that match the given regex.  # noqa: E501

        :param interface: The interface of this IoTigeraOperatorV1InstallationSpecCalicoNetworkNodeAddressAutodetectionV6.  # noqa: E501
        :type: str
        """

        self._interface = interface

    @property
    def skip_interface(self):
        """Gets the skip_interface of this IoTigeraOperatorV1InstallationSpecCalicoNetworkNodeAddressAutodetectionV6.  # noqa: E501

        SkipInterface enables IP auto-detection based on interfaces that do not match the given regex.  # noqa: E501

        :return: The skip_interface of this IoTigeraOperatorV1InstallationSpecCalicoNetworkNodeAddressAutodetectionV6.  # noqa: E501
        :rtype: str
        """
        return self._skip_interface

    @skip_interface.setter
    def skip_interface(self, skip_interface):
        """Sets the skip_interface of this IoTigeraOperatorV1InstallationSpecCalicoNetworkNodeAddressAutodetectionV6.

        SkipInterface enables IP auto-detection based on interfaces that do not match the given regex.  # noqa: E501

        :param skip_interface: The skip_interface of this IoTigeraOperatorV1InstallationSpecCalicoNetworkNodeAddressAutodetectionV6.  # noqa: E501
        :type: str
        """

        self._skip_interface = skip_interface

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, IoTigeraOperatorV1InstallationSpecCalicoNetworkNodeAddressAutodetectionV6):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, IoTigeraOperatorV1InstallationSpecCalicoNetworkNodeAddressAutodetectionV6):
            return True

        return self.to_dict() != other.to_dict()
