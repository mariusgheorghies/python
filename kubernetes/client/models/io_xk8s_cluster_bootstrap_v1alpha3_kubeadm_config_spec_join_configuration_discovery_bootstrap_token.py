# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1.20.7
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from kubernetes.client.configuration import Configuration


class IoXK8sClusterBootstrapV1alpha3KubeadmConfigSpecJoinConfigurationDiscoveryBootstrapToken(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'api_server_endpoint': 'str',
        'ca_cert_hashes': 'list[str]',
        'token': 'str',
        'unsafe_skip_ca_verification': 'bool'
    }

    attribute_map = {
        'api_server_endpoint': 'apiServerEndpoint',
        'ca_cert_hashes': 'caCertHashes',
        'token': 'token',
        'unsafe_skip_ca_verification': 'unsafeSkipCAVerification'
    }

    def __init__(self, api_server_endpoint=None, ca_cert_hashes=None, token=None, unsafe_skip_ca_verification=None, local_vars_configuration=None):  # noqa: E501
        """IoXK8sClusterBootstrapV1alpha3KubeadmConfigSpecJoinConfigurationDiscoveryBootstrapToken - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._api_server_endpoint = None
        self._ca_cert_hashes = None
        self._token = None
        self._unsafe_skip_ca_verification = None
        self.discriminator = None

        if api_server_endpoint is not None:
            self.api_server_endpoint = api_server_endpoint
        if ca_cert_hashes is not None:
            self.ca_cert_hashes = ca_cert_hashes
        self.token = token
        self.unsafe_skip_ca_verification = unsafe_skip_ca_verification

    @property
    def api_server_endpoint(self):
        """Gets the api_server_endpoint of this IoXK8sClusterBootstrapV1alpha3KubeadmConfigSpecJoinConfigurationDiscoveryBootstrapToken.  # noqa: E501

        APIServerEndpoint is an IP or domain name to the API server from which info will be fetched.  # noqa: E501

        :return: The api_server_endpoint of this IoXK8sClusterBootstrapV1alpha3KubeadmConfigSpecJoinConfigurationDiscoveryBootstrapToken.  # noqa: E501
        :rtype: str
        """
        return self._api_server_endpoint

    @api_server_endpoint.setter
    def api_server_endpoint(self, api_server_endpoint):
        """Sets the api_server_endpoint of this IoXK8sClusterBootstrapV1alpha3KubeadmConfigSpecJoinConfigurationDiscoveryBootstrapToken.

        APIServerEndpoint is an IP or domain name to the API server from which info will be fetched.  # noqa: E501

        :param api_server_endpoint: The api_server_endpoint of this IoXK8sClusterBootstrapV1alpha3KubeadmConfigSpecJoinConfigurationDiscoveryBootstrapToken.  # noqa: E501
        :type: str
        """

        self._api_server_endpoint = api_server_endpoint

    @property
    def ca_cert_hashes(self):
        """Gets the ca_cert_hashes of this IoXK8sClusterBootstrapV1alpha3KubeadmConfigSpecJoinConfigurationDiscoveryBootstrapToken.  # noqa: E501

        CACertHashes specifies a set of public key pins to verify when token-based discovery is used. The root CA found during discovery must match one of these values. Specifying an empty set disables root CA pinning, which can be unsafe. Each hash is specified as \"<type>:<value>\", where the only currently supported type is \"sha256\". This is a hex-encoded SHA-256 hash of the Subject Public Key Info (SPKI) object in DER-encoded ASN.1. These hashes can be calculated using, for example, OpenSSL: openssl x509 -pubkey -in ca.crt openssl rsa -pubin -outform der 2>&/dev/null | openssl dgst -sha256 -hex  # noqa: E501

        :return: The ca_cert_hashes of this IoXK8sClusterBootstrapV1alpha3KubeadmConfigSpecJoinConfigurationDiscoveryBootstrapToken.  # noqa: E501
        :rtype: list[str]
        """
        return self._ca_cert_hashes

    @ca_cert_hashes.setter
    def ca_cert_hashes(self, ca_cert_hashes):
        """Sets the ca_cert_hashes of this IoXK8sClusterBootstrapV1alpha3KubeadmConfigSpecJoinConfigurationDiscoveryBootstrapToken.

        CACertHashes specifies a set of public key pins to verify when token-based discovery is used. The root CA found during discovery must match one of these values. Specifying an empty set disables root CA pinning, which can be unsafe. Each hash is specified as \"<type>:<value>\", where the only currently supported type is \"sha256\". This is a hex-encoded SHA-256 hash of the Subject Public Key Info (SPKI) object in DER-encoded ASN.1. These hashes can be calculated using, for example, OpenSSL: openssl x509 -pubkey -in ca.crt openssl rsa -pubin -outform der 2>&/dev/null | openssl dgst -sha256 -hex  # noqa: E501

        :param ca_cert_hashes: The ca_cert_hashes of this IoXK8sClusterBootstrapV1alpha3KubeadmConfigSpecJoinConfigurationDiscoveryBootstrapToken.  # noqa: E501
        :type: list[str]
        """

        self._ca_cert_hashes = ca_cert_hashes

    @property
    def token(self):
        """Gets the token of this IoXK8sClusterBootstrapV1alpha3KubeadmConfigSpecJoinConfigurationDiscoveryBootstrapToken.  # noqa: E501

        Token is a token used to validate cluster information fetched from the control-plane.  # noqa: E501

        :return: The token of this IoXK8sClusterBootstrapV1alpha3KubeadmConfigSpecJoinConfigurationDiscoveryBootstrapToken.  # noqa: E501
        :rtype: str
        """
        return self._token

    @token.setter
    def token(self, token):
        """Sets the token of this IoXK8sClusterBootstrapV1alpha3KubeadmConfigSpecJoinConfigurationDiscoveryBootstrapToken.

        Token is a token used to validate cluster information fetched from the control-plane.  # noqa: E501

        :param token: The token of this IoXK8sClusterBootstrapV1alpha3KubeadmConfigSpecJoinConfigurationDiscoveryBootstrapToken.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and token is None:  # noqa: E501
            raise ValueError("Invalid value for `token`, must not be `None`")  # noqa: E501

        self._token = token

    @property
    def unsafe_skip_ca_verification(self):
        """Gets the unsafe_skip_ca_verification of this IoXK8sClusterBootstrapV1alpha3KubeadmConfigSpecJoinConfigurationDiscoveryBootstrapToken.  # noqa: E501

        UnsafeSkipCAVerification allows token-based discovery without CA verification via CACertHashes. This can weaken the security of kubeadm since other nodes can impersonate the control-plane.  # noqa: E501

        :return: The unsafe_skip_ca_verification of this IoXK8sClusterBootstrapV1alpha3KubeadmConfigSpecJoinConfigurationDiscoveryBootstrapToken.  # noqa: E501
        :rtype: bool
        """
        return self._unsafe_skip_ca_verification

    @unsafe_skip_ca_verification.setter
    def unsafe_skip_ca_verification(self, unsafe_skip_ca_verification):
        """Sets the unsafe_skip_ca_verification of this IoXK8sClusterBootstrapV1alpha3KubeadmConfigSpecJoinConfigurationDiscoveryBootstrapToken.

        UnsafeSkipCAVerification allows token-based discovery without CA verification via CACertHashes. This can weaken the security of kubeadm since other nodes can impersonate the control-plane.  # noqa: E501

        :param unsafe_skip_ca_verification: The unsafe_skip_ca_verification of this IoXK8sClusterBootstrapV1alpha3KubeadmConfigSpecJoinConfigurationDiscoveryBootstrapToken.  # noqa: E501
        :type: bool
        """
        if self.local_vars_configuration.client_side_validation and unsafe_skip_ca_verification is None:  # noqa: E501
            raise ValueError("Invalid value for `unsafe_skip_ca_verification`, must not be `None`")  # noqa: E501

        self._unsafe_skip_ca_verification = unsafe_skip_ca_verification

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, IoXK8sClusterBootstrapV1alpha3KubeadmConfigSpecJoinConfigurationDiscoveryBootstrapToken):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, IoXK8sClusterBootstrapV1alpha3KubeadmConfigSpecJoinConfigurationDiscoveryBootstrapToken):
            return True

        return self.to_dict() != other.to_dict()
