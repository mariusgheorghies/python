# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1.25.12
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from kubernetes.client.configuration import Configuration


class IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'akeyless': 'IoExternalSecretsV1beta1ClusterSecretStoreSpecProviderAkeyless',
        'alibaba': 'IoExternalSecretsV1alpha1ClusterSecretStoreSpecProviderAlibaba',
        'aws': 'IoExternalSecretsV1beta1ClusterSecretStoreSpecProviderAws',
        'azurekv': 'IoExternalSecretsV1beta1ClusterSecretStoreSpecProviderAzurekv',
        'doppler': 'IoExternalSecretsV1beta1ClusterSecretStoreSpecProviderDoppler',
        'fake': 'IoExternalSecretsV1alpha1ClusterSecretStoreSpecProviderFake',
        'gcpsm': 'IoExternalSecretsV1alpha1ClusterSecretStoreSpecProviderGcpsm',
        'gitlab': 'IoExternalSecretsV1beta1ClusterSecretStoreSpecProviderGitlab',
        'ibm': 'IoExternalSecretsV1beta1ClusterSecretStoreSpecProviderIbm',
        'keepersecurity': 'IoExternalSecretsV1beta1ClusterSecretStoreSpecProviderKeepersecurity',
        'kubernetes': 'IoExternalSecretsV1beta1ClusterSecretStoreSpecProviderKubernetes',
        'onepassword': 'IoExternalSecretsV1beta1ClusterSecretStoreSpecProviderOnepassword',
        'oracle': 'IoExternalSecretsV1alpha1ClusterSecretStoreSpecProviderOracle',
        'scaleway': 'IoExternalSecretsV1beta1ClusterSecretStoreSpecProviderScaleway',
        'senhasegura': 'IoExternalSecretsV1beta1ClusterSecretStoreSpecProviderSenhasegura',
        'vault': 'IoExternalSecretsV1beta1ClusterSecretStoreSpecProviderVault',
        'webhook': 'IoExternalSecretsV1alpha1ClusterSecretStoreSpecProviderWebhook',
        'yandexcertificatemanager': 'IoExternalSecretsV1beta1ClusterSecretStoreSpecProviderYandexcertificatemanager',
        'yandexlockbox': 'IoExternalSecretsV1alpha1ClusterSecretStoreSpecProviderYandexlockbox'
    }

    attribute_map = {
        'akeyless': 'akeyless',
        'alibaba': 'alibaba',
        'aws': 'aws',
        'azurekv': 'azurekv',
        'doppler': 'doppler',
        'fake': 'fake',
        'gcpsm': 'gcpsm',
        'gitlab': 'gitlab',
        'ibm': 'ibm',
        'keepersecurity': 'keepersecurity',
        'kubernetes': 'kubernetes',
        'onepassword': 'onepassword',
        'oracle': 'oracle',
        'scaleway': 'scaleway',
        'senhasegura': 'senhasegura',
        'vault': 'vault',
        'webhook': 'webhook',
        'yandexcertificatemanager': 'yandexcertificatemanager',
        'yandexlockbox': 'yandexlockbox'
    }

    def __init__(self, akeyless=None, alibaba=None, aws=None, azurekv=None, doppler=None, fake=None, gcpsm=None, gitlab=None, ibm=None, keepersecurity=None, kubernetes=None, onepassword=None, oracle=None, scaleway=None, senhasegura=None, vault=None, webhook=None, yandexcertificatemanager=None, yandexlockbox=None, local_vars_configuration=None):  # noqa: E501
        """IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._akeyless = None
        self._alibaba = None
        self._aws = None
        self._azurekv = None
        self._doppler = None
        self._fake = None
        self._gcpsm = None
        self._gitlab = None
        self._ibm = None
        self._keepersecurity = None
        self._kubernetes = None
        self._onepassword = None
        self._oracle = None
        self._scaleway = None
        self._senhasegura = None
        self._vault = None
        self._webhook = None
        self._yandexcertificatemanager = None
        self._yandexlockbox = None
        self.discriminator = None

        if akeyless is not None:
            self.akeyless = akeyless
        if alibaba is not None:
            self.alibaba = alibaba
        if aws is not None:
            self.aws = aws
        if azurekv is not None:
            self.azurekv = azurekv
        if doppler is not None:
            self.doppler = doppler
        if fake is not None:
            self.fake = fake
        if gcpsm is not None:
            self.gcpsm = gcpsm
        if gitlab is not None:
            self.gitlab = gitlab
        if ibm is not None:
            self.ibm = ibm
        if keepersecurity is not None:
            self.keepersecurity = keepersecurity
        if kubernetes is not None:
            self.kubernetes = kubernetes
        if onepassword is not None:
            self.onepassword = onepassword
        if oracle is not None:
            self.oracle = oracle
        if scaleway is not None:
            self.scaleway = scaleway
        if senhasegura is not None:
            self.senhasegura = senhasegura
        if vault is not None:
            self.vault = vault
        if webhook is not None:
            self.webhook = webhook
        if yandexcertificatemanager is not None:
            self.yandexcertificatemanager = yandexcertificatemanager
        if yandexlockbox is not None:
            self.yandexlockbox = yandexlockbox

    @property
    def akeyless(self):
        """Gets the akeyless of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.  # noqa: E501


        :return: The akeyless of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.  # noqa: E501
        :rtype: IoExternalSecretsV1beta1ClusterSecretStoreSpecProviderAkeyless
        """
        return self._akeyless

    @akeyless.setter
    def akeyless(self, akeyless):
        """Sets the akeyless of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.


        :param akeyless: The akeyless of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.  # noqa: E501
        :type: IoExternalSecretsV1beta1ClusterSecretStoreSpecProviderAkeyless
        """

        self._akeyless = akeyless

    @property
    def alibaba(self):
        """Gets the alibaba of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.  # noqa: E501


        :return: The alibaba of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.  # noqa: E501
        :rtype: IoExternalSecretsV1alpha1ClusterSecretStoreSpecProviderAlibaba
        """
        return self._alibaba

    @alibaba.setter
    def alibaba(self, alibaba):
        """Sets the alibaba of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.


        :param alibaba: The alibaba of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.  # noqa: E501
        :type: IoExternalSecretsV1alpha1ClusterSecretStoreSpecProviderAlibaba
        """

        self._alibaba = alibaba

    @property
    def aws(self):
        """Gets the aws of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.  # noqa: E501


        :return: The aws of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.  # noqa: E501
        :rtype: IoExternalSecretsV1beta1ClusterSecretStoreSpecProviderAws
        """
        return self._aws

    @aws.setter
    def aws(self, aws):
        """Sets the aws of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.


        :param aws: The aws of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.  # noqa: E501
        :type: IoExternalSecretsV1beta1ClusterSecretStoreSpecProviderAws
        """

        self._aws = aws

    @property
    def azurekv(self):
        """Gets the azurekv of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.  # noqa: E501


        :return: The azurekv of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.  # noqa: E501
        :rtype: IoExternalSecretsV1beta1ClusterSecretStoreSpecProviderAzurekv
        """
        return self._azurekv

    @azurekv.setter
    def azurekv(self, azurekv):
        """Sets the azurekv of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.


        :param azurekv: The azurekv of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.  # noqa: E501
        :type: IoExternalSecretsV1beta1ClusterSecretStoreSpecProviderAzurekv
        """

        self._azurekv = azurekv

    @property
    def doppler(self):
        """Gets the doppler of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.  # noqa: E501


        :return: The doppler of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.  # noqa: E501
        :rtype: IoExternalSecretsV1beta1ClusterSecretStoreSpecProviderDoppler
        """
        return self._doppler

    @doppler.setter
    def doppler(self, doppler):
        """Sets the doppler of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.


        :param doppler: The doppler of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.  # noqa: E501
        :type: IoExternalSecretsV1beta1ClusterSecretStoreSpecProviderDoppler
        """

        self._doppler = doppler

    @property
    def fake(self):
        """Gets the fake of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.  # noqa: E501


        :return: The fake of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.  # noqa: E501
        :rtype: IoExternalSecretsV1alpha1ClusterSecretStoreSpecProviderFake
        """
        return self._fake

    @fake.setter
    def fake(self, fake):
        """Sets the fake of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.


        :param fake: The fake of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.  # noqa: E501
        :type: IoExternalSecretsV1alpha1ClusterSecretStoreSpecProviderFake
        """

        self._fake = fake

    @property
    def gcpsm(self):
        """Gets the gcpsm of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.  # noqa: E501


        :return: The gcpsm of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.  # noqa: E501
        :rtype: IoExternalSecretsV1alpha1ClusterSecretStoreSpecProviderGcpsm
        """
        return self._gcpsm

    @gcpsm.setter
    def gcpsm(self, gcpsm):
        """Sets the gcpsm of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.


        :param gcpsm: The gcpsm of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.  # noqa: E501
        :type: IoExternalSecretsV1alpha1ClusterSecretStoreSpecProviderGcpsm
        """

        self._gcpsm = gcpsm

    @property
    def gitlab(self):
        """Gets the gitlab of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.  # noqa: E501


        :return: The gitlab of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.  # noqa: E501
        :rtype: IoExternalSecretsV1beta1ClusterSecretStoreSpecProviderGitlab
        """
        return self._gitlab

    @gitlab.setter
    def gitlab(self, gitlab):
        """Sets the gitlab of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.


        :param gitlab: The gitlab of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.  # noqa: E501
        :type: IoExternalSecretsV1beta1ClusterSecretStoreSpecProviderGitlab
        """

        self._gitlab = gitlab

    @property
    def ibm(self):
        """Gets the ibm of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.  # noqa: E501


        :return: The ibm of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.  # noqa: E501
        :rtype: IoExternalSecretsV1beta1ClusterSecretStoreSpecProviderIbm
        """
        return self._ibm

    @ibm.setter
    def ibm(self, ibm):
        """Sets the ibm of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.


        :param ibm: The ibm of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.  # noqa: E501
        :type: IoExternalSecretsV1beta1ClusterSecretStoreSpecProviderIbm
        """

        self._ibm = ibm

    @property
    def keepersecurity(self):
        """Gets the keepersecurity of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.  # noqa: E501


        :return: The keepersecurity of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.  # noqa: E501
        :rtype: IoExternalSecretsV1beta1ClusterSecretStoreSpecProviderKeepersecurity
        """
        return self._keepersecurity

    @keepersecurity.setter
    def keepersecurity(self, keepersecurity):
        """Sets the keepersecurity of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.


        :param keepersecurity: The keepersecurity of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.  # noqa: E501
        :type: IoExternalSecretsV1beta1ClusterSecretStoreSpecProviderKeepersecurity
        """

        self._keepersecurity = keepersecurity

    @property
    def kubernetes(self):
        """Gets the kubernetes of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.  # noqa: E501


        :return: The kubernetes of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.  # noqa: E501
        :rtype: IoExternalSecretsV1beta1ClusterSecretStoreSpecProviderKubernetes
        """
        return self._kubernetes

    @kubernetes.setter
    def kubernetes(self, kubernetes):
        """Sets the kubernetes of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.


        :param kubernetes: The kubernetes of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.  # noqa: E501
        :type: IoExternalSecretsV1beta1ClusterSecretStoreSpecProviderKubernetes
        """

        self._kubernetes = kubernetes

    @property
    def onepassword(self):
        """Gets the onepassword of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.  # noqa: E501


        :return: The onepassword of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.  # noqa: E501
        :rtype: IoExternalSecretsV1beta1ClusterSecretStoreSpecProviderOnepassword
        """
        return self._onepassword

    @onepassword.setter
    def onepassword(self, onepassword):
        """Sets the onepassword of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.


        :param onepassword: The onepassword of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.  # noqa: E501
        :type: IoExternalSecretsV1beta1ClusterSecretStoreSpecProviderOnepassword
        """

        self._onepassword = onepassword

    @property
    def oracle(self):
        """Gets the oracle of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.  # noqa: E501


        :return: The oracle of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.  # noqa: E501
        :rtype: IoExternalSecretsV1alpha1ClusterSecretStoreSpecProviderOracle
        """
        return self._oracle

    @oracle.setter
    def oracle(self, oracle):
        """Sets the oracle of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.


        :param oracle: The oracle of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.  # noqa: E501
        :type: IoExternalSecretsV1alpha1ClusterSecretStoreSpecProviderOracle
        """

        self._oracle = oracle

    @property
    def scaleway(self):
        """Gets the scaleway of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.  # noqa: E501


        :return: The scaleway of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.  # noqa: E501
        :rtype: IoExternalSecretsV1beta1ClusterSecretStoreSpecProviderScaleway
        """
        return self._scaleway

    @scaleway.setter
    def scaleway(self, scaleway):
        """Sets the scaleway of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.


        :param scaleway: The scaleway of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.  # noqa: E501
        :type: IoExternalSecretsV1beta1ClusterSecretStoreSpecProviderScaleway
        """

        self._scaleway = scaleway

    @property
    def senhasegura(self):
        """Gets the senhasegura of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.  # noqa: E501


        :return: The senhasegura of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.  # noqa: E501
        :rtype: IoExternalSecretsV1beta1ClusterSecretStoreSpecProviderSenhasegura
        """
        return self._senhasegura

    @senhasegura.setter
    def senhasegura(self, senhasegura):
        """Sets the senhasegura of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.


        :param senhasegura: The senhasegura of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.  # noqa: E501
        :type: IoExternalSecretsV1beta1ClusterSecretStoreSpecProviderSenhasegura
        """

        self._senhasegura = senhasegura

    @property
    def vault(self):
        """Gets the vault of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.  # noqa: E501


        :return: The vault of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.  # noqa: E501
        :rtype: IoExternalSecretsV1beta1ClusterSecretStoreSpecProviderVault
        """
        return self._vault

    @vault.setter
    def vault(self, vault):
        """Sets the vault of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.


        :param vault: The vault of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.  # noqa: E501
        :type: IoExternalSecretsV1beta1ClusterSecretStoreSpecProviderVault
        """

        self._vault = vault

    @property
    def webhook(self):
        """Gets the webhook of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.  # noqa: E501


        :return: The webhook of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.  # noqa: E501
        :rtype: IoExternalSecretsV1alpha1ClusterSecretStoreSpecProviderWebhook
        """
        return self._webhook

    @webhook.setter
    def webhook(self, webhook):
        """Sets the webhook of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.


        :param webhook: The webhook of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.  # noqa: E501
        :type: IoExternalSecretsV1alpha1ClusterSecretStoreSpecProviderWebhook
        """

        self._webhook = webhook

    @property
    def yandexcertificatemanager(self):
        """Gets the yandexcertificatemanager of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.  # noqa: E501


        :return: The yandexcertificatemanager of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.  # noqa: E501
        :rtype: IoExternalSecretsV1beta1ClusterSecretStoreSpecProviderYandexcertificatemanager
        """
        return self._yandexcertificatemanager

    @yandexcertificatemanager.setter
    def yandexcertificatemanager(self, yandexcertificatemanager):
        """Sets the yandexcertificatemanager of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.


        :param yandexcertificatemanager: The yandexcertificatemanager of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.  # noqa: E501
        :type: IoExternalSecretsV1beta1ClusterSecretStoreSpecProviderYandexcertificatemanager
        """

        self._yandexcertificatemanager = yandexcertificatemanager

    @property
    def yandexlockbox(self):
        """Gets the yandexlockbox of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.  # noqa: E501


        :return: The yandexlockbox of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.  # noqa: E501
        :rtype: IoExternalSecretsV1alpha1ClusterSecretStoreSpecProviderYandexlockbox
        """
        return self._yandexlockbox

    @yandexlockbox.setter
    def yandexlockbox(self, yandexlockbox):
        """Sets the yandexlockbox of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.


        :param yandexlockbox: The yandexlockbox of this IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider.  # noqa: E501
        :type: IoExternalSecretsV1alpha1ClusterSecretStoreSpecProviderYandexlockbox
        """

        self._yandexlockbox = yandexlockbox

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, IoExternalSecretsV1beta1ClusterSecretStoreSpecProvider):
            return True

        return self.to_dict() != other.to_dict()
