# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1.25.12
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from kubernetes.client.configuration import Configuration


class OrgProjectcalicoCrdV1HostEndpointSpec(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'expected_i_ps': 'list[str]',
        'interface_name': 'str',
        'node': 'str',
        'ports': 'list[OrgProjectcalicoCrdV1HostEndpointSpecPorts]',
        'profiles': 'list[str]'
    }

    attribute_map = {
        'expected_i_ps': 'expectedIPs',
        'interface_name': 'interfaceName',
        'node': 'node',
        'ports': 'ports',
        'profiles': 'profiles'
    }

    def __init__(self, expected_i_ps=None, interface_name=None, node=None, ports=None, profiles=None, local_vars_configuration=None):  # noqa: E501
        """OrgProjectcalicoCrdV1HostEndpointSpec - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._expected_i_ps = None
        self._interface_name = None
        self._node = None
        self._ports = None
        self._profiles = None
        self.discriminator = None

        if expected_i_ps is not None:
            self.expected_i_ps = expected_i_ps
        if interface_name is not None:
            self.interface_name = interface_name
        if node is not None:
            self.node = node
        if ports is not None:
            self.ports = ports
        if profiles is not None:
            self.profiles = profiles

    @property
    def expected_i_ps(self):
        """Gets the expected_i_ps of this OrgProjectcalicoCrdV1HostEndpointSpec.  # noqa: E501

        The expected IP addresses (IPv4 and IPv6) of the endpoint. If \"InterfaceName\" is not present, Calico will look for an interface matching any of the IPs in the list and apply policy to that. Note:  When using the selector match criteria in an ingress or egress security Policy  or Profile, Calico converts the selector into a set of IP addresses. For host  endpoints, the ExpectedIPs field is used for that purpose. (If only the interface  name is specified, Calico does not learn the IPs of the interface for use in match  criteria.)  # noqa: E501

        :return: The expected_i_ps of this OrgProjectcalicoCrdV1HostEndpointSpec.  # noqa: E501
        :rtype: list[str]
        """
        return self._expected_i_ps

    @expected_i_ps.setter
    def expected_i_ps(self, expected_i_ps):
        """Sets the expected_i_ps of this OrgProjectcalicoCrdV1HostEndpointSpec.

        The expected IP addresses (IPv4 and IPv6) of the endpoint. If \"InterfaceName\" is not present, Calico will look for an interface matching any of the IPs in the list and apply policy to that. Note:  When using the selector match criteria in an ingress or egress security Policy  or Profile, Calico converts the selector into a set of IP addresses. For host  endpoints, the ExpectedIPs field is used for that purpose. (If only the interface  name is specified, Calico does not learn the IPs of the interface for use in match  criteria.)  # noqa: E501

        :param expected_i_ps: The expected_i_ps of this OrgProjectcalicoCrdV1HostEndpointSpec.  # noqa: E501
        :type: list[str]
        """

        self._expected_i_ps = expected_i_ps

    @property
    def interface_name(self):
        """Gets the interface_name of this OrgProjectcalicoCrdV1HostEndpointSpec.  # noqa: E501

        Either \"*\", or the name of a specific Linux interface to apply policy to; or empty.  \"*\" indicates that this HostEndpoint governs all traffic to, from or through the default network namespace of the host named by the \"Node\" field; entering and leaving that namespace via any interface, including those from/to non-host-networked local workloads.   If InterfaceName is not \"*\", this HostEndpoint only governs traffic that enters or leaves the host through the specific interface named by InterfaceName, or - when InterfaceName is empty - through the specific interface that has one of the IPs in ExpectedIPs. Therefore, when InterfaceName is empty, at least one expected IP must be specified.  Only external interfaces (such as “eth0”) are supported here; it isn't possible for a HostEndpoint to protect traffic through a specific local workload interface.   Note: Only some kinds of policy are implemented for \"*\" HostEndpoints; initially just pre-DNAT policy.  Please check Calico documentation for the latest position.  # noqa: E501

        :return: The interface_name of this OrgProjectcalicoCrdV1HostEndpointSpec.  # noqa: E501
        :rtype: str
        """
        return self._interface_name

    @interface_name.setter
    def interface_name(self, interface_name):
        """Sets the interface_name of this OrgProjectcalicoCrdV1HostEndpointSpec.

        Either \"*\", or the name of a specific Linux interface to apply policy to; or empty.  \"*\" indicates that this HostEndpoint governs all traffic to, from or through the default network namespace of the host named by the \"Node\" field; entering and leaving that namespace via any interface, including those from/to non-host-networked local workloads.   If InterfaceName is not \"*\", this HostEndpoint only governs traffic that enters or leaves the host through the specific interface named by InterfaceName, or - when InterfaceName is empty - through the specific interface that has one of the IPs in ExpectedIPs. Therefore, when InterfaceName is empty, at least one expected IP must be specified.  Only external interfaces (such as “eth0”) are supported here; it isn't possible for a HostEndpoint to protect traffic through a specific local workload interface.   Note: Only some kinds of policy are implemented for \"*\" HostEndpoints; initially just pre-DNAT policy.  Please check Calico documentation for the latest position.  # noqa: E501

        :param interface_name: The interface_name of this OrgProjectcalicoCrdV1HostEndpointSpec.  # noqa: E501
        :type: str
        """

        self._interface_name = interface_name

    @property
    def node(self):
        """Gets the node of this OrgProjectcalicoCrdV1HostEndpointSpec.  # noqa: E501

        The node name identifying the Calico node instance.  # noqa: E501

        :return: The node of this OrgProjectcalicoCrdV1HostEndpointSpec.  # noqa: E501
        :rtype: str
        """
        return self._node

    @node.setter
    def node(self, node):
        """Sets the node of this OrgProjectcalicoCrdV1HostEndpointSpec.

        The node name identifying the Calico node instance.  # noqa: E501

        :param node: The node of this OrgProjectcalicoCrdV1HostEndpointSpec.  # noqa: E501
        :type: str
        """

        self._node = node

    @property
    def ports(self):
        """Gets the ports of this OrgProjectcalicoCrdV1HostEndpointSpec.  # noqa: E501

        Ports contains the endpoint's named ports, which may be referenced in security policy rules.  # noqa: E501

        :return: The ports of this OrgProjectcalicoCrdV1HostEndpointSpec.  # noqa: E501
        :rtype: list[OrgProjectcalicoCrdV1HostEndpointSpecPorts]
        """
        return self._ports

    @ports.setter
    def ports(self, ports):
        """Sets the ports of this OrgProjectcalicoCrdV1HostEndpointSpec.

        Ports contains the endpoint's named ports, which may be referenced in security policy rules.  # noqa: E501

        :param ports: The ports of this OrgProjectcalicoCrdV1HostEndpointSpec.  # noqa: E501
        :type: list[OrgProjectcalicoCrdV1HostEndpointSpecPorts]
        """

        self._ports = ports

    @property
    def profiles(self):
        """Gets the profiles of this OrgProjectcalicoCrdV1HostEndpointSpec.  # noqa: E501

        A list of identifiers of security Profile objects that apply to this endpoint. Each profile is applied in the order that they appear in this list.  Profile rules are applied after the selector-based security policy.  # noqa: E501

        :return: The profiles of this OrgProjectcalicoCrdV1HostEndpointSpec.  # noqa: E501
        :rtype: list[str]
        """
        return self._profiles

    @profiles.setter
    def profiles(self, profiles):
        """Sets the profiles of this OrgProjectcalicoCrdV1HostEndpointSpec.

        A list of identifiers of security Profile objects that apply to this endpoint. Each profile is applied in the order that they appear in this list.  Profile rules are applied after the selector-based security policy.  # noqa: E501

        :param profiles: The profiles of this OrgProjectcalicoCrdV1HostEndpointSpec.  # noqa: E501
        :type: list[str]
        """

        self._profiles = profiles

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, OrgProjectcalicoCrdV1HostEndpointSpec):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, OrgProjectcalicoCrdV1HostEndpointSpec):
            return True

        return self.to_dict() != other.to_dict()
