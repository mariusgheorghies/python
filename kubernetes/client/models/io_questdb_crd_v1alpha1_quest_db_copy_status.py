# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1.25.12
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from kubernetes.client.configuration import Configuration


class IoQuestdbCrdV1alpha1QuestDBCopyStatus(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'copy_id': 'str',
        'copy_logs': 'list[IoQuestdbCrdV1alpha1QuestDBCopyStatusCopyLogs]',
        'filename': 'str',
        'original_instance_type': 'str',
        'phase': 'str',
        'transition_time': 'datetime'
    }

    attribute_map = {
        'copy_id': 'copyId',
        'copy_logs': 'copyLogs',
        'filename': 'filename',
        'original_instance_type': 'originalInstanceType',
        'phase': 'phase',
        'transition_time': 'transitionTime'
    }

    def __init__(self, copy_id=None, copy_logs=None, filename=None, original_instance_type=None, phase=None, transition_time=None, local_vars_configuration=None):  # noqa: E501
        """IoQuestdbCrdV1alpha1QuestDBCopyStatus - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._copy_id = None
        self._copy_logs = None
        self._filename = None
        self._original_instance_type = None
        self._phase = None
        self._transition_time = None
        self.discriminator = None

        if copy_id is not None:
            self.copy_id = copy_id
        if copy_logs is not None:
            self.copy_logs = copy_logs
        if filename is not None:
            self.filename = filename
        if original_instance_type is not None:
            self.original_instance_type = original_instance_type
        if phase is not None:
            self.phase = phase
        if transition_time is not None:
            self.transition_time = transition_time

    @property
    def copy_id(self):
        """Gets the copy_id of this IoQuestdbCrdV1alpha1QuestDBCopyStatus.  # noqa: E501


        :return: The copy_id of this IoQuestdbCrdV1alpha1QuestDBCopyStatus.  # noqa: E501
        :rtype: str
        """
        return self._copy_id

    @copy_id.setter
    def copy_id(self, copy_id):
        """Sets the copy_id of this IoQuestdbCrdV1alpha1QuestDBCopyStatus.


        :param copy_id: The copy_id of this IoQuestdbCrdV1alpha1QuestDBCopyStatus.  # noqa: E501
        :type: str
        """

        self._copy_id = copy_id

    @property
    def copy_logs(self):
        """Gets the copy_logs of this IoQuestdbCrdV1alpha1QuestDBCopyStatus.  # noqa: E501


        :return: The copy_logs of this IoQuestdbCrdV1alpha1QuestDBCopyStatus.  # noqa: E501
        :rtype: list[IoQuestdbCrdV1alpha1QuestDBCopyStatusCopyLogs]
        """
        return self._copy_logs

    @copy_logs.setter
    def copy_logs(self, copy_logs):
        """Sets the copy_logs of this IoQuestdbCrdV1alpha1QuestDBCopyStatus.


        :param copy_logs: The copy_logs of this IoQuestdbCrdV1alpha1QuestDBCopyStatus.  # noqa: E501
        :type: list[IoQuestdbCrdV1alpha1QuestDBCopyStatusCopyLogs]
        """

        self._copy_logs = copy_logs

    @property
    def filename(self):
        """Gets the filename of this IoQuestdbCrdV1alpha1QuestDBCopyStatus.  # noqa: E501


        :return: The filename of this IoQuestdbCrdV1alpha1QuestDBCopyStatus.  # noqa: E501
        :rtype: str
        """
        return self._filename

    @filename.setter
    def filename(self, filename):
        """Sets the filename of this IoQuestdbCrdV1alpha1QuestDBCopyStatus.


        :param filename: The filename of this IoQuestdbCrdV1alpha1QuestDBCopyStatus.  # noqa: E501
        :type: str
        """

        self._filename = filename

    @property
    def original_instance_type(self):
        """Gets the original_instance_type of this IoQuestdbCrdV1alpha1QuestDBCopyStatus.  # noqa: E501


        :return: The original_instance_type of this IoQuestdbCrdV1alpha1QuestDBCopyStatus.  # noqa: E501
        :rtype: str
        """
        return self._original_instance_type

    @original_instance_type.setter
    def original_instance_type(self, original_instance_type):
        """Sets the original_instance_type of this IoQuestdbCrdV1alpha1QuestDBCopyStatus.


        :param original_instance_type: The original_instance_type of this IoQuestdbCrdV1alpha1QuestDBCopyStatus.  # noqa: E501
        :type: str
        """

        self._original_instance_type = original_instance_type

    @property
    def phase(self):
        """Gets the phase of this IoQuestdbCrdV1alpha1QuestDBCopyStatus.  # noqa: E501


        :return: The phase of this IoQuestdbCrdV1alpha1QuestDBCopyStatus.  # noqa: E501
        :rtype: str
        """
        return self._phase

    @phase.setter
    def phase(self, phase):
        """Sets the phase of this IoQuestdbCrdV1alpha1QuestDBCopyStatus.


        :param phase: The phase of this IoQuestdbCrdV1alpha1QuestDBCopyStatus.  # noqa: E501
        :type: str
        """

        self._phase = phase

    @property
    def transition_time(self):
        """Gets the transition_time of this IoQuestdbCrdV1alpha1QuestDBCopyStatus.  # noqa: E501


        :return: The transition_time of this IoQuestdbCrdV1alpha1QuestDBCopyStatus.  # noqa: E501
        :rtype: datetime
        """
        return self._transition_time

    @transition_time.setter
    def transition_time(self, transition_time):
        """Sets the transition_time of this IoQuestdbCrdV1alpha1QuestDBCopyStatus.


        :param transition_time: The transition_time of this IoQuestdbCrdV1alpha1QuestDBCopyStatus.  # noqa: E501
        :type: datetime
        """

        self._transition_time = transition_time

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, IoQuestdbCrdV1alpha1QuestDBCopyStatus):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, IoQuestdbCrdV1alpha1QuestDBCopyStatus):
            return True

        return self.to_dict() != other.to_dict()
