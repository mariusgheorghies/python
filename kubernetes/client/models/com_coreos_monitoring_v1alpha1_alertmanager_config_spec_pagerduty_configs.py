# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1.25.12
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from kubernetes.client.configuration import Configuration


class ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerdutyConfigs(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        '_class': 'str',
        'client': 'str',
        'client_url': 'str',
        'component': 'str',
        'description': 'str',
        'details': 'list[ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecHeaders]',
        'group': 'str',
        'http_config': 'ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecHttpConfig',
        'pager_duty_image_configs': 'list[ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerDutyImageConfigs]',
        'pager_duty_link_configs': 'list[ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerDutyLinkConfigs]',
        'routing_key': 'ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecRoutingKey',
        'send_resolved': 'bool',
        'service_key': 'ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecServiceKey',
        'severity': 'str',
        'url': 'str'
    }

    attribute_map = {
        '_class': 'class',
        'client': 'client',
        'client_url': 'clientURL',
        'component': 'component',
        'description': 'description',
        'details': 'details',
        'group': 'group',
        'http_config': 'httpConfig',
        'pager_duty_image_configs': 'pagerDutyImageConfigs',
        'pager_duty_link_configs': 'pagerDutyLinkConfigs',
        'routing_key': 'routingKey',
        'send_resolved': 'sendResolved',
        'service_key': 'serviceKey',
        'severity': 'severity',
        'url': 'url'
    }

    def __init__(self, _class=None, client=None, client_url=None, component=None, description=None, details=None, group=None, http_config=None, pager_duty_image_configs=None, pager_duty_link_configs=None, routing_key=None, send_resolved=None, service_key=None, severity=None, url=None, local_vars_configuration=None):  # noqa: E501
        """ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerdutyConfigs - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self.__class = None
        self._client = None
        self._client_url = None
        self._component = None
        self._description = None
        self._details = None
        self._group = None
        self._http_config = None
        self._pager_duty_image_configs = None
        self._pager_duty_link_configs = None
        self._routing_key = None
        self._send_resolved = None
        self._service_key = None
        self._severity = None
        self._url = None
        self.discriminator = None

        if _class is not None:
            self._class = _class
        if client is not None:
            self.client = client
        if client_url is not None:
            self.client_url = client_url
        if component is not None:
            self.component = component
        if description is not None:
            self.description = description
        if details is not None:
            self.details = details
        if group is not None:
            self.group = group
        if http_config is not None:
            self.http_config = http_config
        if pager_duty_image_configs is not None:
            self.pager_duty_image_configs = pager_duty_image_configs
        if pager_duty_link_configs is not None:
            self.pager_duty_link_configs = pager_duty_link_configs
        if routing_key is not None:
            self.routing_key = routing_key
        if send_resolved is not None:
            self.send_resolved = send_resolved
        if service_key is not None:
            self.service_key = service_key
        if severity is not None:
            self.severity = severity
        if url is not None:
            self.url = url

    @property
    def _class(self):
        """Gets the _class of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerdutyConfigs.  # noqa: E501

        The class/type of the event.  # noqa: E501

        :return: The _class of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerdutyConfigs.  # noqa: E501
        :rtype: str
        """
        return self.__class

    @_class.setter
    def _class(self, _class):
        """Sets the _class of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerdutyConfigs.

        The class/type of the event.  # noqa: E501

        :param _class: The _class of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerdutyConfigs.  # noqa: E501
        :type: str
        """

        self.__class = _class

    @property
    def client(self):
        """Gets the client of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerdutyConfigs.  # noqa: E501

        Client identification.  # noqa: E501

        :return: The client of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerdutyConfigs.  # noqa: E501
        :rtype: str
        """
        return self._client

    @client.setter
    def client(self, client):
        """Sets the client of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerdutyConfigs.

        Client identification.  # noqa: E501

        :param client: The client of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerdutyConfigs.  # noqa: E501
        :type: str
        """

        self._client = client

    @property
    def client_url(self):
        """Gets the client_url of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerdutyConfigs.  # noqa: E501

        Backlink to the sender of notification.  # noqa: E501

        :return: The client_url of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerdutyConfigs.  # noqa: E501
        :rtype: str
        """
        return self._client_url

    @client_url.setter
    def client_url(self, client_url):
        """Sets the client_url of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerdutyConfigs.

        Backlink to the sender of notification.  # noqa: E501

        :param client_url: The client_url of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerdutyConfigs.  # noqa: E501
        :type: str
        """

        self._client_url = client_url

    @property
    def component(self):
        """Gets the component of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerdutyConfigs.  # noqa: E501

        The part or component of the affected system that is broken.  # noqa: E501

        :return: The component of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerdutyConfigs.  # noqa: E501
        :rtype: str
        """
        return self._component

    @component.setter
    def component(self, component):
        """Sets the component of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerdutyConfigs.

        The part or component of the affected system that is broken.  # noqa: E501

        :param component: The component of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerdutyConfigs.  # noqa: E501
        :type: str
        """

        self._component = component

    @property
    def description(self):
        """Gets the description of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerdutyConfigs.  # noqa: E501

        Description of the incident.  # noqa: E501

        :return: The description of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerdutyConfigs.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerdutyConfigs.

        Description of the incident.  # noqa: E501

        :param description: The description of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerdutyConfigs.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def details(self):
        """Gets the details of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerdutyConfigs.  # noqa: E501

        Arbitrary key/value pairs that provide further detail about the incident.  # noqa: E501

        :return: The details of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerdutyConfigs.  # noqa: E501
        :rtype: list[ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecHeaders]
        """
        return self._details

    @details.setter
    def details(self, details):
        """Sets the details of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerdutyConfigs.

        Arbitrary key/value pairs that provide further detail about the incident.  # noqa: E501

        :param details: The details of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerdutyConfigs.  # noqa: E501
        :type: list[ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecHeaders]
        """

        self._details = details

    @property
    def group(self):
        """Gets the group of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerdutyConfigs.  # noqa: E501

        A cluster or grouping of sources.  # noqa: E501

        :return: The group of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerdutyConfigs.  # noqa: E501
        :rtype: str
        """
        return self._group

    @group.setter
    def group(self, group):
        """Sets the group of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerdutyConfigs.

        A cluster or grouping of sources.  # noqa: E501

        :param group: The group of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerdutyConfigs.  # noqa: E501
        :type: str
        """

        self._group = group

    @property
    def http_config(self):
        """Gets the http_config of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerdutyConfigs.  # noqa: E501


        :return: The http_config of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerdutyConfigs.  # noqa: E501
        :rtype: ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecHttpConfig
        """
        return self._http_config

    @http_config.setter
    def http_config(self, http_config):
        """Sets the http_config of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerdutyConfigs.


        :param http_config: The http_config of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerdutyConfigs.  # noqa: E501
        :type: ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecHttpConfig
        """

        self._http_config = http_config

    @property
    def pager_duty_image_configs(self):
        """Gets the pager_duty_image_configs of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerdutyConfigs.  # noqa: E501

        A list of image details to attach that provide further detail about an incident.  # noqa: E501

        :return: The pager_duty_image_configs of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerdutyConfigs.  # noqa: E501
        :rtype: list[ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerDutyImageConfigs]
        """
        return self._pager_duty_image_configs

    @pager_duty_image_configs.setter
    def pager_duty_image_configs(self, pager_duty_image_configs):
        """Sets the pager_duty_image_configs of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerdutyConfigs.

        A list of image details to attach that provide further detail about an incident.  # noqa: E501

        :param pager_duty_image_configs: The pager_duty_image_configs of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerdutyConfigs.  # noqa: E501
        :type: list[ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerDutyImageConfigs]
        """

        self._pager_duty_image_configs = pager_duty_image_configs

    @property
    def pager_duty_link_configs(self):
        """Gets the pager_duty_link_configs of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerdutyConfigs.  # noqa: E501

        A list of link details to attach that provide further detail about an incident.  # noqa: E501

        :return: The pager_duty_link_configs of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerdutyConfigs.  # noqa: E501
        :rtype: list[ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerDutyLinkConfigs]
        """
        return self._pager_duty_link_configs

    @pager_duty_link_configs.setter
    def pager_duty_link_configs(self, pager_duty_link_configs):
        """Sets the pager_duty_link_configs of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerdutyConfigs.

        A list of link details to attach that provide further detail about an incident.  # noqa: E501

        :param pager_duty_link_configs: The pager_duty_link_configs of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerdutyConfigs.  # noqa: E501
        :type: list[ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerDutyLinkConfigs]
        """

        self._pager_duty_link_configs = pager_duty_link_configs

    @property
    def routing_key(self):
        """Gets the routing_key of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerdutyConfigs.  # noqa: E501


        :return: The routing_key of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerdutyConfigs.  # noqa: E501
        :rtype: ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecRoutingKey
        """
        return self._routing_key

    @routing_key.setter
    def routing_key(self, routing_key):
        """Sets the routing_key of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerdutyConfigs.


        :param routing_key: The routing_key of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerdutyConfigs.  # noqa: E501
        :type: ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecRoutingKey
        """

        self._routing_key = routing_key

    @property
    def send_resolved(self):
        """Gets the send_resolved of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerdutyConfigs.  # noqa: E501

        Whether or not to notify about resolved alerts.  # noqa: E501

        :return: The send_resolved of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerdutyConfigs.  # noqa: E501
        :rtype: bool
        """
        return self._send_resolved

    @send_resolved.setter
    def send_resolved(self, send_resolved):
        """Sets the send_resolved of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerdutyConfigs.

        Whether or not to notify about resolved alerts.  # noqa: E501

        :param send_resolved: The send_resolved of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerdutyConfigs.  # noqa: E501
        :type: bool
        """

        self._send_resolved = send_resolved

    @property
    def service_key(self):
        """Gets the service_key of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerdutyConfigs.  # noqa: E501


        :return: The service_key of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerdutyConfigs.  # noqa: E501
        :rtype: ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecServiceKey
        """
        return self._service_key

    @service_key.setter
    def service_key(self, service_key):
        """Sets the service_key of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerdutyConfigs.


        :param service_key: The service_key of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerdutyConfigs.  # noqa: E501
        :type: ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecServiceKey
        """

        self._service_key = service_key

    @property
    def severity(self):
        """Gets the severity of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerdutyConfigs.  # noqa: E501

        Severity of the incident.  # noqa: E501

        :return: The severity of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerdutyConfigs.  # noqa: E501
        :rtype: str
        """
        return self._severity

    @severity.setter
    def severity(self, severity):
        """Sets the severity of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerdutyConfigs.

        Severity of the incident.  # noqa: E501

        :param severity: The severity of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerdutyConfigs.  # noqa: E501
        :type: str
        """

        self._severity = severity

    @property
    def url(self):
        """Gets the url of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerdutyConfigs.  # noqa: E501

        The URL to send requests to.  # noqa: E501

        :return: The url of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerdutyConfigs.  # noqa: E501
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerdutyConfigs.

        The URL to send requests to.  # noqa: E501

        :param url: The url of this ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerdutyConfigs.  # noqa: E501
        :type: str
        """

        self._url = url

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerdutyConfigs):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecPagerdutyConfigs):
            return True

        return self.to_dict() != other.to_dict()
