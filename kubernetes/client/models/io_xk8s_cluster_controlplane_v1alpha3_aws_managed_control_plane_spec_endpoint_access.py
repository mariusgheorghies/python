# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1.20.7
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from kubernetes.client.configuration import Configuration


class IoXK8sClusterControlplaneV1alpha3AWSManagedControlPlaneSpecEndpointAccess(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'private': 'bool',
        'public': 'bool',
        'public_cid_rs': 'list[str]'
    }

    attribute_map = {
        'private': 'private',
        'public': 'public',
        'public_cid_rs': 'publicCIDRs'
    }

    def __init__(self, private=None, public=None, public_cid_rs=None, local_vars_configuration=None):  # noqa: E501
        """IoXK8sClusterControlplaneV1alpha3AWSManagedControlPlaneSpecEndpointAccess - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._private = None
        self._public = None
        self._public_cid_rs = None
        self.discriminator = None

        if private is not None:
            self.private = private
        if public is not None:
            self.public = public
        if public_cid_rs is not None:
            self.public_cid_rs = public_cid_rs

    @property
    def private(self):
        """Gets the private of this IoXK8sClusterControlplaneV1alpha3AWSManagedControlPlaneSpecEndpointAccess.  # noqa: E501

        Private points VPC-internal control plane access to the private endpoint  # noqa: E501

        :return: The private of this IoXK8sClusterControlplaneV1alpha3AWSManagedControlPlaneSpecEndpointAccess.  # noqa: E501
        :rtype: bool
        """
        return self._private

    @private.setter
    def private(self, private):
        """Sets the private of this IoXK8sClusterControlplaneV1alpha3AWSManagedControlPlaneSpecEndpointAccess.

        Private points VPC-internal control plane access to the private endpoint  # noqa: E501

        :param private: The private of this IoXK8sClusterControlplaneV1alpha3AWSManagedControlPlaneSpecEndpointAccess.  # noqa: E501
        :type: bool
        """

        self._private = private

    @property
    def public(self):
        """Gets the public of this IoXK8sClusterControlplaneV1alpha3AWSManagedControlPlaneSpecEndpointAccess.  # noqa: E501

        Public controls whether control plane endpoints are publicly accessible  # noqa: E501

        :return: The public of this IoXK8sClusterControlplaneV1alpha3AWSManagedControlPlaneSpecEndpointAccess.  # noqa: E501
        :rtype: bool
        """
        return self._public

    @public.setter
    def public(self, public):
        """Sets the public of this IoXK8sClusterControlplaneV1alpha3AWSManagedControlPlaneSpecEndpointAccess.

        Public controls whether control plane endpoints are publicly accessible  # noqa: E501

        :param public: The public of this IoXK8sClusterControlplaneV1alpha3AWSManagedControlPlaneSpecEndpointAccess.  # noqa: E501
        :type: bool
        """

        self._public = public

    @property
    def public_cid_rs(self):
        """Gets the public_cid_rs of this IoXK8sClusterControlplaneV1alpha3AWSManagedControlPlaneSpecEndpointAccess.  # noqa: E501

        PublicCIDRs specifies which blocks can access the public endpoint  # noqa: E501

        :return: The public_cid_rs of this IoXK8sClusterControlplaneV1alpha3AWSManagedControlPlaneSpecEndpointAccess.  # noqa: E501
        :rtype: list[str]
        """
        return self._public_cid_rs

    @public_cid_rs.setter
    def public_cid_rs(self, public_cid_rs):
        """Sets the public_cid_rs of this IoXK8sClusterControlplaneV1alpha3AWSManagedControlPlaneSpecEndpointAccess.

        PublicCIDRs specifies which blocks can access the public endpoint  # noqa: E501

        :param public_cid_rs: The public_cid_rs of this IoXK8sClusterControlplaneV1alpha3AWSManagedControlPlaneSpecEndpointAccess.  # noqa: E501
        :type: list[str]
        """

        self._public_cid_rs = public_cid_rs

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, IoXK8sClusterControlplaneV1alpha3AWSManagedControlPlaneSpecEndpointAccess):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, IoXK8sClusterControlplaneV1alpha3AWSManagedControlPlaneSpecEndpointAccess):
            return True

        return self.to_dict() != other.to_dict()
