# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1.20.7
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from kubernetes.client.configuration import Configuration


class ComCoreosMonitoringV1PrometheusSpecThanos(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'base_image': 'str',
        'grpc_server_tls_config': 'ComCoreosMonitoringV1PrometheusSpecThanosGrpcServerTlsConfig',
        'image': 'str',
        'listen_local': 'bool',
        'log_format': 'str',
        'log_level': 'str',
        'min_time': 'str',
        'object_storage_config': 'ComCoreosMonitoringV1PrometheusSpecThanosObjectStorageConfig',
        'object_storage_config_file': 'str',
        'ready_timeout': 'str',
        'resources': 'ComCoreosMonitoringV1PrometheusSpecThanosResources',
        'sha': 'str',
        'tag': 'str',
        'tracing_config': 'ComCoreosMonitoringV1PrometheusSpecThanosTracingConfig',
        'tracing_config_file': 'str',
        'version': 'str'
    }

    attribute_map = {
        'base_image': 'baseImage',
        'grpc_server_tls_config': 'grpcServerTlsConfig',
        'image': 'image',
        'listen_local': 'listenLocal',
        'log_format': 'logFormat',
        'log_level': 'logLevel',
        'min_time': 'minTime',
        'object_storage_config': 'objectStorageConfig',
        'object_storage_config_file': 'objectStorageConfigFile',
        'ready_timeout': 'readyTimeout',
        'resources': 'resources',
        'sha': 'sha',
        'tag': 'tag',
        'tracing_config': 'tracingConfig',
        'tracing_config_file': 'tracingConfigFile',
        'version': 'version'
    }

    def __init__(self, base_image=None, grpc_server_tls_config=None, image=None, listen_local=None, log_format=None, log_level=None, min_time=None, object_storage_config=None, object_storage_config_file=None, ready_timeout=None, resources=None, sha=None, tag=None, tracing_config=None, tracing_config_file=None, version=None, local_vars_configuration=None):  # noqa: E501
        """ComCoreosMonitoringV1PrometheusSpecThanos - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._base_image = None
        self._grpc_server_tls_config = None
        self._image = None
        self._listen_local = None
        self._log_format = None
        self._log_level = None
        self._min_time = None
        self._object_storage_config = None
        self._object_storage_config_file = None
        self._ready_timeout = None
        self._resources = None
        self._sha = None
        self._tag = None
        self._tracing_config = None
        self._tracing_config_file = None
        self._version = None
        self.discriminator = None

        if base_image is not None:
            self.base_image = base_image
        if grpc_server_tls_config is not None:
            self.grpc_server_tls_config = grpc_server_tls_config
        if image is not None:
            self.image = image
        if listen_local is not None:
            self.listen_local = listen_local
        if log_format is not None:
            self.log_format = log_format
        if log_level is not None:
            self.log_level = log_level
        if min_time is not None:
            self.min_time = min_time
        if object_storage_config is not None:
            self.object_storage_config = object_storage_config
        if object_storage_config_file is not None:
            self.object_storage_config_file = object_storage_config_file
        if ready_timeout is not None:
            self.ready_timeout = ready_timeout
        if resources is not None:
            self.resources = resources
        if sha is not None:
            self.sha = sha
        if tag is not None:
            self.tag = tag
        if tracing_config is not None:
            self.tracing_config = tracing_config
        if tracing_config_file is not None:
            self.tracing_config_file = tracing_config_file
        if version is not None:
            self.version = version

    @property
    def base_image(self):
        """Gets the base_image of this ComCoreosMonitoringV1PrometheusSpecThanos.  # noqa: E501

        Thanos base image if other than default. Deprecated: use 'image' instead  # noqa: E501

        :return: The base_image of this ComCoreosMonitoringV1PrometheusSpecThanos.  # noqa: E501
        :rtype: str
        """
        return self._base_image

    @base_image.setter
    def base_image(self, base_image):
        """Sets the base_image of this ComCoreosMonitoringV1PrometheusSpecThanos.

        Thanos base image if other than default. Deprecated: use 'image' instead  # noqa: E501

        :param base_image: The base_image of this ComCoreosMonitoringV1PrometheusSpecThanos.  # noqa: E501
        :type: str
        """

        self._base_image = base_image

    @property
    def grpc_server_tls_config(self):
        """Gets the grpc_server_tls_config of this ComCoreosMonitoringV1PrometheusSpecThanos.  # noqa: E501


        :return: The grpc_server_tls_config of this ComCoreosMonitoringV1PrometheusSpecThanos.  # noqa: E501
        :rtype: ComCoreosMonitoringV1PrometheusSpecThanosGrpcServerTlsConfig
        """
        return self._grpc_server_tls_config

    @grpc_server_tls_config.setter
    def grpc_server_tls_config(self, grpc_server_tls_config):
        """Sets the grpc_server_tls_config of this ComCoreosMonitoringV1PrometheusSpecThanos.


        :param grpc_server_tls_config: The grpc_server_tls_config of this ComCoreosMonitoringV1PrometheusSpecThanos.  # noqa: E501
        :type: ComCoreosMonitoringV1PrometheusSpecThanosGrpcServerTlsConfig
        """

        self._grpc_server_tls_config = grpc_server_tls_config

    @property
    def image(self):
        """Gets the image of this ComCoreosMonitoringV1PrometheusSpecThanos.  # noqa: E501

        Image if specified has precedence over baseImage, tag and sha combinations. Specifying the version is still necessary to ensure the Prometheus Operator knows what version of Thanos is being configured.  # noqa: E501

        :return: The image of this ComCoreosMonitoringV1PrometheusSpecThanos.  # noqa: E501
        :rtype: str
        """
        return self._image

    @image.setter
    def image(self, image):
        """Sets the image of this ComCoreosMonitoringV1PrometheusSpecThanos.

        Image if specified has precedence over baseImage, tag and sha combinations. Specifying the version is still necessary to ensure the Prometheus Operator knows what version of Thanos is being configured.  # noqa: E501

        :param image: The image of this ComCoreosMonitoringV1PrometheusSpecThanos.  # noqa: E501
        :type: str
        """

        self._image = image

    @property
    def listen_local(self):
        """Gets the listen_local of this ComCoreosMonitoringV1PrometheusSpecThanos.  # noqa: E501

        ListenLocal makes the Thanos sidecar listen on loopback, so that it does not bind against the Pod IP.  # noqa: E501

        :return: The listen_local of this ComCoreosMonitoringV1PrometheusSpecThanos.  # noqa: E501
        :rtype: bool
        """
        return self._listen_local

    @listen_local.setter
    def listen_local(self, listen_local):
        """Sets the listen_local of this ComCoreosMonitoringV1PrometheusSpecThanos.

        ListenLocal makes the Thanos sidecar listen on loopback, so that it does not bind against the Pod IP.  # noqa: E501

        :param listen_local: The listen_local of this ComCoreosMonitoringV1PrometheusSpecThanos.  # noqa: E501
        :type: bool
        """

        self._listen_local = listen_local

    @property
    def log_format(self):
        """Gets the log_format of this ComCoreosMonitoringV1PrometheusSpecThanos.  # noqa: E501

        LogFormat for Thanos sidecar to be configured with.  # noqa: E501

        :return: The log_format of this ComCoreosMonitoringV1PrometheusSpecThanos.  # noqa: E501
        :rtype: str
        """
        return self._log_format

    @log_format.setter
    def log_format(self, log_format):
        """Sets the log_format of this ComCoreosMonitoringV1PrometheusSpecThanos.

        LogFormat for Thanos sidecar to be configured with.  # noqa: E501

        :param log_format: The log_format of this ComCoreosMonitoringV1PrometheusSpecThanos.  # noqa: E501
        :type: str
        """

        self._log_format = log_format

    @property
    def log_level(self):
        """Gets the log_level of this ComCoreosMonitoringV1PrometheusSpecThanos.  # noqa: E501

        LogLevel for Thanos sidecar to be configured with.  # noqa: E501

        :return: The log_level of this ComCoreosMonitoringV1PrometheusSpecThanos.  # noqa: E501
        :rtype: str
        """
        return self._log_level

    @log_level.setter
    def log_level(self, log_level):
        """Sets the log_level of this ComCoreosMonitoringV1PrometheusSpecThanos.

        LogLevel for Thanos sidecar to be configured with.  # noqa: E501

        :param log_level: The log_level of this ComCoreosMonitoringV1PrometheusSpecThanos.  # noqa: E501
        :type: str
        """

        self._log_level = log_level

    @property
    def min_time(self):
        """Gets the min_time of this ComCoreosMonitoringV1PrometheusSpecThanos.  # noqa: E501

        MinTime for Thanos sidecar to be configured with. Option can be a constant time in RFC3339 format or time duration relative to current time, such as -1d or 2h45m. Valid duration units are ms, s, m, h, d, w, y.  # noqa: E501

        :return: The min_time of this ComCoreosMonitoringV1PrometheusSpecThanos.  # noqa: E501
        :rtype: str
        """
        return self._min_time

    @min_time.setter
    def min_time(self, min_time):
        """Sets the min_time of this ComCoreosMonitoringV1PrometheusSpecThanos.

        MinTime for Thanos sidecar to be configured with. Option can be a constant time in RFC3339 format or time duration relative to current time, such as -1d or 2h45m. Valid duration units are ms, s, m, h, d, w, y.  # noqa: E501

        :param min_time: The min_time of this ComCoreosMonitoringV1PrometheusSpecThanos.  # noqa: E501
        :type: str
        """

        self._min_time = min_time

    @property
    def object_storage_config(self):
        """Gets the object_storage_config of this ComCoreosMonitoringV1PrometheusSpecThanos.  # noqa: E501


        :return: The object_storage_config of this ComCoreosMonitoringV1PrometheusSpecThanos.  # noqa: E501
        :rtype: ComCoreosMonitoringV1PrometheusSpecThanosObjectStorageConfig
        """
        return self._object_storage_config

    @object_storage_config.setter
    def object_storage_config(self, object_storage_config):
        """Sets the object_storage_config of this ComCoreosMonitoringV1PrometheusSpecThanos.


        :param object_storage_config: The object_storage_config of this ComCoreosMonitoringV1PrometheusSpecThanos.  # noqa: E501
        :type: ComCoreosMonitoringV1PrometheusSpecThanosObjectStorageConfig
        """

        self._object_storage_config = object_storage_config

    @property
    def object_storage_config_file(self):
        """Gets the object_storage_config_file of this ComCoreosMonitoringV1PrometheusSpecThanos.  # noqa: E501

        ObjectStorageConfigFile specifies the path of the object storage configuration file. When used alongside with ObjectStorageConfig, ObjectStorageConfigFile takes precedence.  # noqa: E501

        :return: The object_storage_config_file of this ComCoreosMonitoringV1PrometheusSpecThanos.  # noqa: E501
        :rtype: str
        """
        return self._object_storage_config_file

    @object_storage_config_file.setter
    def object_storage_config_file(self, object_storage_config_file):
        """Sets the object_storage_config_file of this ComCoreosMonitoringV1PrometheusSpecThanos.

        ObjectStorageConfigFile specifies the path of the object storage configuration file. When used alongside with ObjectStorageConfig, ObjectStorageConfigFile takes precedence.  # noqa: E501

        :param object_storage_config_file: The object_storage_config_file of this ComCoreosMonitoringV1PrometheusSpecThanos.  # noqa: E501
        :type: str
        """

        self._object_storage_config_file = object_storage_config_file

    @property
    def ready_timeout(self):
        """Gets the ready_timeout of this ComCoreosMonitoringV1PrometheusSpecThanos.  # noqa: E501

        ReadyTimeout is the maximum time Thanos sidecar will wait for Prometheus to start. Eg 10m  # noqa: E501

        :return: The ready_timeout of this ComCoreosMonitoringV1PrometheusSpecThanos.  # noqa: E501
        :rtype: str
        """
        return self._ready_timeout

    @ready_timeout.setter
    def ready_timeout(self, ready_timeout):
        """Sets the ready_timeout of this ComCoreosMonitoringV1PrometheusSpecThanos.

        ReadyTimeout is the maximum time Thanos sidecar will wait for Prometheus to start. Eg 10m  # noqa: E501

        :param ready_timeout: The ready_timeout of this ComCoreosMonitoringV1PrometheusSpecThanos.  # noqa: E501
        :type: str
        """

        self._ready_timeout = ready_timeout

    @property
    def resources(self):
        """Gets the resources of this ComCoreosMonitoringV1PrometheusSpecThanos.  # noqa: E501


        :return: The resources of this ComCoreosMonitoringV1PrometheusSpecThanos.  # noqa: E501
        :rtype: ComCoreosMonitoringV1PrometheusSpecThanosResources
        """
        return self._resources

    @resources.setter
    def resources(self, resources):
        """Sets the resources of this ComCoreosMonitoringV1PrometheusSpecThanos.


        :param resources: The resources of this ComCoreosMonitoringV1PrometheusSpecThanos.  # noqa: E501
        :type: ComCoreosMonitoringV1PrometheusSpecThanosResources
        """

        self._resources = resources

    @property
    def sha(self):
        """Gets the sha of this ComCoreosMonitoringV1PrometheusSpecThanos.  # noqa: E501

        SHA of Thanos container image to be deployed. Defaults to the value of `version`. Similar to a tag, but the SHA explicitly deploys an immutable container image. Version and Tag are ignored if SHA is set. Deprecated: use 'image' instead.  The image digest can be specified as part of the image URL.  # noqa: E501

        :return: The sha of this ComCoreosMonitoringV1PrometheusSpecThanos.  # noqa: E501
        :rtype: str
        """
        return self._sha

    @sha.setter
    def sha(self, sha):
        """Sets the sha of this ComCoreosMonitoringV1PrometheusSpecThanos.

        SHA of Thanos container image to be deployed. Defaults to the value of `version`. Similar to a tag, but the SHA explicitly deploys an immutable container image. Version and Tag are ignored if SHA is set. Deprecated: use 'image' instead.  The image digest can be specified as part of the image URL.  # noqa: E501

        :param sha: The sha of this ComCoreosMonitoringV1PrometheusSpecThanos.  # noqa: E501
        :type: str
        """

        self._sha = sha

    @property
    def tag(self):
        """Gets the tag of this ComCoreosMonitoringV1PrometheusSpecThanos.  # noqa: E501

        Tag of Thanos sidecar container image to be deployed. Defaults to the value of `version`. Version is ignored if Tag is set. Deprecated: use 'image' instead.  The image tag can be specified as part of the image URL.  # noqa: E501

        :return: The tag of this ComCoreosMonitoringV1PrometheusSpecThanos.  # noqa: E501
        :rtype: str
        """
        return self._tag

    @tag.setter
    def tag(self, tag):
        """Sets the tag of this ComCoreosMonitoringV1PrometheusSpecThanos.

        Tag of Thanos sidecar container image to be deployed. Defaults to the value of `version`. Version is ignored if Tag is set. Deprecated: use 'image' instead.  The image tag can be specified as part of the image URL.  # noqa: E501

        :param tag: The tag of this ComCoreosMonitoringV1PrometheusSpecThanos.  # noqa: E501
        :type: str
        """

        self._tag = tag

    @property
    def tracing_config(self):
        """Gets the tracing_config of this ComCoreosMonitoringV1PrometheusSpecThanos.  # noqa: E501


        :return: The tracing_config of this ComCoreosMonitoringV1PrometheusSpecThanos.  # noqa: E501
        :rtype: ComCoreosMonitoringV1PrometheusSpecThanosTracingConfig
        """
        return self._tracing_config

    @tracing_config.setter
    def tracing_config(self, tracing_config):
        """Sets the tracing_config of this ComCoreosMonitoringV1PrometheusSpecThanos.


        :param tracing_config: The tracing_config of this ComCoreosMonitoringV1PrometheusSpecThanos.  # noqa: E501
        :type: ComCoreosMonitoringV1PrometheusSpecThanosTracingConfig
        """

        self._tracing_config = tracing_config

    @property
    def tracing_config_file(self):
        """Gets the tracing_config_file of this ComCoreosMonitoringV1PrometheusSpecThanos.  # noqa: E501

        TracingConfig specifies the path of the tracing configuration file. When used alongside with TracingConfig, TracingConfigFile takes precedence.  # noqa: E501

        :return: The tracing_config_file of this ComCoreosMonitoringV1PrometheusSpecThanos.  # noqa: E501
        :rtype: str
        """
        return self._tracing_config_file

    @tracing_config_file.setter
    def tracing_config_file(self, tracing_config_file):
        """Sets the tracing_config_file of this ComCoreosMonitoringV1PrometheusSpecThanos.

        TracingConfig specifies the path of the tracing configuration file. When used alongside with TracingConfig, TracingConfigFile takes precedence.  # noqa: E501

        :param tracing_config_file: The tracing_config_file of this ComCoreosMonitoringV1PrometheusSpecThanos.  # noqa: E501
        :type: str
        """

        self._tracing_config_file = tracing_config_file

    @property
    def version(self):
        """Gets the version of this ComCoreosMonitoringV1PrometheusSpecThanos.  # noqa: E501

        Version describes the version of Thanos to use.  # noqa: E501

        :return: The version of this ComCoreosMonitoringV1PrometheusSpecThanos.  # noqa: E501
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this ComCoreosMonitoringV1PrometheusSpecThanos.

        Version describes the version of Thanos to use.  # noqa: E501

        :param version: The version of this ComCoreosMonitoringV1PrometheusSpecThanos.  # noqa: E501
        :type: str
        """

        self._version = version

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ComCoreosMonitoringV1PrometheusSpecThanos):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, ComCoreosMonitoringV1PrometheusSpecThanos):
            return True

        return self.to_dict() != other.to_dict()
