# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1.20.7
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from kubernetes.client.configuration import Configuration


class IoXK8sClusterV1alpha4ClusterClassSpecWorkersTemplate(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'bootstrap': 'IoXK8sClusterV1alpha4ClusterClassSpecWorkersTemplateBootstrap',
        'infrastructure': 'IoXK8sClusterV1alpha4ClusterClassSpecWorkersTemplateInfrastructure',
        'metadata': 'IoXK8sClusterV1alpha4ClusterClassSpecWorkersTemplateMetadata'
    }

    attribute_map = {
        'bootstrap': 'bootstrap',
        'infrastructure': 'infrastructure',
        'metadata': 'metadata'
    }

    def __init__(self, bootstrap=None, infrastructure=None, metadata=None, local_vars_configuration=None):  # noqa: E501
        """IoXK8sClusterV1alpha4ClusterClassSpecWorkersTemplate - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._bootstrap = None
        self._infrastructure = None
        self._metadata = None
        self.discriminator = None

        self.bootstrap = bootstrap
        self.infrastructure = infrastructure
        if metadata is not None:
            self.metadata = metadata

    @property
    def bootstrap(self):
        """Gets the bootstrap of this IoXK8sClusterV1alpha4ClusterClassSpecWorkersTemplate.  # noqa: E501


        :return: The bootstrap of this IoXK8sClusterV1alpha4ClusterClassSpecWorkersTemplate.  # noqa: E501
        :rtype: IoXK8sClusterV1alpha4ClusterClassSpecWorkersTemplateBootstrap
        """
        return self._bootstrap

    @bootstrap.setter
    def bootstrap(self, bootstrap):
        """Sets the bootstrap of this IoXK8sClusterV1alpha4ClusterClassSpecWorkersTemplate.


        :param bootstrap: The bootstrap of this IoXK8sClusterV1alpha4ClusterClassSpecWorkersTemplate.  # noqa: E501
        :type: IoXK8sClusterV1alpha4ClusterClassSpecWorkersTemplateBootstrap
        """
        if self.local_vars_configuration.client_side_validation and bootstrap is None:  # noqa: E501
            raise ValueError("Invalid value for `bootstrap`, must not be `None`")  # noqa: E501

        self._bootstrap = bootstrap

    @property
    def infrastructure(self):
        """Gets the infrastructure of this IoXK8sClusterV1alpha4ClusterClassSpecWorkersTemplate.  # noqa: E501


        :return: The infrastructure of this IoXK8sClusterV1alpha4ClusterClassSpecWorkersTemplate.  # noqa: E501
        :rtype: IoXK8sClusterV1alpha4ClusterClassSpecWorkersTemplateInfrastructure
        """
        return self._infrastructure

    @infrastructure.setter
    def infrastructure(self, infrastructure):
        """Sets the infrastructure of this IoXK8sClusterV1alpha4ClusterClassSpecWorkersTemplate.


        :param infrastructure: The infrastructure of this IoXK8sClusterV1alpha4ClusterClassSpecWorkersTemplate.  # noqa: E501
        :type: IoXK8sClusterV1alpha4ClusterClassSpecWorkersTemplateInfrastructure
        """
        if self.local_vars_configuration.client_side_validation and infrastructure is None:  # noqa: E501
            raise ValueError("Invalid value for `infrastructure`, must not be `None`")  # noqa: E501

        self._infrastructure = infrastructure

    @property
    def metadata(self):
        """Gets the metadata of this IoXK8sClusterV1alpha4ClusterClassSpecWorkersTemplate.  # noqa: E501


        :return: The metadata of this IoXK8sClusterV1alpha4ClusterClassSpecWorkersTemplate.  # noqa: E501
        :rtype: IoXK8sClusterV1alpha4ClusterClassSpecWorkersTemplateMetadata
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this IoXK8sClusterV1alpha4ClusterClassSpecWorkersTemplate.


        :param metadata: The metadata of this IoXK8sClusterV1alpha4ClusterClassSpecWorkersTemplate.  # noqa: E501
        :type: IoXK8sClusterV1alpha4ClusterClassSpecWorkersTemplateMetadata
        """

        self._metadata = metadata

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, IoXK8sClusterV1alpha4ClusterClassSpecWorkersTemplate):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, IoXK8sClusterV1alpha4ClusterClassSpecWorkersTemplate):
            return True

        return self.to_dict() != other.to_dict()
