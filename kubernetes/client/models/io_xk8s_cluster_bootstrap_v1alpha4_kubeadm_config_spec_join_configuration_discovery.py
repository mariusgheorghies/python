# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1.20.7
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from kubernetes.client.configuration import Configuration


class IoXK8sClusterBootstrapV1alpha4KubeadmConfigSpecJoinConfigurationDiscovery(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'bootstrap_token': 'IoXK8sClusterBootstrapV1alpha4KubeadmConfigSpecJoinConfigurationDiscoveryBootstrapToken',
        'file': 'IoXK8sClusterBootstrapV1alpha3KubeadmConfigSpecJoinConfigurationDiscoveryFile',
        'timeout': 'str',
        'tls_bootstrap_token': 'str'
    }

    attribute_map = {
        'bootstrap_token': 'bootstrapToken',
        'file': 'file',
        'timeout': 'timeout',
        'tls_bootstrap_token': 'tlsBootstrapToken'
    }

    def __init__(self, bootstrap_token=None, file=None, timeout=None, tls_bootstrap_token=None, local_vars_configuration=None):  # noqa: E501
        """IoXK8sClusterBootstrapV1alpha4KubeadmConfigSpecJoinConfigurationDiscovery - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._bootstrap_token = None
        self._file = None
        self._timeout = None
        self._tls_bootstrap_token = None
        self.discriminator = None

        if bootstrap_token is not None:
            self.bootstrap_token = bootstrap_token
        if file is not None:
            self.file = file
        if timeout is not None:
            self.timeout = timeout
        if tls_bootstrap_token is not None:
            self.tls_bootstrap_token = tls_bootstrap_token

    @property
    def bootstrap_token(self):
        """Gets the bootstrap_token of this IoXK8sClusterBootstrapV1alpha4KubeadmConfigSpecJoinConfigurationDiscovery.  # noqa: E501


        :return: The bootstrap_token of this IoXK8sClusterBootstrapV1alpha4KubeadmConfigSpecJoinConfigurationDiscovery.  # noqa: E501
        :rtype: IoXK8sClusterBootstrapV1alpha4KubeadmConfigSpecJoinConfigurationDiscoveryBootstrapToken
        """
        return self._bootstrap_token

    @bootstrap_token.setter
    def bootstrap_token(self, bootstrap_token):
        """Sets the bootstrap_token of this IoXK8sClusterBootstrapV1alpha4KubeadmConfigSpecJoinConfigurationDiscovery.


        :param bootstrap_token: The bootstrap_token of this IoXK8sClusterBootstrapV1alpha4KubeadmConfigSpecJoinConfigurationDiscovery.  # noqa: E501
        :type: IoXK8sClusterBootstrapV1alpha4KubeadmConfigSpecJoinConfigurationDiscoveryBootstrapToken
        """

        self._bootstrap_token = bootstrap_token

    @property
    def file(self):
        """Gets the file of this IoXK8sClusterBootstrapV1alpha4KubeadmConfigSpecJoinConfigurationDiscovery.  # noqa: E501


        :return: The file of this IoXK8sClusterBootstrapV1alpha4KubeadmConfigSpecJoinConfigurationDiscovery.  # noqa: E501
        :rtype: IoXK8sClusterBootstrapV1alpha3KubeadmConfigSpecJoinConfigurationDiscoveryFile
        """
        return self._file

    @file.setter
    def file(self, file):
        """Sets the file of this IoXK8sClusterBootstrapV1alpha4KubeadmConfigSpecJoinConfigurationDiscovery.


        :param file: The file of this IoXK8sClusterBootstrapV1alpha4KubeadmConfigSpecJoinConfigurationDiscovery.  # noqa: E501
        :type: IoXK8sClusterBootstrapV1alpha3KubeadmConfigSpecJoinConfigurationDiscoveryFile
        """

        self._file = file

    @property
    def timeout(self):
        """Gets the timeout of this IoXK8sClusterBootstrapV1alpha4KubeadmConfigSpecJoinConfigurationDiscovery.  # noqa: E501

        Timeout modifies the discovery timeout  # noqa: E501

        :return: The timeout of this IoXK8sClusterBootstrapV1alpha4KubeadmConfigSpecJoinConfigurationDiscovery.  # noqa: E501
        :rtype: str
        """
        return self._timeout

    @timeout.setter
    def timeout(self, timeout):
        """Sets the timeout of this IoXK8sClusterBootstrapV1alpha4KubeadmConfigSpecJoinConfigurationDiscovery.

        Timeout modifies the discovery timeout  # noqa: E501

        :param timeout: The timeout of this IoXK8sClusterBootstrapV1alpha4KubeadmConfigSpecJoinConfigurationDiscovery.  # noqa: E501
        :type: str
        """

        self._timeout = timeout

    @property
    def tls_bootstrap_token(self):
        """Gets the tls_bootstrap_token of this IoXK8sClusterBootstrapV1alpha4KubeadmConfigSpecJoinConfigurationDiscovery.  # noqa: E501

        TLSBootstrapToken is a token used for TLS bootstrapping. If .BootstrapToken is set, this field is defaulted to .BootstrapToken.Token, but can be overridden. If .File is set, this field **must be set** in case the KubeConfigFile does not contain any other authentication information  # noqa: E501

        :return: The tls_bootstrap_token of this IoXK8sClusterBootstrapV1alpha4KubeadmConfigSpecJoinConfigurationDiscovery.  # noqa: E501
        :rtype: str
        """
        return self._tls_bootstrap_token

    @tls_bootstrap_token.setter
    def tls_bootstrap_token(self, tls_bootstrap_token):
        """Sets the tls_bootstrap_token of this IoXK8sClusterBootstrapV1alpha4KubeadmConfigSpecJoinConfigurationDiscovery.

        TLSBootstrapToken is a token used for TLS bootstrapping. If .BootstrapToken is set, this field is defaulted to .BootstrapToken.Token, but can be overridden. If .File is set, this field **must be set** in case the KubeConfigFile does not contain any other authentication information  # noqa: E501

        :param tls_bootstrap_token: The tls_bootstrap_token of this IoXK8sClusterBootstrapV1alpha4KubeadmConfigSpecJoinConfigurationDiscovery.  # noqa: E501
        :type: str
        """

        self._tls_bootstrap_token = tls_bootstrap_token

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, IoXK8sClusterBootstrapV1alpha4KubeadmConfigSpecJoinConfigurationDiscovery):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, IoXK8sClusterBootstrapV1alpha4KubeadmConfigSpecJoinConfigurationDiscovery):
            return True

        return self.to_dict() != other.to_dict()
