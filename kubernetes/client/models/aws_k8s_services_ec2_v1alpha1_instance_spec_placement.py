# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1.25.12
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from kubernetes.client.configuration import Configuration


class AwsK8sServicesEc2V1alpha1InstanceSpecPlacement(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'affinity': 'str',
        'availability_zone': 'str',
        'group_name': 'str',
        'host_id': 'str',
        'host_resource_group_arn': 'str',
        'partition_number': 'int',
        'spread_domain': 'str',
        'tenancy': 'str'
    }

    attribute_map = {
        'affinity': 'affinity',
        'availability_zone': 'availabilityZone',
        'group_name': 'groupName',
        'host_id': 'hostID',
        'host_resource_group_arn': 'hostResourceGroupARN',
        'partition_number': 'partitionNumber',
        'spread_domain': 'spreadDomain',
        'tenancy': 'tenancy'
    }

    def __init__(self, affinity=None, availability_zone=None, group_name=None, host_id=None, host_resource_group_arn=None, partition_number=None, spread_domain=None, tenancy=None, local_vars_configuration=None):  # noqa: E501
        """AwsK8sServicesEc2V1alpha1InstanceSpecPlacement - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._affinity = None
        self._availability_zone = None
        self._group_name = None
        self._host_id = None
        self._host_resource_group_arn = None
        self._partition_number = None
        self._spread_domain = None
        self._tenancy = None
        self.discriminator = None

        if affinity is not None:
            self.affinity = affinity
        if availability_zone is not None:
            self.availability_zone = availability_zone
        if group_name is not None:
            self.group_name = group_name
        if host_id is not None:
            self.host_id = host_id
        if host_resource_group_arn is not None:
            self.host_resource_group_arn = host_resource_group_arn
        if partition_number is not None:
            self.partition_number = partition_number
        if spread_domain is not None:
            self.spread_domain = spread_domain
        if tenancy is not None:
            self.tenancy = tenancy

    @property
    def affinity(self):
        """Gets the affinity of this AwsK8sServicesEc2V1alpha1InstanceSpecPlacement.  # noqa: E501


        :return: The affinity of this AwsK8sServicesEc2V1alpha1InstanceSpecPlacement.  # noqa: E501
        :rtype: str
        """
        return self._affinity

    @affinity.setter
    def affinity(self, affinity):
        """Sets the affinity of this AwsK8sServicesEc2V1alpha1InstanceSpecPlacement.


        :param affinity: The affinity of this AwsK8sServicesEc2V1alpha1InstanceSpecPlacement.  # noqa: E501
        :type: str
        """

        self._affinity = affinity

    @property
    def availability_zone(self):
        """Gets the availability_zone of this AwsK8sServicesEc2V1alpha1InstanceSpecPlacement.  # noqa: E501


        :return: The availability_zone of this AwsK8sServicesEc2V1alpha1InstanceSpecPlacement.  # noqa: E501
        :rtype: str
        """
        return self._availability_zone

    @availability_zone.setter
    def availability_zone(self, availability_zone):
        """Sets the availability_zone of this AwsK8sServicesEc2V1alpha1InstanceSpecPlacement.


        :param availability_zone: The availability_zone of this AwsK8sServicesEc2V1alpha1InstanceSpecPlacement.  # noqa: E501
        :type: str
        """

        self._availability_zone = availability_zone

    @property
    def group_name(self):
        """Gets the group_name of this AwsK8sServicesEc2V1alpha1InstanceSpecPlacement.  # noqa: E501


        :return: The group_name of this AwsK8sServicesEc2V1alpha1InstanceSpecPlacement.  # noqa: E501
        :rtype: str
        """
        return self._group_name

    @group_name.setter
    def group_name(self, group_name):
        """Sets the group_name of this AwsK8sServicesEc2V1alpha1InstanceSpecPlacement.


        :param group_name: The group_name of this AwsK8sServicesEc2V1alpha1InstanceSpecPlacement.  # noqa: E501
        :type: str
        """

        self._group_name = group_name

    @property
    def host_id(self):
        """Gets the host_id of this AwsK8sServicesEc2V1alpha1InstanceSpecPlacement.  # noqa: E501


        :return: The host_id of this AwsK8sServicesEc2V1alpha1InstanceSpecPlacement.  # noqa: E501
        :rtype: str
        """
        return self._host_id

    @host_id.setter
    def host_id(self, host_id):
        """Sets the host_id of this AwsK8sServicesEc2V1alpha1InstanceSpecPlacement.


        :param host_id: The host_id of this AwsK8sServicesEc2V1alpha1InstanceSpecPlacement.  # noqa: E501
        :type: str
        """

        self._host_id = host_id

    @property
    def host_resource_group_arn(self):
        """Gets the host_resource_group_arn of this AwsK8sServicesEc2V1alpha1InstanceSpecPlacement.  # noqa: E501


        :return: The host_resource_group_arn of this AwsK8sServicesEc2V1alpha1InstanceSpecPlacement.  # noqa: E501
        :rtype: str
        """
        return self._host_resource_group_arn

    @host_resource_group_arn.setter
    def host_resource_group_arn(self, host_resource_group_arn):
        """Sets the host_resource_group_arn of this AwsK8sServicesEc2V1alpha1InstanceSpecPlacement.


        :param host_resource_group_arn: The host_resource_group_arn of this AwsK8sServicesEc2V1alpha1InstanceSpecPlacement.  # noqa: E501
        :type: str
        """

        self._host_resource_group_arn = host_resource_group_arn

    @property
    def partition_number(self):
        """Gets the partition_number of this AwsK8sServicesEc2V1alpha1InstanceSpecPlacement.  # noqa: E501


        :return: The partition_number of this AwsK8sServicesEc2V1alpha1InstanceSpecPlacement.  # noqa: E501
        :rtype: int
        """
        return self._partition_number

    @partition_number.setter
    def partition_number(self, partition_number):
        """Sets the partition_number of this AwsK8sServicesEc2V1alpha1InstanceSpecPlacement.


        :param partition_number: The partition_number of this AwsK8sServicesEc2V1alpha1InstanceSpecPlacement.  # noqa: E501
        :type: int
        """

        self._partition_number = partition_number

    @property
    def spread_domain(self):
        """Gets the spread_domain of this AwsK8sServicesEc2V1alpha1InstanceSpecPlacement.  # noqa: E501


        :return: The spread_domain of this AwsK8sServicesEc2V1alpha1InstanceSpecPlacement.  # noqa: E501
        :rtype: str
        """
        return self._spread_domain

    @spread_domain.setter
    def spread_domain(self, spread_domain):
        """Sets the spread_domain of this AwsK8sServicesEc2V1alpha1InstanceSpecPlacement.


        :param spread_domain: The spread_domain of this AwsK8sServicesEc2V1alpha1InstanceSpecPlacement.  # noqa: E501
        :type: str
        """

        self._spread_domain = spread_domain

    @property
    def tenancy(self):
        """Gets the tenancy of this AwsK8sServicesEc2V1alpha1InstanceSpecPlacement.  # noqa: E501


        :return: The tenancy of this AwsK8sServicesEc2V1alpha1InstanceSpecPlacement.  # noqa: E501
        :rtype: str
        """
        return self._tenancy

    @tenancy.setter
    def tenancy(self, tenancy):
        """Sets the tenancy of this AwsK8sServicesEc2V1alpha1InstanceSpecPlacement.


        :param tenancy: The tenancy of this AwsK8sServicesEc2V1alpha1InstanceSpecPlacement.  # noqa: E501
        :type: str
        """

        self._tenancy = tenancy

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AwsK8sServicesEc2V1alpha1InstanceSpecPlacement):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, AwsK8sServicesEc2V1alpha1InstanceSpecPlacement):
            return True

        return self.to_dict() != other.to_dict()
