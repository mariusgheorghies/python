# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1.20.7
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from kubernetes.client.configuration import Configuration


class IoXK8sClusterBootstrapV1alpha3KubeadmConfigSpecInitConfiguration(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'api_version': 'str',
        'bootstrap_tokens': 'list[IoXK8sClusterBootstrapV1alpha3KubeadmConfigSpecInitConfigurationBootstrapTokens]',
        'kind': 'str',
        'local_api_endpoint': 'IoXK8sClusterBootstrapV1alpha3KubeadmConfigSpecInitConfigurationLocalAPIEndpoint',
        'node_registration': 'IoXK8sClusterBootstrapV1alpha3KubeadmConfigSpecInitConfigurationNodeRegistration'
    }

    attribute_map = {
        'api_version': 'apiVersion',
        'bootstrap_tokens': 'bootstrapTokens',
        'kind': 'kind',
        'local_api_endpoint': 'localAPIEndpoint',
        'node_registration': 'nodeRegistration'
    }

    def __init__(self, api_version=None, bootstrap_tokens=None, kind=None, local_api_endpoint=None, node_registration=None, local_vars_configuration=None):  # noqa: E501
        """IoXK8sClusterBootstrapV1alpha3KubeadmConfigSpecInitConfiguration - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._api_version = None
        self._bootstrap_tokens = None
        self._kind = None
        self._local_api_endpoint = None
        self._node_registration = None
        self.discriminator = None

        if api_version is not None:
            self.api_version = api_version
        if bootstrap_tokens is not None:
            self.bootstrap_tokens = bootstrap_tokens
        if kind is not None:
            self.kind = kind
        if local_api_endpoint is not None:
            self.local_api_endpoint = local_api_endpoint
        if node_registration is not None:
            self.node_registration = node_registration

    @property
    def api_version(self):
        """Gets the api_version of this IoXK8sClusterBootstrapV1alpha3KubeadmConfigSpecInitConfiguration.  # noqa: E501

        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources  # noqa: E501

        :return: The api_version of this IoXK8sClusterBootstrapV1alpha3KubeadmConfigSpecInitConfiguration.  # noqa: E501
        :rtype: str
        """
        return self._api_version

    @api_version.setter
    def api_version(self, api_version):
        """Sets the api_version of this IoXK8sClusterBootstrapV1alpha3KubeadmConfigSpecInitConfiguration.

        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources  # noqa: E501

        :param api_version: The api_version of this IoXK8sClusterBootstrapV1alpha3KubeadmConfigSpecInitConfiguration.  # noqa: E501
        :type: str
        """

        self._api_version = api_version

    @property
    def bootstrap_tokens(self):
        """Gets the bootstrap_tokens of this IoXK8sClusterBootstrapV1alpha3KubeadmConfigSpecInitConfiguration.  # noqa: E501

        BootstrapTokens is respected at `kubeadm init` time and describes a set of Bootstrap Tokens to create. This information IS NOT uploaded to the kubeadm cluster configmap, partly because of its sensitive nature  # noqa: E501

        :return: The bootstrap_tokens of this IoXK8sClusterBootstrapV1alpha3KubeadmConfigSpecInitConfiguration.  # noqa: E501
        :rtype: list[IoXK8sClusterBootstrapV1alpha3KubeadmConfigSpecInitConfigurationBootstrapTokens]
        """
        return self._bootstrap_tokens

    @bootstrap_tokens.setter
    def bootstrap_tokens(self, bootstrap_tokens):
        """Sets the bootstrap_tokens of this IoXK8sClusterBootstrapV1alpha3KubeadmConfigSpecInitConfiguration.

        BootstrapTokens is respected at `kubeadm init` time and describes a set of Bootstrap Tokens to create. This information IS NOT uploaded to the kubeadm cluster configmap, partly because of its sensitive nature  # noqa: E501

        :param bootstrap_tokens: The bootstrap_tokens of this IoXK8sClusterBootstrapV1alpha3KubeadmConfigSpecInitConfiguration.  # noqa: E501
        :type: list[IoXK8sClusterBootstrapV1alpha3KubeadmConfigSpecInitConfigurationBootstrapTokens]
        """

        self._bootstrap_tokens = bootstrap_tokens

    @property
    def kind(self):
        """Gets the kind of this IoXK8sClusterBootstrapV1alpha3KubeadmConfigSpecInitConfiguration.  # noqa: E501

        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds  # noqa: E501

        :return: The kind of this IoXK8sClusterBootstrapV1alpha3KubeadmConfigSpecInitConfiguration.  # noqa: E501
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this IoXK8sClusterBootstrapV1alpha3KubeadmConfigSpecInitConfiguration.

        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds  # noqa: E501

        :param kind: The kind of this IoXK8sClusterBootstrapV1alpha3KubeadmConfigSpecInitConfiguration.  # noqa: E501
        :type: str
        """

        self._kind = kind

    @property
    def local_api_endpoint(self):
        """Gets the local_api_endpoint of this IoXK8sClusterBootstrapV1alpha3KubeadmConfigSpecInitConfiguration.  # noqa: E501


        :return: The local_api_endpoint of this IoXK8sClusterBootstrapV1alpha3KubeadmConfigSpecInitConfiguration.  # noqa: E501
        :rtype: IoXK8sClusterBootstrapV1alpha3KubeadmConfigSpecInitConfigurationLocalAPIEndpoint
        """
        return self._local_api_endpoint

    @local_api_endpoint.setter
    def local_api_endpoint(self, local_api_endpoint):
        """Sets the local_api_endpoint of this IoXK8sClusterBootstrapV1alpha3KubeadmConfigSpecInitConfiguration.


        :param local_api_endpoint: The local_api_endpoint of this IoXK8sClusterBootstrapV1alpha3KubeadmConfigSpecInitConfiguration.  # noqa: E501
        :type: IoXK8sClusterBootstrapV1alpha3KubeadmConfigSpecInitConfigurationLocalAPIEndpoint
        """

        self._local_api_endpoint = local_api_endpoint

    @property
    def node_registration(self):
        """Gets the node_registration of this IoXK8sClusterBootstrapV1alpha3KubeadmConfigSpecInitConfiguration.  # noqa: E501


        :return: The node_registration of this IoXK8sClusterBootstrapV1alpha3KubeadmConfigSpecInitConfiguration.  # noqa: E501
        :rtype: IoXK8sClusterBootstrapV1alpha3KubeadmConfigSpecInitConfigurationNodeRegistration
        """
        return self._node_registration

    @node_registration.setter
    def node_registration(self, node_registration):
        """Sets the node_registration of this IoXK8sClusterBootstrapV1alpha3KubeadmConfigSpecInitConfiguration.


        :param node_registration: The node_registration of this IoXK8sClusterBootstrapV1alpha3KubeadmConfigSpecInitConfiguration.  # noqa: E501
        :type: IoXK8sClusterBootstrapV1alpha3KubeadmConfigSpecInitConfigurationNodeRegistration
        """

        self._node_registration = node_registration

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, IoXK8sClusterBootstrapV1alpha3KubeadmConfigSpecInitConfiguration):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, IoXK8sClusterBootstrapV1alpha3KubeadmConfigSpecInitConfiguration):
            return True

        return self.to_dict() != other.to_dict()
