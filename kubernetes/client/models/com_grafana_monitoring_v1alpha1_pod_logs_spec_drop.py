# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1.25.12
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from kubernetes.client.configuration import Configuration


class ComGrafanaMonitoringV1alpha1PodLogsSpecDrop(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'drop_counter_reason': 'str',
        'expression': 'str',
        'longer_than': 'str',
        'older_than': 'str',
        'source': 'str',
        'value': 'str'
    }

    attribute_map = {
        'drop_counter_reason': 'dropCounterReason',
        'expression': 'expression',
        'longer_than': 'longerThan',
        'older_than': 'olderThan',
        'source': 'source',
        'value': 'value'
    }

    def __init__(self, drop_counter_reason=None, expression=None, longer_than=None, older_than=None, source=None, value=None, local_vars_configuration=None):  # noqa: E501
        """ComGrafanaMonitoringV1alpha1PodLogsSpecDrop - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._drop_counter_reason = None
        self._expression = None
        self._longer_than = None
        self._older_than = None
        self._source = None
        self._value = None
        self.discriminator = None

        if drop_counter_reason is not None:
            self.drop_counter_reason = drop_counter_reason
        if expression is not None:
            self.expression = expression
        if longer_than is not None:
            self.longer_than = longer_than
        if older_than is not None:
            self.older_than = older_than
        if source is not None:
            self.source = source
        if value is not None:
            self.value = value

    @property
    def drop_counter_reason(self):
        """Gets the drop_counter_reason of this ComGrafanaMonitoringV1alpha1PodLogsSpecDrop.  # noqa: E501

        Every time a log line is dropped, the metric logentry_dropped_lines_total is incremented. A \"reason\" label is added, and can be customized by providing a custom value here. Defaults to \"drop_stage\".  # noqa: E501

        :return: The drop_counter_reason of this ComGrafanaMonitoringV1alpha1PodLogsSpecDrop.  # noqa: E501
        :rtype: str
        """
        return self._drop_counter_reason

    @drop_counter_reason.setter
    def drop_counter_reason(self, drop_counter_reason):
        """Sets the drop_counter_reason of this ComGrafanaMonitoringV1alpha1PodLogsSpecDrop.

        Every time a log line is dropped, the metric logentry_dropped_lines_total is incremented. A \"reason\" label is added, and can be customized by providing a custom value here. Defaults to \"drop_stage\".  # noqa: E501

        :param drop_counter_reason: The drop_counter_reason of this ComGrafanaMonitoringV1alpha1PodLogsSpecDrop.  # noqa: E501
        :type: str
        """

        self._drop_counter_reason = drop_counter_reason

    @property
    def expression(self):
        """Gets the expression of this ComGrafanaMonitoringV1alpha1PodLogsSpecDrop.  # noqa: E501

        RE2 regular expression.   If source is provided, the regex attempts to match the source.   If no source is provided, then the regex attempts to attach the log line.   If the provided regex matches the log line or a provided source, the line is dropped.  # noqa: E501

        :return: The expression of this ComGrafanaMonitoringV1alpha1PodLogsSpecDrop.  # noqa: E501
        :rtype: str
        """
        return self._expression

    @expression.setter
    def expression(self, expression):
        """Sets the expression of this ComGrafanaMonitoringV1alpha1PodLogsSpecDrop.

        RE2 regular expression.   If source is provided, the regex attempts to match the source.   If no source is provided, then the regex attempts to attach the log line.   If the provided regex matches the log line or a provided source, the line is dropped.  # noqa: E501

        :param expression: The expression of this ComGrafanaMonitoringV1alpha1PodLogsSpecDrop.  # noqa: E501
        :type: str
        """

        self._expression = expression

    @property
    def longer_than(self):
        """Gets the longer_than of this ComGrafanaMonitoringV1alpha1PodLogsSpecDrop.  # noqa: E501

        LongerThan will drop a log line if it its content is longer than this value (in bytes). Can be expressed as an integer (8192) or a number with a suffix (8kb).  # noqa: E501

        :return: The longer_than of this ComGrafanaMonitoringV1alpha1PodLogsSpecDrop.  # noqa: E501
        :rtype: str
        """
        return self._longer_than

    @longer_than.setter
    def longer_than(self, longer_than):
        """Sets the longer_than of this ComGrafanaMonitoringV1alpha1PodLogsSpecDrop.

        LongerThan will drop a log line if it its content is longer than this value (in bytes). Can be expressed as an integer (8192) or a number with a suffix (8kb).  # noqa: E501

        :param longer_than: The longer_than of this ComGrafanaMonitoringV1alpha1PodLogsSpecDrop.  # noqa: E501
        :type: str
        """

        self._longer_than = longer_than

    @property
    def older_than(self):
        """Gets the older_than of this ComGrafanaMonitoringV1alpha1PodLogsSpecDrop.  # noqa: E501

        OlderThan will be parsed as a Go duration. If the log line's timestamp is older than the current time minus the provided duration, it will be dropped.  # noqa: E501

        :return: The older_than of this ComGrafanaMonitoringV1alpha1PodLogsSpecDrop.  # noqa: E501
        :rtype: str
        """
        return self._older_than

    @older_than.setter
    def older_than(self, older_than):
        """Sets the older_than of this ComGrafanaMonitoringV1alpha1PodLogsSpecDrop.

        OlderThan will be parsed as a Go duration. If the log line's timestamp is older than the current time minus the provided duration, it will be dropped.  # noqa: E501

        :param older_than: The older_than of this ComGrafanaMonitoringV1alpha1PodLogsSpecDrop.  # noqa: E501
        :type: str
        """

        self._older_than = older_than

    @property
    def source(self):
        """Gets the source of this ComGrafanaMonitoringV1alpha1PodLogsSpecDrop.  # noqa: E501

        Name from the extract data to parse. If empty, uses the log message.  # noqa: E501

        :return: The source of this ComGrafanaMonitoringV1alpha1PodLogsSpecDrop.  # noqa: E501
        :rtype: str
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this ComGrafanaMonitoringV1alpha1PodLogsSpecDrop.

        Name from the extract data to parse. If empty, uses the log message.  # noqa: E501

        :param source: The source of this ComGrafanaMonitoringV1alpha1PodLogsSpecDrop.  # noqa: E501
        :type: str
        """

        self._source = source

    @property
    def value(self):
        """Gets the value of this ComGrafanaMonitoringV1alpha1PodLogsSpecDrop.  # noqa: E501

        Value can only be specified when source is specified. If the value provided is an exact match for the given source then the line will be dropped.   Mutually exclusive with expression.  # noqa: E501

        :return: The value of this ComGrafanaMonitoringV1alpha1PodLogsSpecDrop.  # noqa: E501
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this ComGrafanaMonitoringV1alpha1PodLogsSpecDrop.

        Value can only be specified when source is specified. If the value provided is an exact match for the given source then the line will be dropped.   Mutually exclusive with expression.  # noqa: E501

        :param value: The value of this ComGrafanaMonitoringV1alpha1PodLogsSpecDrop.  # noqa: E501
        :type: str
        """

        self._value = value

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ComGrafanaMonitoringV1alpha1PodLogsSpecDrop):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, ComGrafanaMonitoringV1alpha1PodLogsSpecDrop):
            return True

        return self.to_dict() != other.to_dict()
