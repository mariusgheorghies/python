# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1.25.12
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from kubernetes.client.configuration import Configuration


class IoQuestdbCrdV1alpha1QuestDBCopySpecOptions(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'delimiter': 'str',
        'headers': 'bool',
        'on_error': 'str',
        'partition_by': 'str',
        'timestamp_column': 'str',
        'timestamp_format': 'str'
    }

    attribute_map = {
        'delimiter': 'delimiter',
        'headers': 'headers',
        'on_error': 'onError',
        'partition_by': 'partitionBy',
        'timestamp_column': 'timestampColumn',
        'timestamp_format': 'timestampFormat'
    }

    def __init__(self, delimiter=None, headers=None, on_error=None, partition_by=None, timestamp_column=None, timestamp_format=None, local_vars_configuration=None):  # noqa: E501
        """IoQuestdbCrdV1alpha1QuestDBCopySpecOptions - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._delimiter = None
        self._headers = None
        self._on_error = None
        self._partition_by = None
        self._timestamp_column = None
        self._timestamp_format = None
        self.discriminator = None

        if delimiter is not None:
            self.delimiter = delimiter
        if headers is not None:
            self.headers = headers
        if on_error is not None:
            self.on_error = on_error
        if partition_by is not None:
            self.partition_by = partition_by
        if timestamp_column is not None:
            self.timestamp_column = timestamp_column
        if timestamp_format is not None:
            self.timestamp_format = timestamp_format

    @property
    def delimiter(self):
        """Gets the delimiter of this IoQuestdbCrdV1alpha1QuestDBCopySpecOptions.  # noqa: E501


        :return: The delimiter of this IoQuestdbCrdV1alpha1QuestDBCopySpecOptions.  # noqa: E501
        :rtype: str
        """
        return self._delimiter

    @delimiter.setter
    def delimiter(self, delimiter):
        """Sets the delimiter of this IoQuestdbCrdV1alpha1QuestDBCopySpecOptions.


        :param delimiter: The delimiter of this IoQuestdbCrdV1alpha1QuestDBCopySpecOptions.  # noqa: E501
        :type: str
        """

        self._delimiter = delimiter

    @property
    def headers(self):
        """Gets the headers of this IoQuestdbCrdV1alpha1QuestDBCopySpecOptions.  # noqa: E501


        :return: The headers of this IoQuestdbCrdV1alpha1QuestDBCopySpecOptions.  # noqa: E501
        :rtype: bool
        """
        return self._headers

    @headers.setter
    def headers(self, headers):
        """Sets the headers of this IoQuestdbCrdV1alpha1QuestDBCopySpecOptions.


        :param headers: The headers of this IoQuestdbCrdV1alpha1QuestDBCopySpecOptions.  # noqa: E501
        :type: bool
        """

        self._headers = headers

    @property
    def on_error(self):
        """Gets the on_error of this IoQuestdbCrdV1alpha1QuestDBCopySpecOptions.  # noqa: E501


        :return: The on_error of this IoQuestdbCrdV1alpha1QuestDBCopySpecOptions.  # noqa: E501
        :rtype: str
        """
        return self._on_error

    @on_error.setter
    def on_error(self, on_error):
        """Sets the on_error of this IoQuestdbCrdV1alpha1QuestDBCopySpecOptions.


        :param on_error: The on_error of this IoQuestdbCrdV1alpha1QuestDBCopySpecOptions.  # noqa: E501
        :type: str
        """

        self._on_error = on_error

    @property
    def partition_by(self):
        """Gets the partition_by of this IoQuestdbCrdV1alpha1QuestDBCopySpecOptions.  # noqa: E501

        NOTE: json tags are required.  Any new fields you add must have json tags for the fields to be serialized.  # noqa: E501

        :return: The partition_by of this IoQuestdbCrdV1alpha1QuestDBCopySpecOptions.  # noqa: E501
        :rtype: str
        """
        return self._partition_by

    @partition_by.setter
    def partition_by(self, partition_by):
        """Sets the partition_by of this IoQuestdbCrdV1alpha1QuestDBCopySpecOptions.

        NOTE: json tags are required.  Any new fields you add must have json tags for the fields to be serialized.  # noqa: E501

        :param partition_by: The partition_by of this IoQuestdbCrdV1alpha1QuestDBCopySpecOptions.  # noqa: E501
        :type: str
        """

        self._partition_by = partition_by

    @property
    def timestamp_column(self):
        """Gets the timestamp_column of this IoQuestdbCrdV1alpha1QuestDBCopySpecOptions.  # noqa: E501


        :return: The timestamp_column of this IoQuestdbCrdV1alpha1QuestDBCopySpecOptions.  # noqa: E501
        :rtype: str
        """
        return self._timestamp_column

    @timestamp_column.setter
    def timestamp_column(self, timestamp_column):
        """Sets the timestamp_column of this IoQuestdbCrdV1alpha1QuestDBCopySpecOptions.


        :param timestamp_column: The timestamp_column of this IoQuestdbCrdV1alpha1QuestDBCopySpecOptions.  # noqa: E501
        :type: str
        """

        self._timestamp_column = timestamp_column

    @property
    def timestamp_format(self):
        """Gets the timestamp_format of this IoQuestdbCrdV1alpha1QuestDBCopySpecOptions.  # noqa: E501


        :return: The timestamp_format of this IoQuestdbCrdV1alpha1QuestDBCopySpecOptions.  # noqa: E501
        :rtype: str
        """
        return self._timestamp_format

    @timestamp_format.setter
    def timestamp_format(self, timestamp_format):
        """Sets the timestamp_format of this IoQuestdbCrdV1alpha1QuestDBCopySpecOptions.


        :param timestamp_format: The timestamp_format of this IoQuestdbCrdV1alpha1QuestDBCopySpecOptions.  # noqa: E501
        :type: str
        """

        self._timestamp_format = timestamp_format

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, IoQuestdbCrdV1alpha1QuestDBCopySpecOptions):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, IoQuestdbCrdV1alpha1QuestDBCopySpecOptions):
            return True

        return self.to_dict() != other.to_dict()
