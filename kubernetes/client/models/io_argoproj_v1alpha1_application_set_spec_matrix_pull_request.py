# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1.25.12
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from kubernetes.client.configuration import Configuration


class IoArgoprojV1alpha1ApplicationSetSpecMatrixPullRequest(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'bitbucket_server': 'IoArgoprojV1alpha1ApplicationSetSpecMatrixPullRequestBitbucketServer',
        'filters': 'list[IoArgoprojV1alpha1ApplicationSetSpecMatrixPullRequestFilters]',
        'gitea': 'IoArgoprojV1alpha1ApplicationSetSpecMatrixPullRequestGitea',
        'github': 'IoArgoprojV1alpha1ApplicationSetSpecMatrixPullRequestGithub',
        'gitlab': 'IoArgoprojV1alpha1ApplicationSetSpecMatrixPullRequestGitlab',
        'requeue_after_seconds': 'int',
        'template': 'IoArgoprojV1alpha1ApplicationSetSpecClusterDecisionResourceTemplate'
    }

    attribute_map = {
        'bitbucket_server': 'bitbucketServer',
        'filters': 'filters',
        'gitea': 'gitea',
        'github': 'github',
        'gitlab': 'gitlab',
        'requeue_after_seconds': 'requeueAfterSeconds',
        'template': 'template'
    }

    def __init__(self, bitbucket_server=None, filters=None, gitea=None, github=None, gitlab=None, requeue_after_seconds=None, template=None, local_vars_configuration=None):  # noqa: E501
        """IoArgoprojV1alpha1ApplicationSetSpecMatrixPullRequest - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._bitbucket_server = None
        self._filters = None
        self._gitea = None
        self._github = None
        self._gitlab = None
        self._requeue_after_seconds = None
        self._template = None
        self.discriminator = None

        if bitbucket_server is not None:
            self.bitbucket_server = bitbucket_server
        if filters is not None:
            self.filters = filters
        if gitea is not None:
            self.gitea = gitea
        if github is not None:
            self.github = github
        if gitlab is not None:
            self.gitlab = gitlab
        if requeue_after_seconds is not None:
            self.requeue_after_seconds = requeue_after_seconds
        if template is not None:
            self.template = template

    @property
    def bitbucket_server(self):
        """Gets the bitbucket_server of this IoArgoprojV1alpha1ApplicationSetSpecMatrixPullRequest.  # noqa: E501


        :return: The bitbucket_server of this IoArgoprojV1alpha1ApplicationSetSpecMatrixPullRequest.  # noqa: E501
        :rtype: IoArgoprojV1alpha1ApplicationSetSpecMatrixPullRequestBitbucketServer
        """
        return self._bitbucket_server

    @bitbucket_server.setter
    def bitbucket_server(self, bitbucket_server):
        """Sets the bitbucket_server of this IoArgoprojV1alpha1ApplicationSetSpecMatrixPullRequest.


        :param bitbucket_server: The bitbucket_server of this IoArgoprojV1alpha1ApplicationSetSpecMatrixPullRequest.  # noqa: E501
        :type: IoArgoprojV1alpha1ApplicationSetSpecMatrixPullRequestBitbucketServer
        """

        self._bitbucket_server = bitbucket_server

    @property
    def filters(self):
        """Gets the filters of this IoArgoprojV1alpha1ApplicationSetSpecMatrixPullRequest.  # noqa: E501


        :return: The filters of this IoArgoprojV1alpha1ApplicationSetSpecMatrixPullRequest.  # noqa: E501
        :rtype: list[IoArgoprojV1alpha1ApplicationSetSpecMatrixPullRequestFilters]
        """
        return self._filters

    @filters.setter
    def filters(self, filters):
        """Sets the filters of this IoArgoprojV1alpha1ApplicationSetSpecMatrixPullRequest.


        :param filters: The filters of this IoArgoprojV1alpha1ApplicationSetSpecMatrixPullRequest.  # noqa: E501
        :type: list[IoArgoprojV1alpha1ApplicationSetSpecMatrixPullRequestFilters]
        """

        self._filters = filters

    @property
    def gitea(self):
        """Gets the gitea of this IoArgoprojV1alpha1ApplicationSetSpecMatrixPullRequest.  # noqa: E501


        :return: The gitea of this IoArgoprojV1alpha1ApplicationSetSpecMatrixPullRequest.  # noqa: E501
        :rtype: IoArgoprojV1alpha1ApplicationSetSpecMatrixPullRequestGitea
        """
        return self._gitea

    @gitea.setter
    def gitea(self, gitea):
        """Sets the gitea of this IoArgoprojV1alpha1ApplicationSetSpecMatrixPullRequest.


        :param gitea: The gitea of this IoArgoprojV1alpha1ApplicationSetSpecMatrixPullRequest.  # noqa: E501
        :type: IoArgoprojV1alpha1ApplicationSetSpecMatrixPullRequestGitea
        """

        self._gitea = gitea

    @property
    def github(self):
        """Gets the github of this IoArgoprojV1alpha1ApplicationSetSpecMatrixPullRequest.  # noqa: E501


        :return: The github of this IoArgoprojV1alpha1ApplicationSetSpecMatrixPullRequest.  # noqa: E501
        :rtype: IoArgoprojV1alpha1ApplicationSetSpecMatrixPullRequestGithub
        """
        return self._github

    @github.setter
    def github(self, github):
        """Sets the github of this IoArgoprojV1alpha1ApplicationSetSpecMatrixPullRequest.


        :param github: The github of this IoArgoprojV1alpha1ApplicationSetSpecMatrixPullRequest.  # noqa: E501
        :type: IoArgoprojV1alpha1ApplicationSetSpecMatrixPullRequestGithub
        """

        self._github = github

    @property
    def gitlab(self):
        """Gets the gitlab of this IoArgoprojV1alpha1ApplicationSetSpecMatrixPullRequest.  # noqa: E501


        :return: The gitlab of this IoArgoprojV1alpha1ApplicationSetSpecMatrixPullRequest.  # noqa: E501
        :rtype: IoArgoprojV1alpha1ApplicationSetSpecMatrixPullRequestGitlab
        """
        return self._gitlab

    @gitlab.setter
    def gitlab(self, gitlab):
        """Sets the gitlab of this IoArgoprojV1alpha1ApplicationSetSpecMatrixPullRequest.


        :param gitlab: The gitlab of this IoArgoprojV1alpha1ApplicationSetSpecMatrixPullRequest.  # noqa: E501
        :type: IoArgoprojV1alpha1ApplicationSetSpecMatrixPullRequestGitlab
        """

        self._gitlab = gitlab

    @property
    def requeue_after_seconds(self):
        """Gets the requeue_after_seconds of this IoArgoprojV1alpha1ApplicationSetSpecMatrixPullRequest.  # noqa: E501


        :return: The requeue_after_seconds of this IoArgoprojV1alpha1ApplicationSetSpecMatrixPullRequest.  # noqa: E501
        :rtype: int
        """
        return self._requeue_after_seconds

    @requeue_after_seconds.setter
    def requeue_after_seconds(self, requeue_after_seconds):
        """Sets the requeue_after_seconds of this IoArgoprojV1alpha1ApplicationSetSpecMatrixPullRequest.


        :param requeue_after_seconds: The requeue_after_seconds of this IoArgoprojV1alpha1ApplicationSetSpecMatrixPullRequest.  # noqa: E501
        :type: int
        """

        self._requeue_after_seconds = requeue_after_seconds

    @property
    def template(self):
        """Gets the template of this IoArgoprojV1alpha1ApplicationSetSpecMatrixPullRequest.  # noqa: E501


        :return: The template of this IoArgoprojV1alpha1ApplicationSetSpecMatrixPullRequest.  # noqa: E501
        :rtype: IoArgoprojV1alpha1ApplicationSetSpecClusterDecisionResourceTemplate
        """
        return self._template

    @template.setter
    def template(self, template):
        """Sets the template of this IoArgoprojV1alpha1ApplicationSetSpecMatrixPullRequest.


        :param template: The template of this IoArgoprojV1alpha1ApplicationSetSpecMatrixPullRequest.  # noqa: E501
        :type: IoArgoprojV1alpha1ApplicationSetSpecClusterDecisionResourceTemplate
        """

        self._template = template

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, IoArgoprojV1alpha1ApplicationSetSpecMatrixPullRequest):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, IoArgoprojV1alpha1ApplicationSetSpecMatrixPullRequest):
            return True

        return self.to_dict() != other.to_dict()
